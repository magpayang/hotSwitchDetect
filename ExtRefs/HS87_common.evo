enVision:"bl8:R15.7.2:S4.5";
PatternMap DefaultPatternMap {
    DefaultSourcePath = "";
    Pattern dut_powerup {
        File "dut_powerup";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_uart_read {
        File "dut_uart_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_uart_write {
        File "dut_uart_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_uart_read {
        File "dnut_uart_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_uart_write {
        File "dnut_uart_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_clear_i2c {
        File "util_dnut_clear_i2c";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_uart_read {
        File "util_dnut_uart_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_uart_write {
        File "util_dnut_uart_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_i2c_read {
        File "dut_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_i2c_write {
        File "dut_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_i2c_read {
        File "dnut_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_i2c_write {
        File "dnut_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_i2c_read {
        File "util_dnut_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_i2c_write {
        File "util_dnut_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_saf_compression_chain {
        File "hs87d_saf_compression_chain";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_saf_compression_1500 {
        File "hs87d_saf_compression_1500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_saf_compression_4500 {
        File "hs87d_saf_compression_4500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_saf_compression_7500 {
        File "hs87d_saf_compression_7500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_saf_compression_10500 {
        File "hs87d_saf_compression_10500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_saf_compression_12500 {
        File "hs87d_saf_compression_12500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_chain {
        File "hs87d_tdf_compression_chain";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass1_1500 {
        File "hs87d_tdf_compression_pass1_1500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass2_1500 {
        File "hs87d_tdf_compression_pass2_1500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass3_2500 {
        File "hs87d_tdf_compression_pass3_2500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass1_4500 {
        File "hs87d_tdf_compression_pass1_4500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass2_4500 {
        File "hs87d_tdf_compression_pass2_4500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass2_6500 {
        File "hs87d_tdf_compression_pass2_6500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass1_7500 {
        File "hs87d_tdf_compression_pass1_7500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass1_10500 {
        File "hs87d_tdf_compression_pass1_10500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass1_13500 {
        File "hs87d_tdf_compression_pass1_13500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_tdf_compression_pass1_15500 {
        File "hs87d_tdf_compression_pass1_15500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_chain {
        File "hs87d_sbf_compression_chain";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_1500 {
        File "hs87d_sbf_compression_1500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_4500 {
        File "hs87d_sbf_compression_4500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_7500 {
        File "hs87d_sbf_compression_7500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_10500 {
        File "hs87d_sbf_compression_10500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_13500 {
        File "hs87d_sbf_compression_13500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_16500 {
        File "hs87d_sbf_compression_16500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_19500 {
        File "hs87d_sbf_compression_19500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_22500 {
        File "hs87d_sbf_compression_22500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_25500 {
        File "hs87d_sbf_compression_25500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_28500 {
        File "hs87d_sbf_compression_28500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_31500 {
        File "hs87d_sbf_compression_31500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_34500 {
        File "hs87d_sbf_compression_34500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_37500 {
        File "hs87d_sbf_compression_37500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_40500 {
        File "hs87d_sbf_compression_40500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_43500 {
        File "hs87d_sbf_compression_43500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d_sbf_compression_45500 {
        File "hs87d_sbf_compression_45500";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_saf {
        File "dpll_saf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_tdf {
        File "dpll_tdf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_sbf {
        File "dpll_sbf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_dbf {
        File "dpll_dbf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_vil_vih {
        File "dut_vil_vih";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_vol_voh {
        File "dut_vol_voh";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_noreg_i2c_read {
        File "util_dnut_noreg_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_noreg_i2c_write {
        File "util_dnut_noreg_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern fpga {
        File "fpga";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern osc_id_check {
        File "osc_id_check";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern mbist_func {
        File "mbist_func";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_uart_read2 {
        File "dut_uart_read2";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern mbist_check {
        File "mbist_check";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_hdmi_mbist {
        File "dut_hdmi_mbist";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern LMN_Vih_Vil_pat {
        File "LMN_Vih_Vil_pat";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_Write_Char {
        File "SER_I2C_Write_Char";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_STOP_WRITE_CHAR {
        File "SER_I2C_STOP_WRITE_CHAR";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_rgmii_gross_fct {
        File "dut_rgmii_gross_fct";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_to_dut_i2c_cc {
        File "dnut_to_dut_i2c_cc";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_to_dnut_i2c_cc {
        File "dut_to_dnut_i2c_cc";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_Write_FT {
        File "SER_I2C_Write_FT";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_Write {
        File "OTP_Write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_Read {
        File "OTP_Read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_STOP_WRITE_FT {
        File "SER_I2C_STOP_WRITE_FT";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern DDC_I2C_WRITE {
        File "DDC_I2C_WRITE";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern DDC_I2C_READ {
        File "DDC_I2C_READ";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern DDC_I2C_READ_CHAR {
        File "DDC_I2C_READ_CHAR";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_WRITE_BURST_MATCH_UART {
        File "OTP_WRITE_BURST_MATCH_UART";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_powerup_no_fpga {
        File "dut_powerup_no_fpga";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_WRITE_READ_BURST_UART {
        File "OTP_WRITE_READ_BURST_UART";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_UART_Write_LockTime {
        File "SER_UART_Write_LockTime";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern I2S_16bit_Write {
        File "I2S_16bit_Write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern I2S_16bit_Write_Hold {
        File "I2S_16bit_Write_Hold";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_i2c_read_address {
        File "dut_i2c_read_address";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_spi_timing {
        File "dut_spi_timing";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
}
ETest ATPG {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = ATPG_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.AtpgTest";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SafCompTest = evFunctionalTest {
                Number = Expr { String = "1519200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_CHAIN_MIN'"; }
            }
            SafCompTest1 = evFunctionalTest {
                Number = Expr { String = "1519201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_1500_MIN'"; }
            }
            SafCompTest2 = evFunctionalTest {
                Number = Expr { String = "1519202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_4500_MIN'"; }
            }
            SafCompTest3 = evFunctionalTest {
                Number = Expr { String = "1519203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_7500_MIN'"; }
            }
            SafCompTest4 = evFunctionalTest {
                Number = Expr { String = "1519204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_10500_MIN'"; }
            }
            SafCompTest5 = evFunctionalTest {
                Number = Expr { String = "1519205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_12500_MIN'"; }
            }
            SafCompTest6 = evFunctionalTest {
                Number = Expr { String = "1519206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_______MIN'"; }
            }
            SafCompTest7 = evFunctionalTest {
                Number = Expr { String = "1519207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_______MIN'"; }
            }
            TdfCompTest = evFunctionalTest {
                Number = Expr { String = "1519220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_CHAIN_MIN'"; }
            }
            TdfCompTest1 = evFunctionalTest {
                Number = Expr { String = "1519221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_01500_MIN'"; }
            }
            TdfCompTest2 = evFunctionalTest {
                Number = Expr { String = "1519222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_01500_MIN'"; }
            }
            TdfCompTest3 = evFunctionalTest {
                Number = Expr { String = "1519223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_02500_MIN'"; }
            }
            TdfCompTest4 = evFunctionalTest {
                Number = Expr { String = "1519224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_04500_MIN'"; }
            }
            TdfCompTest5 = evFunctionalTest {
                Number = Expr { String = "1519225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_04500_MIN'"; }
            }
            TdfCompTest6 = evFunctionalTest {
                Number = Expr { String = "1519226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_06500_MIN'"; }
            }
            TdfCompTest7 = evFunctionalTest {
                Number = Expr { String = "1519227"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_07500_MIN'"; }
            }
            TdfCompTest8 = evFunctionalTest {
                Number = Expr { String = "1519228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_10500_MIN'"; }
            }
            TdfCompTest9 = evFunctionalTest {
                Number = Expr { String = "1519229"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_13500_MIN'"; }
            }
            TdfCompTest10 = evFunctionalTest {
                Number = Expr { String = "1519230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_15500_MIN'"; }
            }
            SbfCompTest = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_CHAIN_MIN'"; }
            }
            SbfCompTest1 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_01500_MIN'"; }
            }
            SbfCompTest2 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_04500_MIN'"; }
            }
            SbfCompTest3 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_07500_MIN'"; }
            }
            SbfCompTest4 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_10500_MIN'"; }
            }
            SbfCompTest5 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_13500_MIN'"; }
            }
            SbfCompTest6 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_16500_MIN'"; }
            }
            SbfCompTest7 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_19500_MIN'"; }
            }
            SbfCompTest8 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_22500_MIN'"; }
            }
            SbfCompTest9 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_25500_MIN'"; }
            }
            SbfCompTest10 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_28500_MIN'"; }
            }
            SbfCompTest11 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_31500_MIN'"; }
            }
            SbfCompTest12 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_34500_MIN'"; }
            }
            SbfCompTest13 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_37500_MIN'"; }
            }
            SbfCompTest14 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_40500_MIN'"; }
            }
            SbfCompTest15 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_43500_MIN'"; }
            }
            SbfCompTest16 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_45500_MIN'"; }
            }
            SafDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SAF_MIN'"; }
            }
            TdfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519255"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_TDF_MIN'"; }
            }
            SbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SBF_MIN'"; }
            }
            DbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519265"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_DBF_MIN'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.AtpgTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SafCompTest = evFunctionalTest {
                Number = Expr { String = "1519900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_CHAIN_MAX'"; }
            }
            SafCompTest1 = evFunctionalTest {
                Number = Expr { String = "1519901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_1500_MAX'"; }
            }
            SafCompTest2 = evFunctionalTest {
                Number = Expr { String = "1519902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_4500_MAX'"; }
            }
            SafCompTest3 = evFunctionalTest {
                Number = Expr { String = "1519903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_7500_MAX'"; }
            }
            SafCompTest4 = evFunctionalTest {
                Number = Expr { String = "1519904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_10500_MAX'"; }
            }
            SafCompTest5 = evFunctionalTest {
                Number = Expr { String = "1519905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_12500_MAX'"; }
            }
            SafCompTest6 = evFunctionalTest {
                Number = Expr { String = "1519906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_______MAX'"; }
            }
            SafCompTest7 = evFunctionalTest {
                Number = Expr { String = "1519907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_______MAX'"; }
            }
            TdfCompTest = evFunctionalTest {
                Number = Expr { String = "1519920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_CHAIN_MAX'"; }
            }
            TdfCompTest1 = evFunctionalTest {
                Number = Expr { String = "1519921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_01500_MAX'"; }
            }
            TdfCompTest2 = evFunctionalTest {
                Number = Expr { String = "1519922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_01500_MAX'"; }
            }
            TdfCompTest3 = evFunctionalTest {
                Number = Expr { String = "1519923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_02500_MAX'"; }
            }
            TdfCompTest4 = evFunctionalTest {
                Number = Expr { String = "1519924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_04500_MAX'"; }
            }
            TdfCompTest5 = evFunctionalTest {
                Number = Expr { String = "1519925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_04500_MAX'"; }
            }
            TdfCompTest6 = evFunctionalTest {
                Number = Expr { String = "1519926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_06500_MAX'"; }
            }
            TdfCompTest7 = evFunctionalTest {
                Number = Expr { String = "1519927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_07500_MAX'"; }
            }
            TdfCompTest8 = evFunctionalTest {
                Number = Expr { String = "1519928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_10500_MAX'"; }
            }
            TdfCompTest9 = evFunctionalTest {
                Number = Expr { String = "1519929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_13500_MAX'"; }
            }
            TdfCompTest10 = evFunctionalTest {
                Number = Expr { String = "1519930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P1_15500_MAX'"; }
            }
            SbfCompTest = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_CHAIN_MAX'"; }
            }
            SbfCompTest1 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_01500_MAX'"; }
            }
            SbfCompTest2 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_04500_MAX'"; }
            }
            SbfCompTest3 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_07500_MAX'"; }
            }
            SbfCompTest4 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_10500_MAX'"; }
            }
            SbfCompTest5 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_13500_MAX'"; }
            }
            SbfCompTest6 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_16500_MAX'"; }
            }
            SbfCompTest7 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_19500_MAX'"; }
            }
            SbfCompTest8 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_22500_MAX'"; }
            }
            SbfCompTest9 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_25500_MAX'"; }
            }
            SbfCompTest10 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_28500_MAX'"; }
            }
            SbfCompTest11 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_31500_MAX'"; }
            }
            SbfCompTest12 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_34500_MAX'"; }
            }
            SbfCompTest13 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_37500_MAX'"; }
            }
            SbfCompTest14 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_40500_MAX'"; }
            }
            SbfCompTest15 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_43500_MAX'"; }
            }
            SbfCompTest16 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_P1_45500_MAX'"; }
            }
            SafDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519950"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SAF_MAX'"; }
            }
            TdfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519955"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_TDF_MAX'"; }
            }
            SbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519960"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SBF_MAX'"; }
            }
            DbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519965"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_DBF_MAX'"; }
            }
        }
    }
}
ETest ContactTestEndMRQ {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_x_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536009"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536010"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_y_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536011"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536012"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_END'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest ContactTestFrontMRQ {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    Exit[0] =         MicroFlow  {
            Event[0] {
                Value = Expr { String = "#"; Mode = Output; }
                Index = Expr { String = "1"; }
                Enable = Expr { String = "TRUE"; }
                Method {
                        MicroFlowMid = "dc_tests.mod.ContactExit";
                }
            }
        }
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_x_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536009"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536010"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_y_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536011"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536012"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_FRONT'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest ContactTestEndTQFN {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_END'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_END'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_END'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_END'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest ContactTestFrontTQFN {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    Exit[0] =         MicroFlow  {
            Event[0] {
                Value = Expr { String = "#"; Mode = Output; }
                Index = Expr { String = "1"; }
                Enable = Expr { String = "TRUE"; }
                Method {
                        MicroFlowMid = "dc_tests.mod.ContactExit";
                }
            }
        }
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_FRONT'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_FRONT'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_FRONT'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_FRONT'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest GmslLevelsTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslVolVohABUS";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VodHTest = evParametricTest {
                Number = Expr { String = "1053911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_VOD_MAX'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VodDeltaTest = evParametricTest {
                Number = Expr { String = "1054911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_VOD_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261054911.Min"; }
                evHighLimit = Expr { String = "TN261054911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VcmHTest = evParametricTest {
                Number = Expr { String = "1055911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_VOS_MAX'"; }
                evLowLimit = Expr { String = "TN261055911.Min"; }
                evHighLimit = Expr { String = "TN261055911.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_VOS_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodHTest = evParametricTest {
                Number = Expr { String = "1053912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODH_MAX'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodLTest = evParametricTest {
                Number = Expr { String = "1053913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODL_MAX'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodDeltaTest = evParametricTest {
                Number = Expr { String = "1054912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOD_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVcmHTest = evParametricTest {
                Number = Expr { String = "1055912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSH_MAX'"; }
                evLowLimit = Expr { String = "TN261055911.Min"; }
                evHighLimit = Expr { String = "TN261055911.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmLTest = evParametricTest {
                Number = Expr { String = "1055913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSL_MAX'"; }
                evLowLimit = Expr { String = "TN261055911.Min"; }
                evHighLimit = Expr { String = "TN261055911.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOS_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TxDisTest = evParametricTest {
                Number = Expr { String = "1056913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVdisFail;
                evTestText = Expr { String = "'GMSL_DISABLED_OUTPUT_MAX'"; }
                evLowLimit = Expr { String = "TN261056913.Min"; }
                evHighLimit = Expr { String = "TN261056913.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslVolVohABUS";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VodHTest = evParametricTest {
                Number = Expr { String = "1053211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_VOD_MIN'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VodDeltaTest = evParametricTest {
                Number = Expr { String = "1054211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_VOD_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VcmHTest = evParametricTest {
                Number = Expr { String = "1055211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_VOS_MIN'"; }
                evLowLimit = Expr { String = "TN261055211.Min"; }
                evHighLimit = Expr { String = "TN261055211.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_VOS_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodHTest = evParametricTest {
                Number = Expr { String = "1053212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODH_MIN'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodLTest = evParametricTest {
                Number = Expr { String = "1053213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODL_MIN'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodDeltaTest = evParametricTest {
                Number = Expr { String = "1054212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOD_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVcmHTest = evParametricTest {
                Number = Expr { String = "1055212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSH_MIN'"; }
                evLowLimit = Expr { String = "TN261055211.Min"; }
                evHighLimit = Expr { String = "TN261055211.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmLTest = evParametricTest {
                Number = Expr { String = "1055213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSL_MIN'"; }
                evLowLimit = Expr { String = "TN261055211.Min"; }
                evHighLimit = Expr { String = "TN261055211.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOS_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TxDisTest = evParametricTest {
                Number = Expr { String = "1056213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVdisFail;
                evTestText = Expr { String = "'GMSL_DISABLED_OUTPUT_MIN'"; }
                evLowLimit = Expr { String = "TN261056213.Min"; }
                evHighLimit = Expr { String = "TN261056213.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslVolVoh";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VodHTest = evParametricTest {
                Number = Expr { String = "1053901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_VOD_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261053901.Min"; }
                evHighLimit = Expr { String = "TN261053901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VodDeltaTest = evParametricTest {
                Number = Expr { String = "1054901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_VOD_DELTA_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VcmHTest = evParametricTest {
                Number = Expr { String = "1055901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_VOS_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261055901.Min"; }
                evHighLimit = Expr { String = "TN261055901.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_VOS_DELTA_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodHTest = evParametricTest {
                Number = Expr { String = "1053902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODH_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261053901.Min"; }
                evHighLimit = Expr { String = "TN261053901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodLTest = evParametricTest {
                Number = Expr { String = "1053903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODL_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261053901.Min"; }
                evHighLimit = Expr { String = "TN261053901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodDeltaTest = evParametricTest {
                Number = Expr { String = "1054902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOD_DELTA_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVcmHTest = evParametricTest {
                Number = Expr { String = "1055902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSH_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261055901.Min"; }
                evHighLimit = Expr { String = "TN261055901.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmLTest = evParametricTest {
                Number = Expr { String = "1055903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSL_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261055901.Min"; }
                evHighLimit = Expr { String = "TN261055901.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOS_DELTA_2PT_MAX'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TxDisTest = evParametricTest {
                Number = Expr { String = "1056903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVdisFail;
                evTestText = Expr { String = "'GMSL_DISABLED_OUTPUT_2PT_MAX'"; }
                evLowLimit = Expr { String = "0.1V"; }
                evHighLimit = Expr { String = "0.5V"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslVolVoh";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VodHTest = evParametricTest {
                Number = Expr { String = "1053201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_VOD_2PT_MIN'"; }
                evLowLimit = Expr { String = "TN261053901.Min"; }
                evHighLimit = Expr { String = "TN261053901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VodDeltaTest = evParametricTest {
                Number = Expr { String = "1054201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_VOD_DELTA_2PT_MIN'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VcmHTest = evParametricTest {
                Number = Expr { String = "1055201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_VOS_2PT_MIN'"; }
                evLowLimit = Expr { String = "VDD18.Max-750mV"; }
                evHighLimit = Expr { String = "TN261055201.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_VOS_DELTA_2PT_MIN'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodHTest = evParametricTest {
                Number = Expr { String = "1053202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODH_2PT_MIN'"; }
                evLowLimit = Expr { String = "TN261053901.Min"; }
                evHighLimit = Expr { String = "TN261053901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodLTest = evParametricTest {
                Number = Expr { String = "1053203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODL_2PT_MIN'"; }
                evLowLimit = Expr { String = "TN261053901.Min"; }
                evHighLimit = Expr { String = "TN261053901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodDeltaTest = evParametricTest {
                Number = Expr { String = "1054202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOD_DELTA_2PT_MIN'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVcmHTest = evParametricTest {
                Number = Expr { String = "1055202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSH_2PT_MIN'"; }
                evLowLimit = Expr { String = "VDD18.Max-750mV"; }
                evHighLimit = Expr { String = "TN261055201.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmLTest = evParametricTest {
                Number = Expr { String = "1055203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSL_2PT_MIN'"; }
                evLowLimit = Expr { String = "VDD18.Max-750mV"; }
                evHighLimit = Expr { String = "TN261055201.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOS_DELTA_2PT_MIN'"; }
                evLowLimit = Expr { String = "TN261054901.Min"; }
                evHighLimit = Expr { String = "TN261054901.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TxDisTest = evParametricTest {
                Number = Expr { String = "1056203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVdisFail;
                evTestText = Expr { String = "'GMSL_DISABLED_OUTPUT_2PT_MIN'"; }
                evLowLimit = Expr { String = "0.05V"; }
                evHighLimit = Expr { String = "0.4V"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslIos";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            Ios0VddTest = evParametricTest {
                Number = Expr { String = "1058901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_LOW_MAX'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1VddTest = evParametricTest {
                Number = Expr { String = "1058902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_HIGH_MAX'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios0GndTest = evParametricTest {
                Number = Expr { String = "1057901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_LOW_MAX'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1GndTest = evParametricTest {
                Number = Expr { String = "1057902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_HIGH_MAX'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslIos";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            Ios0VddTest = evParametricTest {
                Number = Expr { String = "1058201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_LOW_MIN'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1VddTest = evParametricTest {
                Number = Expr { String = "1058202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_HIGH_MIN'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios0GndTest = evParametricTest {
                Number = Expr { String = "1057201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_LOW_MIN'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1GndTest = evParametricTest {
                Number = Expr { String = "1057202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_HIGH_MIN'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputR";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1060501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_NOM_VI16'"; }
                evLowLimit = Expr { String = "TN261060501.Min"; }
                evHighLimit = Expr { String = "TN261060501.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Number = Expr { String = "1544501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Nom_VI16'"; }
                evLowLimit = Expr { String = "TN951501903.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TermPresTest = evParametricTest {
                Number = Expr { String = "1544502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'TERM_PRES_Res_Cal_Nom'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "128"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ExtResistanceTest = evParametricTest {
                Number = Expr { String = "1544503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'INFO_GMSL_2POINT_RO_NOM_VI16'"; }
                evLowLimit = Expr { String = "30Ohm"; }
                evHighLimit = Expr { String = "70Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputR";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1060502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_+6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "TN261060502.Min"; }
                evHighLimit = Expr { String = "TN261060502.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Number = Expr { String = "1544504"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_+6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "TN951501903.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TermPresTest = evParametricTest {
                Number = Expr { String = "1544505"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'TERM_PRES_Res_Cal_+6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "128"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "6"; }
            ExtResistanceTest = evParametricTest {
                Number = Expr { String = "1544506"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_2POINT_RO_+6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "30Ohm"; }
                evHighLimit = Expr { String = "70Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputR";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1060503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_-6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "TN261060502.Min"; }
                evHighLimit = Expr { String = "TN261060502.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Number = Expr { String = "1544507"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_-6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "TN951501903.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TermPresTest = evParametricTest {
                Number = Expr { String = "1544508"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'TERM_PRES_Res_Cal_-6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "128"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "-6"; }
            ExtResistanceTest = evParametricTest {
                Number = Expr { String = "1544509"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_2POINT_RO_-6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "30Ohm"; }
                evHighLimit = Expr { String = "70Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputResistanceSweep";
            Vddc = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            ResistanceTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_Min'"; }
                evLowLimit = Expr { String = "46Ohm"; }
                evHighLimit = Expr { String = "60Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Min'"; }
                evLowLimit = Expr { String = "1.0V"; }
                evHighLimit = Expr { String = "1.4V"; }
                evUnits = Expr { String = "'V'"; }
            }
            SweepMin = Expr { String = "0"; }
            SweepMax = Expr { String = "127"; }
            MinorTest = Expr { String = "1520000"; }
            dlog_string = Expr { String = "'Min'"; }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputResistanceSweep";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_Nom'"; }
                evLowLimit = Expr { String = "TN261060501.Min"; }
                evHighLimit = Expr { String = "TN261060501.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Nom'"; }
                evLowLimit = Expr { String = "TN261544501.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            SweepMin = Expr { String = "0"; }
            SweepMax = Expr { String = "127"; }
            MinorTest = Expr { String = "1540000"; }
            dlog_string = Expr { String = "'Nom'"; }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputResistanceSweep";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            ResistanceTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_Max'"; }
                evLowLimit = Expr { String = "46Ohm"; }
                evHighLimit = Expr { String = "60Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Max'"; }
                evLowLimit = Expr { String = "1.0V"; }
                evHighLimit = Expr { String = "1.4V"; }
                evUnits = Expr { String = "'V'"; }
            }
            SweepMin = Expr { String = "0"; }
            SweepMax = Expr { String = "127"; }
            MinorTest = Expr { String = "1590000"; }
            dlog_string = Expr { String = "'Max'"; }
        }
    }
}
ETest GpioFuncTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "gpio.mod.GpioFunc";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6.0"; }
            StFreqGb = Expr { String = "0.1875"; }
            gng_lim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1511201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1511202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1511203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1511204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1511205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1511206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1511207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz Comp Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1511208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1511209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1511210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz Comp Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1511211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1511212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1516201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Rev 100KHz UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1516202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1516203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1516204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Rev 200KHz Comp Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1516205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1516206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "gpio.mod.GpioFunc";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6.0"; }
            StFreqGb = Expr { String = "0.1875"; }
            gng_lim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1511201"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1511202"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1511203"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1511204"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1511205"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1511206"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1511207"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz Comp Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1511208"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1511209"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1511210"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Fwd 400KHz Comp Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1511211"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1511212"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1516201"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Rev 100KHz UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1516202"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1516203"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1516204"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO Rev 200KHz Comp Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1516205"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of data captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1516206"; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number of Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
            }
        }
    }
}
ETest HDMI_At_Speed {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "TRUE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "160MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "16"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "942"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "943"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "944"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "945"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "946"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "TN181499203.Min"; }
                evHighLimit = Expr { String = "TN181499203.Max"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "14.9"; }
                evHighLimit = Expr { String = "15.1"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499918"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min"; }
                evHighLimit = Expr { String = "TN181849901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min"; }
                evHighLimit = Expr { String = "TN181848901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1850901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1847901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1846901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "14.5"; }
                evHighLimit = Expr { String = "15.5"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181744901.Min"; }
                evHighLimit = Expr { String = "TN181744901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181742901.Min"; }
                evHighLimit = Expr { String = "TN181742901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "976"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499515"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499516"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499517"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499518"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181849901.Min"; }
                evHighLimit = Expr { String = "TN181849901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181742501.Min"; }
                evHighLimit = Expr { String = "TN181742501.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181743501.Min"; }
                evHighLimit = Expr { String = "TN181743501.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_1p9V_other_VDD_Typ'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "576"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN180000576.Min"; }
                evHighLimit = Expr { String = "TN180000576.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "300MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499919"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "295MHz"; }
                evHighLimit = Expr { String = "305MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499953"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "961"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "200mA"; }
                evHighLimit = Expr { String = "650mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "962"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "120mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "963"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "30mA"; }
                evHighLimit = Expr { String = "100mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "964"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "965"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "966"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "967"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "300MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "295MHz"; }
                evHighLimit = Expr { String = "305MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "224"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "225"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "226"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "227"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "420MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI Frequency_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181499930.Min"; }
                evHighLimit = Expr { String = "TN181499930.Max"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_Port A oLDI Frequency_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI Func A_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499933"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI Func B_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDD_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181849905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD18_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181848905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD33_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181845905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDA_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181845906.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845907.Min"; }
                evHighLimit = Expr { String = "TN181845907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_420MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181845907.Min"; }
                evHighLimit = Expr { String = "TN181845907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO25_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1uA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI Frequency_6G_1p5G_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_Port A oLDI Frequency_6G_1p5G_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI Func A_6G_1p5G_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI Func B_6G_1p5G_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "245"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "247"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "1.5"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI Frequency_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_Port A oLDI Frequency_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI Func A_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI Func B_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "244"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "245"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "246"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "247"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
        }
    }
}
ETest HDMI_At_Speed_104 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499903"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499904"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499905"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499906"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "160MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "16"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499911"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499912"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499913"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499914"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499203"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499204"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499205"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499206"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499915"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499916"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499917"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499918"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "200mA"; }
                evHighLimit = Expr { String = "400mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "120mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "30mA"; }
                evHighLimit = Expr { String = "100mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
}
ETest HDMI_At_Speed_160 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499903"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499904"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499905"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499906"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "160MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "16"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499911"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499912"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499913"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499914"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499203"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499204"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499205"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499206"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499915"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499916"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port A oLDI Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499917"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func A_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499918"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI Func B_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "200mA"; }
                evHighLimit = Expr { String = "400mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "120mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "30mA"; }
                evHighLimit = Expr { String = "100mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
        }
    }
}
ETest HdmiDcLevels {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = OTP_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.HDMITermRKelvin";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            IForce = Expr { String = "-1.9mA"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1564502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_R_TYP'"; }
                evLowLimit = Expr { String = "TN301564902.Min"; }
                evHighLimit = Expr { String = "TN301564902.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            RX0_AveTest = evParametricTest {
                Number = Expr { String = "1564503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_RX0_AVERAGE_VALUE_TYP'"; }
                evLowLimit = Expr { String = "TN261060502.Min"; }
                evHighLimit = Expr { String = "TN301564503.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            ExistingTrimBitsTest = evParametricTest {
                Number = Expr { String = "5264510"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_INCOMING_OTP_BITS_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            TrimAdjustTest = evParametricTest {
                Number = Expr { String = "5264512"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_ADJUST_TYP'"; }
                evLowLimit = Expr { String = "-4"; }
                evHighLimit = Expr { String = "3"; }
                evUnits = Expr { String = "'LSB'"; }
            }
            NewTrimValueTest = evParametricTest {
                Number = Expr { String = "5264514"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_VALUE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            trim_code_postTest = evParametricTest {
                Number = Expr { String = "94"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_OTP_READBACK_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            AlreadyTrimmedTest = evParametricTest {
                Number = Expr { String = "95"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'INFO_HDMI_TERM_TRIM_ALREADY_TRIMMED_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CalculateTrimCodes = Expr { String = "TRUE"; }
            TryCodes = Expr { String = "FALSE"; }
            ClearTrimCodes = Expr { String = "TRUE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.HDMITermTrimOTP";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "5264001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'INFO_HDMI_TERM_TRIM_ALREADY_LOCKED_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            ExistingTrimBitsTest = evParametricTest {
                Number = Expr { String = "5264002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_INCOMING_OTP_VALUE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            NewTrimValueTest = evParametricTest {
                Number = Expr { String = "5264003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_CODE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            trim_code_postTest = evParametricTest {
                Number = Expr { String = "5264004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_OTP_VALUE_AFTER_WRITE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.HDMITermRKelvin";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            IForce = Expr { String = "-1.9mA"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "5264520"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_R_POST_TRIM_TYP'"; }
                evLowLimit = Expr { String = "TN305264520.Min"; }
                evHighLimit = Expr { String = "TN305264520.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            RX0_AveTest = evParametricTest {
                Number = Expr { String = "5264522"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_POST_TRIM_RX0_AVERAGE_VALUE_TYP'"; }
                evLowLimit = Expr { String = "TN305264520.Min"; }
                evHighLimit = Expr { String = "TN305264520.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            ExistingTrimBitsTest = evParametricTest {
                Number = Expr { String = "5264524"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_POST_TRIM_OTP_BITS_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            TrimAdjustTest = evParametricTest {
                Number = Expr { String = "96"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            NewTrimValueTest = evParametricTest {
                Number = Expr { String = "97"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            trim_code_postTest = evParametricTest {
                Number = Expr { String = "98"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            AlreadyTrimmedTest = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            CalculateTrimCodes = Expr { String = "FALSE"; }
            TryCodes = Expr { String = "FALSE"; }
            ClearTrimCodes = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.HDMIOpenPinV";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            IForce = Expr { String = "-100nA"; }
            VOpenTest = evParametricTest {
                Number = Expr { String = "1564904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VOpen_MAX'"; }
                evLowLimit = Expr { String = "TN301564904.Min"; }
                evHighLimit = Expr { String = "TN301564904.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            V33Test = evParametricTest {
                Number = Expr { String = "1560905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDD33_LOCAL_MAX'"; }
                evLowLimit = Expr { String = "TN301564904.Min"; }
                evHighLimit = Expr { String = "TN301564904.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDeltaTest = evParametricTest {
                Number = Expr { String = "1560906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDELTA_MAX'"; }
                evLowLimit = Expr { String = " TN301560906.Min"; }
                evHighLimit = Expr { String = "TN301560906.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.HDMIOpenPinV";
            Vddc = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            IForce = Expr { String = "-100nA"; }
            VOpenTest = evParametricTest {
                Number = Expr { String = "1564204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VOpen_MIN'"; }
                evLowLimit = Expr { String = "TN301564204.Min"; }
                evHighLimit = Expr { String = "TN301564204.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            V33Test = evParametricTest {
                Number = Expr { String = "1560205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDD33_LOCAL_MIN'"; }
                evLowLimit = Expr { String = "TN301564204.Min"; }
                evHighLimit = Expr { String = "TN301564204.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDeltaTest = evParametricTest {
                Number = Expr { String = "1560206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDELTA_MIN'"; }
                evLowLimit = Expr { String = " TN301560206.Min"; }
                evHighLimit = Expr { String = "TN301560206.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Result = Expr { String = "tm_rslt:NO_TEST"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.HDMITermCHARVI16";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMITestPinsVI16 = Expr { String = "dut_hdmi_VI16_pins"; }
            ForceI = Expr { String = "-4.5mA"; }
            ConnectV = Expr { String = "VDD33.Min"; }
            ConnectToDclAtEnd = Expr { String = "TRUE"; }
        }
    }
}
ETest I2C_WakeUpTime {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2cWakeTimeSearch";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestResult = evParametricTest {
                Number = Expr { String = "1734901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_WAKE_TIME_MAX'"; }
                evLowLimit = Expr { String = "TN231734901.Min"; }
                evHighLimit = Expr { String = "TN231734901.Max"; }
                evUnits = Expr { String = "'ms'"; }
            }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2cWakeTimeSearch";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestResult = evParametricTest {
                Number = Expr { String = "1734201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_WAKE_TIME_MIN'"; }
                evLowLimit = Expr { String = "TN231734901.Min"; }
                evHighLimit = Expr { String = "TN231734901.Max"; }
                evUnits = Expr { String = "'ms'"; }
            }
        }
    }
}
ETest I2S_GMSL2 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'I2S_16'"; }
            SCK_Freq = Expr { String = "6.144MHz"; }
            bits = Expr { String = "16"; }
            test_audio1 = evParametricTest {
                Number = Expr { String = "1507201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd Audio I2S 16bit_MIN'"; }
                evLowLimit = Expr { String = "-1111"; }
                evHighLimit = Expr { String = "1111"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Number = Expr { String = "1508201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev Audio I2S 16bit_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'I2S_16'"; }
            SCK_Freq = Expr { String = "6.144MHz"; }
            bits = Expr { String = "16"; }
            test_audio1 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd Audio I2S 16bit_MAX'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev Audio I2S 16bit_MAX'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'I2S_32'"; }
            SCK_Freq = Expr { String = "12.288MHz"; }
            bits = Expr { String = "32"; }
            test_audio1 = evParametricTest {
                Number = Expr { String = "1507202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd Audio I2S 32bit_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Number = Expr { String = "1508202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev Audio I2S 32bit_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'TDM_8CH'"; }
            SCK_Freq = Expr { String = "49.152MHz"; }
            bits = Expr { String = "32"; }
            test_audio1 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd Audio TDM 8ch 32bit'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev Audio TDM 8ch 32bit'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.I2S_Audio_Timing_FT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            htime = Expr { String = "10ns"; }
            ltime = Expr { String = "10ns"; }
            sutime = Expr { String = "1.5ns"; }
            hdtime = Expr { String = "1.5ns"; }
            I2S1_bt = evParametricTest {
                Number = Expr { String = "1763201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_SD_TSET_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            I2S2_bt = evParametricTest {
                Number = Expr { String = "1763202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_WS_TSET_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            I2S3_bt = evParametricTest {
                Number = Expr { String = "1764201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_SD_THOLD_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            I2S4_bt = evParametricTest {
                Number = Expr { String = "1764202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_WS_THOLD_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.I2S_Audio_Timing_Char";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SCK_LOW_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_SCK_MIN'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SCK_HIGH_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_SCK_MIN'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SD_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_SD_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_WS_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            SD_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_SD_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_WS_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.I2S_Audio_Timing_Char";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SCK_LOW_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_SCK_MAX'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SCK_HIGH_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_SCK_MAX'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SD_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_SD_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_WS_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            SD_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_SD_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_WS_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
}
ETest IDD_Sleep_Powerdown_End {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540903.Min"; }
                evHighLimit = Expr { String = "TN471540903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_END_VDDMAX'"; }
                evLowLimit = Expr { String = "TN481540908.Min"; }
                evHighLimit = Expr { String = "TN481540908.Max"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_END_MAX'"; }
                evLowLimit = Expr { String = "TN471545901.Min"; }
                evHighLimit = Expr { String = "TN471545901.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_END_MAX'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540203.Min"; }
                evHighLimit = Expr { String = "TN471540203.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_END_VDDMIN'"; }
                evLowLimit = Expr { String = "TN481540908.Min"; }
                evHighLimit = Expr { String = "TN481540908.Max"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_END_MIN'"; }
                evLowLimit = Expr { String = "TN471545201.Min"; }
                evHighLimit = Expr { String = "TN471545201.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_END_MIN'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
}
ETest IDD_Sleep_Powerdown_Front {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_MAX'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_MAX'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_MAX'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_MAX'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_MAX'"; }
                evLowLimit = Expr { String = "-1uA"; }
                evHighLimit = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_MAX'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_MAX'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_MAX'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_MAX'"; }
                evLowLimit = Expr { String = "TN471540903.Min"; }
                evHighLimit = Expr { String = "TN471540903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_MAX'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_MAX'"; }
                evLowLimit = Expr { String = "-1uA"; }
                evHighLimit = Expr { String = "100uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_VDDMAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_MAX'"; }
                evLowLimit = Expr { String = "TN471545901.Min"; }
                evHighLimit = Expr { String = "TN471545901.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_MAX'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_MIN'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_MIN'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_MIN'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_MIN'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_MIN'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_MIN'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_MIN'"; }
                evLowLimit = Expr { String = "TN471540203.Min"; }
                evHighLimit = Expr { String = "TN471540203.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_MIN'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_MIN'"; }
                evLowLimit = Expr { String = "TN471545201.Min"; }
                evHighLimit = Expr { String = "TN471545201.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_MIN'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
}
ETest MBistTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.MbistTest";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            MembistFuncTest = evParametricTest {
                Number = Expr { String = "1521200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_MIN'"; }
                evLowLimit = Expr { String = "32"; }
                evHighLimit = Expr { String = "32"; }
                evSimulateValue = Expr { String = "11"; }
            }
            LinkCheck = evParametricTest {
                Number = Expr { String = "1521299"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_LINK_CHECK_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            G17 = evParametricTest {
                Number = Expr { String = "1521201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP1_SEL7__32K_ROM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G21 = evParametricTest {
                Number = Expr { String = "1521202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL1__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G22 = evParametricTest {
                Number = Expr { String = "1521203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL2__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G23 = evParametricTest {
                Number = Expr { String = "1521204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL3__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G24 = evParametricTest {
                Number = Expr { String = "1521205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL4__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G25 = evParametricTest {
                Number = Expr { String = "1521206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL5__HDCP2P2_IRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G26 = evParametricTest {
                Number = Expr { String = "1521207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL6__HDMI_EDID_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G30 = evParametricTest {
                Number = Expr { String = "1521208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL0__TBB[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G31 = evParametricTest {
                Number = Expr { String = "1521209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL1__TBB[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G32 = evParametricTest {
                Number = Expr { String = "1521210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL2__RBB[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G33 = evParametricTest {
                Number = Expr { String = "1521211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL3__RBB[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G34 = evParametricTest {
                Number = Expr { String = "1521212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL4__VIDEO_TX[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G35 = evParametricTest {
                Number = Expr { String = "1521213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL5__VIDEO_TX[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G36 = evParametricTest {
                Number = Expr { String = "1521214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL6__AUDIO_RX_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G38 = evParametricTest {
                Number = Expr { String = "1521215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL8__arq_audio_x[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G39 = evParametricTest {
                Number = Expr { String = "1521216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL9__arq_audio_x[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G310 = evParametricTest {
                Number = Expr { String = "1521217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL10__arq_audio_x[2]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G311 = evParametricTest {
                Number = Expr { String = "1521218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL11__arq_audio_x[3]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G312 = evParametricTest {
                Number = Expr { String = "1521219"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL12__arq_audio_y[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G313 = evParametricTest {
                Number = Expr { String = "1521220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL13__arq_audio_y[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G314 = evParametricTest {
                Number = Expr { String = "1521221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL14__arq_audio_y[2]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G315 = evParametricTest {
                Number = Expr { String = "1521222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL15__arq_audio_y[3]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G40 = evParametricTest {
                Number = Expr { String = "1521223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL0__DUALVIEW[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G41 = evParametricTest {
                Number = Expr { String = "1521224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL1__DUALVIEW[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G42 = evParametricTest {
                Number = Expr { String = "1521225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL2__RGMII[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G43 = evParametricTest {
                Number = Expr { String = "1521226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL3__RGMII[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G44 = evParametricTest {
                Number = Expr { String = "1521227"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL4__RETENTION_RTTN[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G45 = evParametricTest {
                Number = Expr { String = "1521228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL5__RETENTION_RTTN[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G46 = evParametricTest {
                Number = Expr { String = "1521229"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL6__RETENTION_RTTN[2]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G47 = evParametricTest {
                Number = Expr { String = "1521230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL7__RETENTION_RTTN[3]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G48 = evParametricTest {
                Number = Expr { String = "1521231"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL8__arq_gpio_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G410 = evParametricTest {
                Number = Expr { String = "1521232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL10__arq_spi_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.MbistTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            MembistFuncTest = evParametricTest {
                Number = Expr { String = "1521900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_MAX'"; }
                evLowLimit = Expr { String = "32"; }
                evHighLimit = Expr { String = "32"; }
                evSimulateValue = Expr { String = "11"; }
            }
            LinkCheck = evParametricTest {
                Number = Expr { String = "1521999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_LINK_CHECK_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            G17 = evParametricTest {
                Number = Expr { String = "1521901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP1_SEL7__32K_ROM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G21 = evParametricTest {
                Number = Expr { String = "1521902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL1__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G22 = evParametricTest {
                Number = Expr { String = "1521903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL2__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G23 = evParametricTest {
                Number = Expr { String = "1521904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL3__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G24 = evParametricTest {
                Number = Expr { String = "1521905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL4__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G25 = evParametricTest {
                Number = Expr { String = "1521906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL5__HDCP2P2_IRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G26 = evParametricTest {
                Number = Expr { String = "1521907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL6__HDMI_EDID_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G30 = evParametricTest {
                Number = Expr { String = "1521908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL0__TBB[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G31 = evParametricTest {
                Number = Expr { String = "1521909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL1__TBB[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G32 = evParametricTest {
                Number = Expr { String = "1521910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL2__RBB[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G33 = evParametricTest {
                Number = Expr { String = "1521911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL3__RBB[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G34 = evParametricTest {
                Number = Expr { String = "1521912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL4__VIDEO_TX[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G35 = evParametricTest {
                Number = Expr { String = "1521913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL5__VIDEO_TX[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G36 = evParametricTest {
                Number = Expr { String = "1521914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL6__AUDIO_RX_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G38 = evParametricTest {
                Number = Expr { String = "1521915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL8__arq_audio_x[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G39 = evParametricTest {
                Number = Expr { String = "1521916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL9__arq_audio_x[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G310 = evParametricTest {
                Number = Expr { String = "1521917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL10__arq_audio_x[2]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G311 = evParametricTest {
                Number = Expr { String = "1521918"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL11__arq_audio_x[3]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G312 = evParametricTest {
                Number = Expr { String = "1521919"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL12__arq_audio_y[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G313 = evParametricTest {
                Number = Expr { String = "1521920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL13__arq_audio_y[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G314 = evParametricTest {
                Number = Expr { String = "1521921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL14__arq_audio_y[2]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G315 = evParametricTest {
                Number = Expr { String = "1521922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL15__arq_audio_y[3]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G40 = evParametricTest {
                Number = Expr { String = "1521923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL0__DUALVIEW[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G41 = evParametricTest {
                Number = Expr { String = "1521924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL1__DUALVIEW[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G42 = evParametricTest {
                Number = Expr { String = "1521925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL2__RGMII[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G43 = evParametricTest {
                Number = Expr { String = "1521926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL3__RGMII[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G44 = evParametricTest {
                Number = Expr { String = "1521927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL4__RETENTION_RTTN[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G45 = evParametricTest {
                Number = Expr { String = "1521928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL5__RETENTION_RTTN[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G46 = evParametricTest {
                Number = Expr { String = "1521929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL6__RETENTION_RTTN[2]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G47 = evParametricTest {
                Number = Expr { String = "1521930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL7__RETENTION_RTTN[3]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G48 = evParametricTest {
                Number = Expr { String = "1521931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL8__arq_gpio_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G410 = evParametricTest {
                Number = Expr { String = "1521932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL10__arq_spi_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
}
ETest Line_Fault_Levels {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = DC_LMN;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_MIN'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_MIN'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000203.Min"; }
                    evHighLimit = Expr { String = "TN500000203.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000204.Min"; }
                    evHighLimit = Expr { String = "TN500000204.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000205.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_OPEN_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_OPEN_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000213"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000214"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "250"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "253"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "254"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "255"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "256"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "257"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1686201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1688201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1566201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1570201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1568201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1573201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1568202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1573202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[24] = evParametricTest {
                    Number = Expr { String = "1572201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[25] = evParametricTest {
                    Number = Expr { String = "1572203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[26] = evParametricTest {
                    Number = Expr { String = "1572202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[27] = evParametricTest {
                    Number = Expr { String = "1572204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "265"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "266"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "267"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "268"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "269"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "270"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "271"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "272"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "273"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "274"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "275"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "276"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "280"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "281"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "282"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "283"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "284"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "285"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "286"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "287"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "290"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "291"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "292"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "293"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "294"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "295"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "296"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "297"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            float_char_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1566251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1566252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1567251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1567252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1568251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1568252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1570251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1570252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1571251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1571252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1572251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1572252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1573251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1573252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573252.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_MAX'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_MAX'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "TN500000903.Min"; }
                    evHighLimit = Expr { String = "TN500000903.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "TN500000904.Min"; }
                    evHighLimit = Expr { String = "TN500000904.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000905"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "TN500000905.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000906"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "TN500000906.Min"; }
                    evHighLimit = Expr { String = "TN500000906.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000907"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000908"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000909"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_OPEN_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000910"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_OPEN_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000911"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000912"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000913"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000914"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "0000950"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "0000951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "0000952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "0000953"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "0000954"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "0000955"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "0000956"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "0000957"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1686901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1688901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1566901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1570901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1568901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1573901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1568902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1573902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[24] = evParametricTest {
                    Number = Expr { String = "1572901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[25] = evParametricTest {
                    Number = Expr { String = "1572903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[26] = evParametricTest {
                    Number = Expr { String = "1572902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[27] = evParametricTest {
                    Number = Expr { String = "1572904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000965"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000966"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000967"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000968"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000969"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000970"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000971"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000972"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "0000973"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "0000974"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "0000975"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "0000976"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000980"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000981"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000982"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000983"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000984"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000985"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000986"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000987"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000990"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000991"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000992"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000993"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000994"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000995"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000996"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000997"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            float_char_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1566951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1566952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1567951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1567952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1568951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1568952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1570951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1570952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1571951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1571952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1572951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1572952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1573951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1573952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_MIN'"; }
                    evLowLimit = Expr { String = "TN121069201.Min"; }
                    evHighLimit = Expr { String = "TN121069201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_MIN'"; }
                    evLowLimit = Expr { String = "TN121069201.Min"; }
                    evHighLimit = Expr { String = "TN121069201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000203.Min"; }
                    evHighLimit = Expr { String = "TN500000203.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000204.Min"; }
                    evHighLimit = Expr { String = "TN500000204.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000205.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            GNDshortA_test = evParametricTest {
                Number = Expr { String = "0000207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_TRUE_SHORT_TO_GND_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            GNDshortB_test = evParametricTest {
                Number = Expr { String = "0000208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_TRUE_SHORT_TO_GND_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TrueOpenTestA = evParametricTest {
                Number = Expr { String = "0000209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_TRUE_OPEN_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TrueOpenTestB = evParametricTest {
                Number = Expr { String = "0000210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_TRUE_OPEN_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIopenTestA = evParametricTest {
                Number = Expr { String = "0000211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIopenTestB = evParametricTest {
                Number = Expr { String = "0000212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIopenTestA = evParametricTest {
                Number = Expr { String = "0000213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIopenTestB = evParametricTest {
                Number = Expr { String = "0000214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal02_ft = evParametricTest {
                Number = Expr { String = "1568201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_spec_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal13_ft = evParametricTest {
                Number = Expr { String = "1573201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_spec_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal0hi_ft = evParametricTest {
                Number = Expr { String = "1568202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_spec_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal1hi_ft = evParametricTest {
                Number = Expr { String = "1573202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_spec_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline13_ft = evParametricTest {
                Number = Expr { String = "1572201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_spec_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline1hi_ft = evParametricTest {
                Number = Expr { String = "1572202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_spec_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd02_ft = evParametricTest {
                Number = Expr { String = "1686201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MIN'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd13_ft = evParametricTest {
                Number = Expr { String = "1688201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MIN'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttobat02_ft = evParametricTest {
                Number = Expr { String = "1566201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttobat13_ft = evParametricTest {
                Number = Expr { String = "1570201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFNA_test = evParametricTest {
                Number = Expr { String = "1570202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFNB_test = evParametricTest {
                Number = Expr { String = "1570203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFNA_test = evParametricTest {
                Number = Expr { String = "1570204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFNB_test = evParametricTest {
                Number = Expr { String = "1570205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test = evParametricTest {
                Number = Expr { String = "1570206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test = evParametricTest {
                Number = Expr { String = "1570207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test = evParametricTest {
                Number = Expr { String = "1570208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test = evParametricTest {
                Number = Expr { String = "1570209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ifn0_min_test = evParametricTest {
                Number = Expr { String = "1570210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN0_LOWSIDE_CURRENT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ifn0_max_test = evParametricTest {
                Number = Expr { String = "1570211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN0_HIGHSIDE_CURRENT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ifn1_min_test = evParametricTest {
                Number = Expr { String = "1570212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN1_LOWSIDE_CURRENT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ifn1_max_test = evParametricTest {
                Number = Expr { String = "1570213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN1_HIGHSIDE_CURRENT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls1_min_test = evParametricTest {
                Number = Expr { String = "1570214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls1_max_test = evParametricTest {
                Number = Expr { String = "1570215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o0_ft = evParametricTest {
                Number = Expr { String = "1566251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501566251.Min"; }
                evHighLimit = Expr { String = "TN501566251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o2_ft = evParametricTest {
                Number = Expr { String = "1566252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501566251.Min"; }
                evHighLimit = Expr { String = "TN501566251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_n0_ft = evParametricTest {
                Number = Expr { String = "1567251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501567251.Min"; }
                evHighLimit = Expr { String = "TN501567251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_n2_ft = evParametricTest {
                Number = Expr { String = "1567252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501567251.Min"; }
                evHighLimit = Expr { String = "TN501567251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g0_ft = evParametricTest {
                Number = Expr { String = "1568251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501568251.Min"; }
                evHighLimit = Expr { String = "TN501568251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g2_ft = evParametricTest {
                Number = Expr { String = "1568252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501568251.Min"; }
                evHighLimit = Expr { String = "TN501568251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o1_ft = evParametricTest {
                Number = Expr { String = "1570251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501570251.Min"; }
                evHighLimit = Expr { String = "TN501570251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o3_ft = evParametricTest {
                Number = Expr { String = "1570252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501570251.Min"; }
                evHighLimit = Expr { String = "TN501570251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l1_ft = evParametricTest {
                Number = Expr { String = "1571251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501571251.Min"; }
                evHighLimit = Expr { String = "TN501571251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l3_ft = evParametricTest {
                Number = Expr { String = "1571252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501571251.Min"; }
                evHighLimit = Expr { String = "TN501571251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n1_ft = evParametricTest {
                Number = Expr { String = "1572251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501572251.Min"; }
                evHighLimit = Expr { String = "TN501572251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n3_ft = evParametricTest {
                Number = Expr { String = "1572252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501572251.Min"; }
                evHighLimit = Expr { String = "TN501572251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g1_ft = evParametricTest {
                Number = Expr { String = "1573251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501573251.Min"; }
                evHighLimit = Expr { String = "TN501573251.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g3_ft = evParametricTest {
                Number = Expr { String = "1573252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "TN501573252.Min"; }
                evHighLimit = Expr { String = "TN501573252.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_MAX'"; }
                    evLowLimit = Expr { String = "-0.975uA"; }
                    evHighLimit = Expr { String = "0.975uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_MAX'"; }
                    evLowLimit = Expr { String = "-0.975uA"; }
                    evHighLimit = Expr { String = "0.975uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "-25uA"; }
                    evHighLimit = Expr { String = "-15uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "-12.5uA"; }
                    evHighLimit = Expr { String = "-7.5uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000905"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "1.2V"; }
                    evHighLimit = Expr { String = "1.3V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000906"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "0.65V"; }
                    evHighLimit = Expr { String = "0.85V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            GNDshortA_test = evParametricTest {
                Number = Expr { String = "0000907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_TRUE_SHORT_TO_GND_MAX'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            GNDshortB_test = evParametricTest {
                Number = Expr { String = "0000908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_TRUE_SHORT_TO_GND_MAX'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TrueOpenTestA = evParametricTest {
                Number = Expr { String = "0000909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_TRUE_OPEN_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TrueOpenTestB = evParametricTest {
                Number = Expr { String = "0000910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_TRUE_OPEN_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIopenTestA = evParametricTest {
                Number = Expr { String = "0000911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIopenTestB = evParametricTest {
                Number = Expr { String = "0000912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIopenTestA = evParametricTest {
                Number = Expr { String = "0000913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIopenTestB = evParametricTest {
                Number = Expr { String = "0000914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal02_ft = evParametricTest {
                Number = Expr { String = "1568901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_spec_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal13_ft = evParametricTest {
                Number = Expr { String = "1573901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_spec_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal0hi_ft = evParametricTest {
                Number = Expr { String = "1568902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_spec_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Inormal1hi_ft = evParametricTest {
                Number = Expr { String = "1573902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_spec_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline13_ft = evParametricTest {
                Number = Expr { String = "1572901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_spec_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline1hi_ft = evParametricTest {
                Number = Expr { String = "1572902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_spec_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd02_ft = evParametricTest {
                Number = Expr { String = "1686901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MAX'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd13_ft = evParametricTest {
                Number = Expr { String = "1688902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MAX'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttobat02_ft = evParametricTest {
                Number = Expr { String = "1566903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttobat13_ft = evParametricTest {
                Number = Expr { String = "1570904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFNA_test = evParametricTest {
                Number = Expr { String = "1570905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFNB_test = evParametricTest {
                Number = Expr { String = "1570906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFNA_test = evParametricTest {
                Number = Expr { String = "1570907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFNB_test = evParametricTest {
                Number = Expr { String = "1570908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test = evParametricTest {
                Number = Expr { String = "1570909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test = evParametricTest {
                Number = Expr { String = "1570910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test = evParametricTest {
                Number = Expr { String = "1570911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test = evParametricTest {
                Number = Expr { String = "1570912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ifn0_min_test = evParametricTest {
                Number = Expr { String = "1570913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN0_LOWSIDE_CURRENT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ifn0_max_test = evParametricTest {
                Number = Expr { String = "1570914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN0_HIGHSIDE_CURRENT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ifn1_min_test = evParametricTest {
                Number = Expr { String = "1570915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN1_LOWSIDE_CURRENT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ifn1_max_test = evParametricTest {
                Number = Expr { String = "1570916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFN1_HIGHSIDE_CURRENT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls1_min_test = evParametricTest {
                Number = Expr { String = "1570917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls1_max_test = evParametricTest {
                Number = Expr { String = "1570918"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o0_ft = evParametricTest {
                Number = Expr { String = "1566951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "10uA"; }
                evHighLimit = Expr { String = "30uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o2_ft = evParametricTest {
                Number = Expr { String = "1566952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "10uA"; }
                evHighLimit = Expr { String = "30uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_n0_ft = evParametricTest {
                Number = Expr { String = "1567951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-11uA"; }
                evHighLimit = Expr { String = "-5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_n2_ft = evParametricTest {
                Number = Expr { String = "1567952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-11uA"; }
                evHighLimit = Expr { String = "-5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g0_ft = evParametricTest {
                Number = Expr { String = "1568951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-19uA"; }
                evHighLimit = Expr { String = "-14uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g2_ft = evParametricTest {
                Number = Expr { String = "1568952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-19uA"; }
                evHighLimit = Expr { String = "-14uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o1_ft = evParametricTest {
                Number = Expr { String = "1570951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "5uA"; }
                evHighLimit = Expr { String = "15uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itb_o3_ft = evParametricTest {
                Number = Expr { String = "1570952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "5uA"; }
                evHighLimit = Expr { String = "15uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l1_ft = evParametricTest {
                Number = Expr { String = "1571951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-4.4uA"; }
                evHighLimit = Expr { String = "-1.5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l3_ft = evParametricTest {
                Number = Expr { String = "1571952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-4.4uA"; }
                evHighLimit = Expr { String = "-1.5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n1_ft = evParametricTest {
                Number = Expr { String = "1572951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-7.1uA"; }
                evHighLimit = Expr { String = "-5.6uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n3_ft = evParametricTest {
                Number = Expr { String = "1572952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-7.1uA"; }
                evHighLimit = Expr { String = "-5.6uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g1_ft = evParametricTest {
                Number = Expr { String = "1573951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-9.5uA"; }
                evHighLimit = Expr { String = "-7.8uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g3_ft = evParametricTest {
                Number = Expr { String = "1573952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-9.5uA"; }
                evHighLimit = Expr { String = "-7.8uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_RDRIFT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "-25uA"; }
                    evHighLimit = Expr { String = "-15uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "-12.5uA"; }
                    evHighLimit = Expr { String = "-7.5uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "1.16V"; }
                    evHighLimit = Expr { String = "1.3V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "0.65V"; }
                    evHighLimit = Expr { String = "0.85V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            IlinetolineAmaxSpec = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_spec_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline13_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_spec_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            IlinetolineAminSpec = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_spec_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline1hi_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_spec_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd02_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MIN'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd13_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MIN'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_3PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_3PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_3PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_3PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_2PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_2PCT_RDRIFT_LOW_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_2PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_2PCT_RDRIFT_HIGH_SIDE_MIN'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Itn_g0_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-19uA"; }
                evHighLimit = Expr { String = "-14uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g2_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-19uA"; }
                evHighLimit = Expr { String = "-14uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l1_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-4.4uA"; }
                evHighLimit = Expr { String = "-1.5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l3_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-4.4uA"; }
                evHighLimit = Expr { String = "-1.5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n1_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-7.1uA"; }
                evHighLimit = Expr { String = "-5.6uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n3_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-7.1uA"; }
                evHighLimit = Expr { String = "-5.6uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g1_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-9.5uA"; }
                evHighLimit = Expr { String = "-7.8uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g3_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                evLowLimit = Expr { String = "-9.5uA"; }
                evHighLimit = Expr { String = "-7.8uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls5_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_5PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls5_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_5PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls4_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_4PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls4_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_4PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls3_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_3PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls3_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_3PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls2_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_2PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls2_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_2PCT_INFO_MIN'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_RDRIFT";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "-25uA"; }
                    evHighLimit = Expr { String = "-15uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "-12.5uA"; }
                    evHighLimit = Expr { String = "-7.5uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "1.16V"; }
                    evHighLimit = Expr { String = "1.3V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "0.65V"; }
                    evHighLimit = Expr { String = "0.85V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            IlinetolineAmaxSpec = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_spec_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline13_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_spec_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            IlinetolineAminSpec = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_spec_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ilinetoline1hi_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_spec_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd02_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MAX'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Ishorttognd13_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MAX'"; }
                evLowLimit = Expr { String = "5"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test4 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_3PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_3PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_3PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_3PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSA_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_2PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LoIFLLSB_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_2PCT_RDRIFT_LOW_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSA_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_2PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            HiIFLLSB_test2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_2PCT_RDRIFT_HIGH_SIDE_MAX'"; }
                evLowLimit = Expr { String = "192"; }
                evHighLimit = Expr { String = "192"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            Itn_g0_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-19uA"; }
                evHighLimit = Expr { String = "-14uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g2_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN0B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-19uA"; }
                evHighLimit = Expr { String = "-14uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l1_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-4.4uA"; }
                evHighLimit = Expr { String = "-1.5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Ito_l3_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-4.4uA"; }
                evHighLimit = Expr { String = "-1.5uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n1_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-7.1uA"; }
                evHighLimit = Expr { String = "-5.6uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itl_n3_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-7.1uA"; }
                evHighLimit = Expr { String = "-5.6uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g1_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-9.5uA"; }
                evHighLimit = Expr { String = "-7.8uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Itn_g3_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                evLowLimit = Expr { String = "-9.5uA"; }
                evHighLimit = Expr { String = "-7.8uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls5_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_5PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls5_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_5PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls4_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_4PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls4_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_4PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls3_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_3PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls3_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_3PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls2_min_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_LOWSIDE_CURRENT_2PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Iflls2_max_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'IFLLS1_HIGHSIDE_CURRENT_2PCT_INFO_MAX'"; }
                evLowLimit = Expr { String = "-20uA"; }
                evHighLimit = Expr { String = "20uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest LockTimeTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.LocTimeTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_ser_lock = evParametricTest {
                Number = Expr { String = "1094901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LinkLock'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LockTimeTest = evParametricTest {
                Number = Expr { String = "1094902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LockTimeVmax'"; }
                evLowLimit = Expr { String = "TN171094902.Min"; }
                evHighLimit = Expr { String = "TN171094902.Max"; }
                evUnits = Expr { String = "'=mS'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.LocTimeTest";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_ser_lock = evParametricTest {
                Number = Expr { String = "1094201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LinkLock'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LockTimeTest = evParametricTest {
                Number = Expr { String = "1094202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LockTimeVmin'"; }
                evLowLimit = Expr { String = "0mS"; }
                evHighLimit = Expr { String = "39.99999910593mS"; }
                evUnits = Expr { String = "'=mS'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
}
ETest Rx_Tx_Rise_Fall {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Rise_Fall_Rx_Tx";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TX_RiseTest = evParametricTest {
                Number = Expr { String = "1097901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_RiseTime_MAX'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            TX_FallTest = evParametricTest {
                Number = Expr { String = "1098901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_FallTime_MAX'"; }
                evLowLimit = Expr { String = "TN27098901.Min"; }
                evHighLimit = Expr { String = "TN27098901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_RiseTest = evParametricTest {
                Number = Expr { String = "1097902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_RiseTime_MAX'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_FallTest = evParametricTest {
                Number = Expr { String = "1098902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_FallTime_MAX'"; }
                evLowLimit = Expr { String = "TN27098901.Min"; }
                evHighLimit = Expr { String = "TN27098901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            PowerUp = Expr { String = "TRUE"; }
            PowerDown = Expr { String = "False"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Rise_Fall_Rx_Tx";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TX_RiseTest = evParametricTest {
                Number = Expr { String = "1097201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_RiseTime_MIN'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            TX_FallTest = evParametricTest {
                Number = Expr { String = "1098201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_FallTime_MIN'"; }
                evLowLimit = Expr { String = "TN27098201.Min"; }
                evHighLimit = Expr { String = "TN27098201.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_RiseTest = evParametricTest {
                Number = Expr { String = "1097202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_RiseTime_MIN'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_FallTest = evParametricTest {
                Number = Expr { String = "1098202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_FallTime_MIN'"; }
                evLowLimit = Expr { String = "TN27098201.Min"; }
                evHighLimit = Expr { String = "TN27098201.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            PowerUp = Expr { String = "False"; }
            PowerDown = Expr { String = "TRUE"; }
        }
    }
}
ETest SerDesI2C {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1000KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_1M_MAX'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_400K_MAX'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_100K_MAX'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_100K_MIN'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_400K_MIN'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_1M_MIN'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C W_R across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C W_R across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
}
ETest SerDesI2C_PT {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1101901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_1M_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1100901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_400KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1099901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_100KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1099201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_100KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1100201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_400KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1101201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C speed_1M_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
}
ETest SerDesMainUart {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'UART speed_1M_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write reset value across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER UART write across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES SER_UART write reset value across SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'UART speed_400K_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write reset value across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER UART write across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES SER_UART write reset value across SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'UART speed_100K_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write reset value across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER UART write across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES SER_UART write reset value across SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'UART speed_100K_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write reset value across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER UART write across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES SER_UART write reset value across SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'UART speed_400K_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write reset value across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER UART write across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES SER_UART write reset value across SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'UART speed_1M_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES UART write reset value across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER UART write across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES SER_UART write reset value across SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
}
ETest SerDesUart_PT {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart speed_1M_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart speed_400KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart speed_100KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart speed_100KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart speed_400KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart speed_1M_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
}
ETest SpiControlChannel {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.SpiTiming";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            ConfigNeeded = Expr { String = "TRUE"; }
            SpiFreq = Expr { String = "50MHz"; }
            SpiFreqTest = evParametricTest {
                Number = Expr { String = "1665201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_FREQ_MIN'"; }
                evLowLimit = Expr { String = "50MHz"; }
                evHighLimit = Expr { String = "50MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            TSetupTest = evParametricTest {
                Number = Expr { String = "1670201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIS_MIN'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "5ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            THoldTest = evParametricTest {
                Number = Expr { String = "1671201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIH_MIN'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "3ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkHighTest = evParametricTest {
                Number = Expr { String = "1667201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCH_MIN'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkLowTest = evParametricTest {
                Number = Expr { String = "1667202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCL_MIN'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.SpiTiming";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            ConfigNeeded = Expr { String = "FALSE"; }
            SpiFreq = Expr { String = "50MHz"; }
            SpiFreqTest = evParametricTest {
                Number = Expr { String = "1665901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_FREQ_MAX'"; }
                evLowLimit = Expr { String = "49MHz"; }
                evHighLimit = Expr { String = "51MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            TSetupTest = evParametricTest {
                Number = Expr { String = "1670901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIS_MAX'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "5ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            THoldTest = evParametricTest {
                Number = Expr { String = "1671901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIH_MAX'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "3ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkHighTest = evParametricTest {
                Number = Expr { String = "1667901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCH_MAX'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkLowTest = evParametricTest {
                Number = Expr { String = "1667902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCL_MAX'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
    }
}
ETest SPI_PT {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_PT";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            ss1_1m_ser = evParametricTest {
                Number = Expr { String = "1517901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 1M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_1m_ser = evParametricTest {
                Number = Expr { String = "1517902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 1M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_10m_ser = evParametricTest {
                Number = Expr { String = "1517903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 10M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#a4a3a2"; }
                evHighLimit = Expr { String = "16#a4a3a2"; }
            }
            ss2_10m_ser = evParametricTest {
                Number = Expr { String = "1517904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 10M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_ser = evParametricTest {
                Number = Expr { String = "1517905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 25M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_25m_ser = evParametricTest {
                Number = Expr { String = "1517906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 25M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_50m_ser = evParametricTest {
                Number = Expr { String = "1517907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 50M 3byte Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss2_50m_ser = evParametricTest {
                Number = Expr { String = "1517908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 50M 3byte Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss1_1m_des = evParametricTest {
                Number = Expr { String = "1512901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 1M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#585756"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_1m_des = evParametricTest {
                Number = Expr { String = "1512902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 1M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#B4A954"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            ss1_10m_des = evParametricTest {
                Number = Expr { String = "1512903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 10M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#AB5BA6"; }
                evHighLimit = Expr { String = "16#AB5BA6"; }
            }
            ss2_10m_des = evParametricTest {
                Number = Expr { String = "1512904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 10M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_des = evParametricTest {
                Number = Expr { String = "1512905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 25M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#262524"; }
                evHighLimit = Expr { String = "16#262524"; }
            }
            ss2_25m_des = evParametricTest {
                Number = Expr { String = "1512906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 25M 3byte Vmax'"; }
                evLowLimit = Expr { String = "16#A3A2A1"; }
                evHighLimit = Expr { String = "16#A3A2A1"; }
            }
            ss1_50m_des = evParametricTest {
                Number = Expr { String = "1512907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 50M 3byte Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_50m_des = evParametricTest {
                Number = Expr { String = "1512908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 50M 3byte Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "true"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_PT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min "; }
            Vddio = Expr { String = "VDDIO.Min + 0.05V - 0.05V"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            ss1_1m_ser = evParametricTest {
                Number = Expr { String = "1517201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 1M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_1m_ser = evParametricTest {
                Number = Expr { String = "1517202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 1M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_10m_ser = evParametricTest {
                Number = Expr { String = "1517203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 10M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#a4a3a2"; }
                evHighLimit = Expr { String = "16#a4a3a2"; }
            }
            ss2_10m_ser = evParametricTest {
                Number = Expr { String = "1517204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 10M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_ser = evParametricTest {
                Number = Expr { String = "1517205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 25M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_25m_ser = evParametricTest {
                Number = Expr { String = "1517206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 25M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_50m_ser = evParametricTest {
                Number = Expr { String = "1517207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS1 50M 3byte Vmin_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss2_50m_ser = evParametricTest {
                Number = Expr { String = "1517208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT SER Master SS2 50M 3byte Vmin_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss1_1m_des = evParametricTest {
                Number = Expr { String = "1512201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 1M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#585756"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_1m_des = evParametricTest {
                Number = Expr { String = "1512202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 1M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#B4A954"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            ss1_10m_des = evParametricTest {
                Number = Expr { String = "1512203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 10M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#AB5BA6"; }
                evHighLimit = Expr { String = "16#AB5BA6"; }
            }
            ss2_10m_des = evParametricTest {
                Number = Expr { String = "1512204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 10M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_des = evParametricTest {
                Number = Expr { String = "1512205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 25M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#262524"; }
                evHighLimit = Expr { String = "16#262524"; }
            }
            ss2_25m_des = evParametricTest {
                Number = Expr { String = "1512206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 25M 3byte Vmin'"; }
                evLowLimit = Expr { String = "16#A3A2A1"; }
                evHighLimit = Expr { String = "16#A3A2A1"; }
            }
            ss1_50m_des = evParametricTest {
                Number = Expr { String = "1512207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS1 50M 3byte Vmin_NotTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_50m_des = evParametricTest {
                Number = Expr { String = "1512208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT DES Master SS2 50M 3byte Vmin_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "true"; }
        }
    }
}
ETest SPI_TIMING {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            SPI_FREQ = Expr { String = "50MHz"; }
            test_SPI_FREQ = evParametricTest {
                Number = Expr { String = "1665201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPI speed_Vmin'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "60MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            TSETUP = evParametricTest {
                Number = Expr { String = "1670201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPISetUpTime_Vmin'"; }
                evLowLimit = Expr { String = "-1nS"; }
                evHighLimit = Expr { String = "2nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            THOLD = evParametricTest {
                Number = Expr { String = "1671201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPIHoldTime_Vmin'"; }
                evLowLimit = Expr { String = "-1ns"; }
                evHighLimit = Expr { String = "5nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseHi = evParametricTest {
                Number = Expr { String = "1667201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMax_Vmin'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseLo = evParametricTest {
                Number = Expr { String = "1667202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMin_Vmin'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            SPI_FREQ = Expr { String = "50MHz"; }
            test_SPI_FREQ = evParametricTest {
                Number = Expr { String = "1665901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPI speed_Vmax'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "60MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            TSETUP = evParametricTest {
                Number = Expr { String = "1670901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPISetUpTime_Vmax'"; }
                evLowLimit = Expr { String = "-1nS"; }
                evHighLimit = Expr { String = "2nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            THOLD = evParametricTest {
                Number = Expr { String = "1671901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPIHoldTime_Vmax'"; }
                evLowLimit = Expr { String = "-1ns"; }
                evHighLimit = Expr { String = "5nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseHi = evParametricTest {
                Number = Expr { String = "1667901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMax_Vmax'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseLo = evParametricTest {
                Number = Expr { String = "1667902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMin_Vmax'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
}
ETest TemperatureTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543500"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDNOM'"; }
                evLowLimit = Expr { String = "1V"; }
                evHighLimit = Expr { String = "2V"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDNOM'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "2V"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDNOM'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDNOM'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
        }
    }
}




SubFlow UART_I2C_SPI {
    Node[0] =     FlowNode_  {
        XCoord = (183,132);
        Port[0] {
            To = 2;
            UIFPort = 123;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "1.9e+08";
        Exec = SerDesMainUart;
    }
    Node[1] =     FlowNode_  {
        XCoord = (1316,357);
        Port[0] {
            UIFPort = 160;
        }
        UIFInfo = 0;
        TestId = "";
        PortSelect = "0";
        PortNumber = 0;
    }
    Node[2] =     FlowNode_  {
        XCoord = (303,146);
        Port[0] {
            To = 4;
            UIFPort = 109;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "1.9e+08";
        Exec = SerDesI2C;
    }
    Node[3] =     FlowNode_  {
        XCoord = (687,146);
        Port[0] {
            To = 6;
            UIFPort = 85;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "3.4e+08";
        Exec = SerDesI2C_PT;
    }
    Node[4] =     FlowNode_  {
        XCoord = (474,142);
        Port[0] {
            To = 3;
            UIFPort = 90;
        }
        Port[1] {
            To = 5;
            UIFPort = 186;
        }
        UIFInfo = 0;
        SpecPairs {
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "3.3e+08";
        Exec = SerDesUart_PT;
    }
    Node[5] =     FlowNode_  {
        XCoord = (624,420);
        UIFInfo = 14;
        TestId = "";
        Exec = Binning_Error;
    }
    Node[6] =     FlowNode_  {
        XCoord = (876,146);
        Port[0] {
            To = 7;
            UIFPort = 102;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
        }
        TestId = "25000000";
        Exec = SPI_TIMING;
    }
    Node[7] =     FlowNode_  {
        XCoord = (1042,149);
        Port[0] {
            To = 1;
            UIFPort = 160;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
        }
        TestId = "2.6e+07";
        Exec = SPI_PT;
    }
    StartState = 0;
}
