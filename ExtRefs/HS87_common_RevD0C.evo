enVision:"bl8:R15.7.2:S4.5";
PatternMap DefaultPatternMap {
    DefaultSourcePath = "";
    Pattern dut_powerup {
        File "dut_powerup";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_uart_read {
        File "dut_uart_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_uart_write {
        File "dut_uart_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_uart_read {
        File "dnut_uart_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_uart_write {
        File "dnut_uart_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_clear_i2c {
        File "util_dnut_clear_i2c";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_uart_read {
        File "util_dnut_uart_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_uart_write {
        File "util_dnut_uart_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_i2c_read {
        File "dut_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_i2c_write {
        File "dut_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_clear_i2c {
        File "dut_clear_i2c";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_i2c_read {
        File "dnut_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_i2c_write {
        File "dnut_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_i2c_read {
        File "util_dnut_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_i2c_write {
        File "util_dnut_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_saf {
        File "dpll_saf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_tdf {
        File "dpll_tdf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_sbf {
        File "dpll_sbf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dpll_dbf {
        File "dpll_dbf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_vil_vih {
        File "dut_vil_vih";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_vol_voh {
        File "dut_vol_voh";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_noreg_i2c_read {
        File "util_dnut_noreg_i2c_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern util_dnut_noreg_i2c_write {
        File "util_dnut_noreg_i2c_write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern fpga {
        File "fpga";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern osc_id_check {
        File "osc_id_check";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_uart_read2 {
        File "dut_uart_read2";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern LMN_Vih_Vil_pat {
        File "LMN_Vih_Vil_pat";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_Write_Char {
        File "SER_I2C_Write_Char";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_STOP_WRITE_CHAR {
        File "SER_I2C_STOP_WRITE_CHAR";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_to_dut_i2c_cc {
        File "dnut_to_dut_i2c_cc";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_to_dnut_i2c_cc {
        File "dut_to_dnut_i2c_cc";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_Write_FT {
        File "SER_I2C_Write_FT";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_Read {
        File "OTP_Read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_Read_noFPGA {
        File "OTP_Read_noFPGA";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_Write {
        File "OTP_Write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_Write_noFPGA {
        File "OTP_Write_noFPGA";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_I2C_STOP_WRITE_FT {
        File "SER_I2C_STOP_WRITE_FT";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern DDC_I2C_WRITE {
        File "DDC_I2C_WRITE";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern DDC_I2C_READ {
        File "DDC_I2C_READ";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern DDC_I2C_READ_CHAR {
        File "DDC_I2C_READ_CHAR";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_WRITE_BURST_MATCH_UART {
        File "OTP_WRITE_BURST_MATCH_UART";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_powerup_no_fpga {
        File "dut_powerup_no_fpga";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_WRITE_READ_BURST_UART {
        File "OTP_WRITE_READ_BURST_UART";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern OTP_WRITE_READ_BURST_UART_noFPGA {
        File "OTP_WRITE_READ_BURST_UART_noFPGA";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern SER_UART_Write_LockTime {
        File "SER_UART_Write_LockTime";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern I2S_16bit_Write {
        File "I2S_16bit_Write";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern I2S_16bit_Write_Hold {
        File "I2S_16bit_Write_Hold";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_i2c_read_address {
        File "dut_i2c_read_address";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_spi_timing {
        File "dut_spi_timing";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hspd_hpd_check {
        File "hspd_hpd_check";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_PFM_saf_0 {
        File "hs87d0b_PFM_saf_0";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_PFM_saf_1 {
        File "hs87d0b_PFM_saf_1";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_PFM_sbf {
        File "hs87d0b_PFM_sbf";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_0 {
        File "hs87d0b_tdf_comp_0";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_1 {
        File "hs87d0b_tdf_comp_1";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_2 {
        File "hs87d0b_tdf_comp_2";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_3 {
        File "hs87d0b_tdf_comp_3";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_4 {
        File "hs87d0b_tdf_comp_4";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_5 {
        File "hs87d0b_tdf_comp_5";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p2_00_09 {
        File "hs87d0b_tdf_comp_p2_00_09";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p2_10_19 {
        File "hs87d0b_tdf_comp_p2_10_19";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p2_20_29 {
        File "hs87d0b_tdf_comp_p2_20_29";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p2_30_37 {
        File "hs87d0b_tdf_comp_p2_30_37";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p3_0 {
        File "hs87d0b_tdf_comp_p3_0";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p3_1 {
        File "hs87d0b_tdf_comp_p3_1";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p3_2 {
        File "hs87d0b_tdf_comp_p3_2";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p3_3 {
        File "hs87d0b_tdf_comp_p3_3";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern hs87d0b_tdf_comp_p3_4 {
        File "hs87d0b_tdf_comp_p3_4";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_i2c_rlms_read {
        File "dut_i2c_rlms_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dut_uart_rlms_read {
        File "dut_uart_rlms_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_i2c_rlms_read {
        File "dnut_i2c_rlms_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern dnut_uart_rlms_read {
        File "dnut_uart_rlms_read";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern phya_osn_loop {
        File "phya_osn_loop";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
    Pattern phyb_osn_loop {
        File "phyb_osn_loop";
        Path "../Patterns/EVOS";
        CachePath "../Patterns/EPFS";
    }
}
ETest abusBiasPageChar {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning OR OpVar_Char"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "FALSE"; }
        Result = Expr { String = "tm_rslt:NO_TEST"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.ABUSBiasMeasurements";
            Vddd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            min_term_pres = Expr { String = "0"; }
            max_term_pres = Expr { String = "127"; }
            minor_test = Expr { String = "1520000"; }
            CornerString = Expr { String = "'_Min'"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Result = Expr { String = "tm_rslt:NO_TEST"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.ABUSBiasMeasurements";
            Vddd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            min_term_pres = Expr { String = "0"; }
            max_term_pres = Expr { String = "127"; }
            minor_test = Expr { String = "1590000"; }
            CornerString = Expr { String = "'_Max'"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.AbusDcTests";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            ForcePowerup = Expr { String = "TRUE"; }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
            CalFactorOffset = Expr { String = "0"; }
            TestV0p6Obsv = evParametricTest {
                Number = Expr { String = "1501900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'v0p6_obsv_blk00_pg04_MAX'"; }
                evLowLimit = Expr { String = "0.5V"; }
                evHighLimit = Expr { String = "0.7V"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestV1p2Obsv = evParametricTest {
                Number = Expr { String = "1501901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus2_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'V1P2_OBSV_BLK00_PG04_MAX'"; }
                evLowLimit = Expr { String = "1.1V"; }
                evHighLimit = Expr { String = "1.3V"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVbgtst = evParametricTest {
                Number = Expr { String = "1501902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus1_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'VBGTST_BLK00_PG04_MAX'"; }
                evLowLimit = Expr { String = "1.1V"; }
                evHighLimit = Expr { String = "1.3V"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVddaSWVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'vdda_sw_blk00_pg09_max'"; }
                    evLowLimit = Expr { String = "TN951501903.Min"; }
                    evHighLimit = Expr { String = "TN951501903.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVdddSWVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus0_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VDDD_SW_BLK00_PG09_MAX'"; }
                    evLowLimit = Expr { String = "TN951501904.Min"; }
                    evHighLimit = Expr { String = "TN951501904.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVdd18OtpSWVltg = evParametricTest {
                Number = Expr { String = "1501905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus2_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vdd18_otp_sw_blk00_pg10_max'"; }
                evLowLimit = Expr { String = "TN951501905.Min"; }
                evHighLimit = Expr { String = "TN951501905.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVdd18OtpVltg = evParametricTest {
                Number = Expr { String = "1501929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vdd18_otp_blk00_pg10_max'"; }
                evLowLimit = Expr { String = "TN951501905.Min"; }
                evHighLimit = Expr { String = "TN951501905.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVdd18DpllVltg = evParametricTest {
                Number = Expr { String = "1501906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus2_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vdd18_dpll_sw_blk00_pg11_max'"; }
                evLowLimit = Expr { String = "TN951501906.Min"; }
                evHighLimit = Expr { String = "TN951501906.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVdd18PAswVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501907"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'vdd18_pa_sw_blk00_pg12_max'"; }
                    evLowLimit = Expr { String = "TN951501907.Min"; }
                    evHighLimit = Expr { String = "TN951501906.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVdd18PBswVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501908"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus1_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'vdd18_pb_sw_blk00_pg12_max'"; }
                    evLowLimit = Expr { String = "TN951501907.Min"; }
                    evHighLimit = Expr { String = "TN951501906.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Testi160u_dpll = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501909"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus3_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i160u_dpll_blk01_pg02_max'"; }
                    evLowLimit = Expr { String = "140.0uA"; }
                    evHighLimit = Expr { String = "190uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testi20u_rescal = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501910"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i20u_rescal_blk01_pg02_max'"; }
                    evLowLimit = Expr { String = "-30.0uA"; }
                    evHighLimit = Expr { String = "-10.0uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testi80u_spc = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501911"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus3_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i80u_spc_blk01_pg03_max'"; }
                    evLowLimit = Expr { String = "50.0uA"; }
                    evHighLimit = Expr { String = "110.0uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testi80u_clbr = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501912"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i80u_clbr_blk01_pg03_max'"; }
                    evLowLimit = Expr { String = "65uA"; }
                    evHighLimit = Expr { String = "90uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testcml_rescal_bot = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501913"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus0_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'cml_rescal_bot_blk_01_pg03_max'"; }
                    evLowLimit = Expr { String = "TN951501913.Min"; }
                    evHighLimit = Expr { String = "TN951501913.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Testcml_rescal_top = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501914"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus1_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'cml_rescal_top_blk_01_pg03_max'"; }
                    evLowLimit = Expr { String = "TN951501914.Min"; }
                    evHighLimit = Expr { String = "TN951501906.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Testcml_rescal_diff = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501915"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'cml_rescal_differential_blk01_pg03_max'"; }
                    evLowLimit = Expr { String = "0.5V"; }
                    evHighLimit = Expr { String = "0.7V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestI40_1u = evParametricTest {
                Number = Expr { String = "1501916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'I40_1U_BLK01_PG04_MAX'"; }
                evLowLimit = Expr { String = "TN951501916.Min"; }
                evHighLimit = Expr { String = "TN951501916.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            TestVbg1uN = evParametricTest {
                Number = Expr { String = "1501917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus1_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_1u_senseN_blk01_pg04_max'"; }
                evLowLimit = Expr { String = "-10.0mV"; }
                evHighLimit = Expr { String = "20.0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg1uP = evParametricTest {
                Number = Expr { String = "1501918"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus0_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_1u_senseP_blk01_pg04_max'"; }
                evLowLimit = Expr { String = "TN951501918.Min"; }
                evHighLimit = Expr { String = "TN951501918.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg1uDIFF = evParametricTest {
                Number = Expr { String = "1501919"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_1u_differential_blk01_pg04_max'"; }
                evLowLimit = Expr { String = "TN951501918.Min"; }
                evHighLimit = Expr { String = "TN951501918.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestI40_3u = evParametricTest {
                Number = Expr { String = "1501920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'I40_3U_BLK01_PG05_MAX'"; }
                evLowLimit = Expr { String = "TN951501916.Min"; }
                evHighLimit = Expr { String = "TN951501916.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            TestVbg3uN = evParametricTest {
                Number = Expr { String = "1501921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus1_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_3u_senseN_blk01_pg05_max'"; }
                evLowLimit = Expr { String = "-10.0mV"; }
                evHighLimit = Expr { String = "20.0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg3uP = evParametricTest {
                Number = Expr { String = "1501922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus0_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_3u_senseP_blk01_pg05_max'"; }
                evLowLimit = Expr { String = "TN951501922.Min"; }
                evHighLimit = Expr { String = "TN951501922.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg3uDIFF = evParametricTest {
                Number = Expr { String = "1501923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_3u_differential_blk01_pg05_max'"; }
                evLowLimit = Expr { String = "TN951501922.Min"; }
                evHighLimit = Expr { String = "TN951501922.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVREG_VCO = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501924"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus3_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VREG_VCO_BLK02_PG02_MAX'"; }
                    evLowLimit = Expr { String = "0.7V"; }
                    evHighLimit = Expr { String = "1.1V"; }
                    evUnits = Expr { String = "'mV'"; }
                }
            }
            TestVREG_PFDDIV = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501925"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VREG_PFDDIV_BLK02_PG02_MAX'"; }
                    evLowLimit = Expr { String = "0.85V"; }
                    evHighLimit = Expr { String = "1.1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVREG_PDDDIV = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501926"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus1_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VREG_PDDDIV_BLK02_PG02_MAX'"; }
                    evLowLimit = Expr { String = "0.85V"; }
                    evHighLimit = Expr { String = "1.1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVDD18_XTAL = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501927"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus0_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VDD18_XTAL_BLK02_PG02_MAX'"; }
                    evLowLimit = Expr { String = "TN951501906.Min"; }
                    evHighLimit = Expr { String = "TN951501906.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestBlk4Pg1 = evParametricTest {
                Number = Expr { String = "1501928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus0_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'VDD_VCO_AUDPLL_BLK_04_PG01_MAX'"; }
                evLowLimit = Expr { String = "-0.1V"; }
                evHighLimit = Expr { String = "2.2V"; }
                evUnits = Expr { String = "'V'"; }
            }
            FlagBadXRES = evParametricTest {
                Number = Expr { String = "1501950"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'Possible_resistive_XRES_or_K2_on_Loadboard_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.AbusDcTests";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            ForcePowerup = Expr { String = "FALSE"; }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            CalFactorOffset = Expr { String = "0"; }
            TestV0p6Obsv = evParametricTest {
                Number = Expr { String = "1501200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'v0p6_obsv_blk00_pg04_MIN'"; }
                evLowLimit = Expr { String = "0.5V"; }
                evHighLimit = Expr { String = "0.7V"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestV1p2Obsv = evParametricTest {
                Number = Expr { String = "1501201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus2_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'V1P2_OBSV_BLK00_PG04_MIN'"; }
                evLowLimit = Expr { String = "1.1V"; }
                evHighLimit = Expr { String = "1.3V"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVbgtst = evParametricTest {
                Number = Expr { String = "1501202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus1_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'VBGTST_BLK00_PG04_MIN'"; }
                evLowLimit = Expr { String = "1.1V"; }
                evHighLimit = Expr { String = "1.3V"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVddaSWVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'vdda_sw_blk00_pg09_min'"; }
                    evLowLimit = Expr { String = "TN951501203.Min"; }
                    evHighLimit = Expr { String = "TN951501203.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVdddSWVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus0_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VDDD_SW_BLK00_PG09_MIN'"; }
                    evLowLimit = Expr { String = "TN951501204.Min"; }
                    evHighLimit = Expr { String = "TN951501204.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVdd18OtpSWVltg = evParametricTest {
                Number = Expr { String = "1501205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus2_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vdd18_otp_sw_blk00_pg10_min'"; }
                evLowLimit = Expr { String = "TN951501205.Min"; }
                evHighLimit = Expr { String = "TN951501205.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVdd18OtpVltg = evParametricTest {
                Number = Expr { String = "1501229"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vdd18_otp_blk00_pg10_min'"; }
                evLowLimit = Expr { String = "TN951501205.Min"; }
                evHighLimit = Expr { String = "TN951501205.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVdd18DpllVltg = evParametricTest {
                Number = Expr { String = "1501206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus2_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vdd18_dpll_sw_blk00_pg11_min'"; }
                evLowLimit = Expr { String = "TN951501206.Min"; }
                evHighLimit = Expr { String = "TN951501206.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TestVdd18PAswVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'vdd18_pa_sw_blk00_pg12_min'"; }
                    evLowLimit = Expr { String = "TN951501206.Min"; }
                    evHighLimit = Expr { String = "TN951501206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVdd18PBswVltg = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus1_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'vdd18_pb_sw_blk00_pg12_min'"; }
                    evLowLimit = Expr { String = "TN951501206.Min"; }
                    evHighLimit = Expr { String = "TN951501206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Testi160u_dpll = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus3_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i160u_dpll_blk01_pg02_min'"; }
                    evLowLimit = Expr { String = "140.0uA"; }
                    evHighLimit = Expr { String = "180.0uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testi20u_rescal = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i20u_rescal_blk01_pg02_min'"; }
                    evLowLimit = Expr { String = "-30.0uA"; }
                    evHighLimit = Expr { String = "-10.0uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testi80u_spc = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus3_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i80u_spc_blk01_pg03_min'"; }
                    evLowLimit = Expr { String = "50.0uA"; }
                    evHighLimit = Expr { String = "110.0uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testi80u_clbr = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'i80u_clbr_blk01_pg03_min'"; }
                    evLowLimit = Expr { String = "70uA"; }
                    evHighLimit = Expr { String = "90uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Testcml_rescal_bot = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501213"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus0_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'cml_rescal_bot_blk_01_pg03_min'"; }
                    evLowLimit = Expr { String = "TN951501213.Min"; }
                    evHighLimit = Expr { String = "TN951501213.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Testcml_rescal_top = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501214"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus1_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'cml_rescal_top_blk_01_pg03_min'"; }
                    evLowLimit = Expr { String = "TN951501214.Min"; }
                    evHighLimit = Expr { String = "TN951501214.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Testcml_rescal_diff = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501215"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'cml_rescal_differential_blk01_pg03_min'"; }
                    evLowLimit = Expr { String = "0.4V"; }
                    evHighLimit = Expr { String = "0.7V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestI40_1u = evParametricTest {
                Number = Expr { String = "1501216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'I40_1U_BLK01_PG04_MIN'"; }
                evLowLimit = Expr { String = "TN951501916.Min"; }
                evHighLimit = Expr { String = "TN951501916.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            TestVbg1uN = evParametricTest {
                Number = Expr { String = "1501217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus1_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_1u_senseN_blk01_pg04_min'"; }
                evLowLimit = Expr { String = "-10.0mV"; }
                evHighLimit = Expr { String = "20.0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg1uP = evParametricTest {
                Number = Expr { String = "1501218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus0_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_1u_senseP_blk01_pg04_min'"; }
                evLowLimit = Expr { String = "TN951501918.Min"; }
                evHighLimit = Expr { String = "TN951501918.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg1uDIFF = evParametricTest {
                Number = Expr { String = "1501219"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_1u_differential_blk01_pg04_min'"; }
                evLowLimit = Expr { String = "TN951501918.Min"; }
                evHighLimit = Expr { String = "TN951501918.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestI40_3u = evParametricTest {
                Number = Expr { String = "1501220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus3_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'I40_3U_BLK01_PG05_MIN'"; }
                evLowLimit = Expr { String = "TN951501916.Min"; }
                evHighLimit = Expr { String = "TN951501916.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            TestVbg3uN = evParametricTest {
                Number = Expr { String = "1501221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus1_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_3u_senseN_blk01_pg05_min'"; }
                evLowLimit = Expr { String = "-10.0mV"; }
                evHighLimit = Expr { String = "20.0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg3uP = evParametricTest {
                Number = Expr { String = "1501222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus0_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_3u_senseP_blk01_pg05_min'"; }
                evLowLimit = Expr { String = "TN951501922.Min"; }
                evHighLimit = Expr { String = "TN951501922.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVbg3uDIFF = evParametricTest {
                Number = Expr { String = "1501223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'vbg_3u_differential_blk01_pg05_min'"; }
                evLowLimit = Expr { String = "TN951501922.Min"; }
                evHighLimit = Expr { String = "TN951501922.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestVREG_VCO = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501224"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus3_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VREG_VCO_BLK02_PG02_MIN'"; }
                    evLowLimit = Expr { String = "0.7V"; }
                    evHighLimit = Expr { String = "1V"; }
                    evUnits = Expr { String = "'mV'"; }
                }
            }
            TestVREG_PFDDIV = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501225"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus2_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VREG_PFDDIV_BLK02_PG02_MIN'"; }
                    evLowLimit = Expr { String = "0.8V"; }
                    evHighLimit = Expr { String = "1.1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVREG_PDDDIV = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501226"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus1_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VREG_PDDDIV_BLK02_PG02_MIN'"; }
                    evLowLimit = Expr { String = "0.8V"; }
                    evHighLimit = Expr { String = "1.1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestVDD18_XTAL = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1501227"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "abus0_VI16_pins"; }
                    evFailBin = AbusFail;
                    evTestText = Expr { String = "'VDD18_XTAL_BLK02_PG02_MIN'"; }
                    evLowLimit = Expr { String = "TN951501206.Min"; }
                    evHighLimit = Expr { String = "TN951501206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TestBlk4Pg1 = evParametricTest {
                Number = Expr { String = "1501228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "abus0_VI16_pins"; }
                evFailBin = AbusFail;
                evTestText = Expr { String = "'VDD_VCO_AUDPLL_BLK_04_PG01_MIN'"; }
                evLowLimit = Expr { String = "-0.1V"; }
                evHighLimit = Expr { String = "2.2V"; }
                evUnits = Expr { String = "'V'"; }
            }
            FlagBadXRES = evParametricTest {
                Number = Expr { String = "1501250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'Possible_resistive_XRES_or_K2_on_Loadboard_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
        }
    }
}
ETest ATPG {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = ATPG_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR  (OpVar_Debug_TempChecks)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_PRE_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_PRE_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_PRE_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "strcmp(OpVar_TestTemp, 'HOT') = 0        OR  (OpVar_DEBUG_Master)  OR  (OpVar_DebugVDDcorners)  "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.AtpgTest";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SafNoComp1 = evFunctionalTest {
                Number = Expr { String = "1519200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_1_MIN'"; }
            }
            SafNoComp2 = evFunctionalTest {
                Number = Expr { String = "1519201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_2_MIN'"; }
            }
            SafNoComp3 = evFunctionalTest {
                Number = Expr { String = "1519202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_3_MIN'"; }
            }
            SafNoComp4 = evFunctionalTest {
                Number = Expr { String = "1519203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_4_MIN'"; }
            }
            SafNoComp5 = evFunctionalTest {
                Number = Expr { String = "1519204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_5_MIN'"; }
            }
            SafNoComp6 = evFunctionalTest {
                Number = Expr { String = "1519205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_6_MIN'"; }
            }
            SafComp = evFunctionalTest {
                Number = Expr { String = "1519206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_MIN'"; }
            }
            SafComp1 = evFunctionalTest {
                Number = Expr { String = "1519207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_0_MIN'"; }
            }
            SafComp2 = evFunctionalTest {
                Number = Expr { String = "1519208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_1_MIN'"; }
            }
            SafComp3 = evFunctionalTest {
                Number = Expr { String = "1519209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_2_MIN'"; }
            }
            SafComp4 = evFunctionalTest {
                Number = Expr { String = "1519210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_3_MIN'"; }
            }
            SafComp5 = evFunctionalTest {
                Number = Expr { String = "1519211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_5_MIN'"; }
            }
            SafComp6 = evFunctionalTest {
                Number = Expr { String = "1519212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_6_MIN'"; }
            }
            SafComp7 = evFunctionalTest {
                Number = Expr { String = "1519213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_7_MIN'"; }
            }
            TdfComp1 = evFunctionalTest {
                Number = Expr { String = "1519220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_00_MIN'"; }
            }
            TdfComp2 = evFunctionalTest {
                Number = Expr { String = "1519221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_01_MIN'"; }
            }
            TdfComp3 = evFunctionalTest {
                Number = Expr { String = "1519222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_02_MIN'"; }
            }
            TdfComp4 = evFunctionalTest {
                Number = Expr { String = "1519223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_03_MIN'"; }
            }
            TdfComp5 = evFunctionalTest {
                Number = Expr { String = "1519224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_04_MIN'"; }
            }
            TdfComp6 = evFunctionalTest {
                Number = Expr { String = "1519225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_05_MIN'"; }
            }
            TdfComp7 = evFunctionalTest {
                Number = Expr { String = "1519226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_00_09_MIN'"; }
            }
            TdfComp8 = evFunctionalTest {
                Number = Expr { String = "1519227"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_10_19_MIN'"; }
            }
            TdfComp9 = evFunctionalTest {
                Number = Expr { String = "1519228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_20_29_MIN'"; }
            }
            TdfComp10 = evFunctionalTest {
                Number = Expr { String = "1519229"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_30_37_MIN'"; }
            }
            TdfComp11 = evFunctionalTest {
                Number = Expr { String = "1519230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_0_MIN'"; }
            }
            TdfComp12 = evFunctionalTest {
                Number = Expr { String = "1519231"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_1_MIN'"; }
            }
            TdfComp13 = evFunctionalTest {
                Number = Expr { String = "1519232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_2_MIN'"; }
            }
            TdfComp14 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_3_MIN'"; }
            }
            TdfComp15 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_4_MIN'"; }
            }
            SbfComp = evFunctionalTest {
                Number = Expr { String = "1519240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_MIN'"; }
            }
            SbfComp1 = evFunctionalTest {
                Number = Expr { String = "1519241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_0_MIN'"; }
            }
            SbfComp2 = evFunctionalTest {
                Number = Expr { String = "1519242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_1_MIN'"; }
            }
            SafDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SAF_MIN'"; }
            }
            TdfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519255"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_TDF_MIN'"; }
            }
            SbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SBF_MIN'"; }
            }
            DbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519265"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_DBF_MIN'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "(strcmp(OpVar_TestTemp, 'ROOM') = 0)  OR  (strcmp(OpVar_TestTemp, 'COLD') = 0)    OR  (OpVar_DEBUG_Master)  OR  (OpVar_DebugVDDcorners)  "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.AtpgTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SafNoComp1 = evFunctionalTest {
                Number = Expr { String = "1519900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_1_MAX'"; }
            }
            SafNoComp2 = evFunctionalTest {
                Number = Expr { String = "1519901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_2_MAX'"; }
            }
            SafNoComp3 = evFunctionalTest {
                Number = Expr { String = "1519902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_3_MAX'"; }
            }
            SafNoComp4 = evFunctionalTest {
                Number = Expr { String = "1519903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_4_MAX'"; }
            }
            SafNoComp5 = evFunctionalTest {
                Number = Expr { String = "1519904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_5_MAX'"; }
            }
            SafNoComp6 = evFunctionalTest {
                Number = Expr { String = "1519905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_NOCOMP_6_MAX'"; }
            }
            SafComp = evFunctionalTest {
                Number = Expr { String = "1519906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_MAX'"; }
            }
            SafComp1 = evFunctionalTest {
                Number = Expr { String = "1519907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_0_MAX'"; }
            }
            SafComp2 = evFunctionalTest {
                Number = Expr { String = "1519908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_1_MAX'"; }
            }
            SafComp3 = evFunctionalTest {
                Number = Expr { String = "1519909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_2_MAX'"; }
            }
            SafComp4 = evFunctionalTest {
                Number = Expr { String = "1519910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_3_MAX'"; }
            }
            SafComp5 = evFunctionalTest {
                Number = Expr { String = "1519911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_5_MAX'"; }
            }
            SafComp6 = evFunctionalTest {
                Number = Expr { String = "1519912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_6_MAX'"; }
            }
            SafComp7 = evFunctionalTest {
                Number = Expr { String = "1519913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SAF_COMP_7_MAX'"; }
            }
            TdfComp1 = evFunctionalTest {
                Number = Expr { String = "1519920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_00_MAX'"; }
            }
            TdfComp2 = evFunctionalTest {
                Number = Expr { String = "1519921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_01_MAX'"; }
            }
            TdfComp3 = evFunctionalTest {
                Number = Expr { String = "1519922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_02_MAX'"; }
            }
            TdfComp4 = evFunctionalTest {
                Number = Expr { String = "1519923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_03_MAX'"; }
            }
            TdfComp5 = evFunctionalTest {
                Number = Expr { String = "1519924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_04_MAX'"; }
            }
            TdfComp6 = evFunctionalTest {
                Number = Expr { String = "1519925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_05_MAX'"; }
            }
            TdfComp7 = evFunctionalTest {
                Number = Expr { String = "1519926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_00_09_MAX'"; }
            }
            TdfComp8 = evFunctionalTest {
                Number = Expr { String = "1519927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_10_19_MAX'"; }
            }
            TdfComp9 = evFunctionalTest {
                Number = Expr { String = "1519928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_20_29_MAX'"; }
            }
            TdfComp10 = evFunctionalTest {
                Number = Expr { String = "1519929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P2_30_37_MAX'"; }
            }
            TdfComp11 = evFunctionalTest {
                Number = Expr { String = "1519930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_0_MAX'"; }
            }
            TdfComp12 = evFunctionalTest {
                Number = Expr { String = "1519931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_1_MAX'"; }
            }
            TdfComp13 = evFunctionalTest {
                Number = Expr { String = "1519932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_2_MAX'"; }
            }
            TdfComp14 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_3_MAX'"; }
            }
            TdfComp15 = evFunctionalTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_TDF_COMP_P3_4_MAX'"; }
            }
            SbfComp = evFunctionalTest {
                Number = Expr { String = "1519940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_MAX'"; }
            }
            SbfComp1 = evFunctionalTest {
                Number = Expr { String = "1519941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_0_MAX'"; }
            }
            SbfComp2 = evFunctionalTest {
                Number = Expr { String = "1519942"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_SBF_COMP_1_MAX'"; }
            }
            SafDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519950"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SAF_MAX'"; }
            }
            TdfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519955"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_TDF_MAX'"; }
            }
            SbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519960"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_SBF_MAX'"; }
            }
            DbfDPLLTest = evFunctionalTest {
                Number = Expr { String = "1519965"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtpgFail;
                evTestText = Expr { String = "'ATPG_DPLL_DBF_MAX'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR  (OpVar_Debug_TempChecks)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_POST_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_POST_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_POST_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_POST_ATPG_SCAN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
}
ETest BasicFunc {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.Gross_Functional";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            FPGA_1_FW_Rev = evParametricTest {
                Number = Expr { String = "507"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'DAUGHTERCARD_FPGA_1_FIRMWARE_REVISION_CHECK'"; }
                evLowLimit = Expr { String = "OpVar_FPGA_1_FW_Rev"; }
                evHighLimit = Expr { String = "OpVar_FPGA_1_FW_Rev"; }
            }
            FPGA_2_FW_Rev = evParametricTest {
                Number = Expr { String = "508"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'DAUGHTERCARD_FPGA_2_FIRMWARE_REVISION_CHECK'"; }
                evLowLimit = Expr { String = "OpVar_FPGA_2_FW_Rev"; }
                evHighLimit = Expr { String = "OpVar_FPGA_2_FW_Rev"; }
            }
            DatalogDeviceID = evParametricTest {
                Number = Expr { String = "501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'DIE_ID_CHECK_REGISTER_ACCESS_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0x89"; }
            }
            DatalogDieRev = evParametricTest {
                Number = Expr { String = "502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'INFO_DIE_REVISION_TYP'"; }
                evLowLimit = Expr { String = "OpVar_DieRev"; }
                evHighLimit = Expr { String = "OpVar_DieRev"; }
            }
            DeviceIDCheck = evParametricTest {
                Number = Expr { String = "503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'DIE_ID_MATCH_EXPECTED_PART_NUMBER_TYP'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PowerUpAtBeginning = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            LockStatus = evParametricTest {
                Number = Expr { String = "504"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'OTP_HDMI_LOCK_STATUS_1_IS_LOCKED_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslLockStatus = evParametricTest {
                Number = Expr { String = "506"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'OTP_GMSL_LOCK_STATUS_1_IS_LOCKED_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRCLKOUT = evParametricTest {
                Number = Expr { String = "505"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'REFCLK_FREQUENCY_TYP'"; }
                evLowLimit = Expr { String = "24.995MHz"; }
                evHighLimit = Expr { String = "25.005MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            HPDtest = evFunctionalTest {
                Number = Expr { String = "1888506"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'HPD_FUNCTIONALITY_TYP'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.CheckUID";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            PowerUpAtBeginning = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            WS_markerLSB = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'X_COORD_OR_YYYYMMDD_(blind_build)_TYP'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)_TYP'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789_OR_SITE_(blind_build)_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            stuckdetectlim = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = Stuck_Device;
                    evTestText = Expr { String = "'Stuck Unit Check: Value is 1 on Stuck-up Unit'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "1"; }
                }
            }
        }
    }
}
ETest CheckRestrictions_MAX96743R {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.Confirm_SingleLink";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6.0"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_Link_status = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LimitConfig;
                evTestText = Expr { String = "'GMSL_Link_SinglePhy_6G_187p5M_A_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            VDDCorner = Expr { String = "9"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.Confirm_SingleLink";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6.0"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_Link_status = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LimitConfig;
                evTestText = Expr { String = "'GMSL_Link_SinglePhy_6G_187p5M_B_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            VDDCorner = Expr { String = "9"; }
        }
    }
    evBlock[2] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.Confirm_SingleLink";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6.0"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_Link_status = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LimitConfig;
                evTestText = Expr { String = "'GMSL_Link_DualPhy_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "10"; }
                evHighLimit = Expr { String = "10"; }
            }
            VDDCorner = Expr { String = "9"; }
        }
    }
}
ETest ContactTestEndMRQ {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_x_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536009"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536010"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_y_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536011"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536012"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_END'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest ContactTestFrontMRQ {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    Exit[0] =         MicroFlow  {
            Event[0] {
                Value = Expr { String = "#"; Mode = Output; }
                Index = Expr { String = "1"; }
                Enable = Expr { String = "TRUE"; }
                Method {
                        MicroFlowMid = "dc_tests.mod.ContactExit";
                }
            }
        }
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.LogDateTime";
            date_test = evParametricTest {
                evTestText = Expr { String = "'DATE_OF_TEST_YYYYMMDD'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "20501231"; }
            }
            time_test = evParametricTest {
                evTestText = Expr { String = "'TIME_OF_TEST_HHMMSS'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "240000"; }
            }
            StuckEnableLim = evParametricTest {
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_x_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536009"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536010"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_x_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[5] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_mrq_rgmii_grp_y_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'ContinuityA'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536011"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_RGMII_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-1.2V"; }
                evHighLimit = Expr { String = "1V"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536012"; }
                evPins = Expr { String = "dut_mrq_rgmii_grp_y_dlog_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_RGMII_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "-2.1V"; }
                evHighLimit = Expr { String = "-100mV"; }
                evSimulateValue = Expr { String = "-0.5"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
            }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_FRONT'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest ContactTestEndTQFN {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_END'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_END'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_END'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_END'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_END'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_END'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest ContactTestFrontTQFN {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    Exit[0] =         MicroFlow  {
            Event[0] {
                Value = Expr { String = "#"; Mode = Output; }
                Index = Expr { String = "1"; }
                Enable = Expr { String = "TRUE"; }
                Method {
                        MicroFlowMid = "dc_tests.mod.ContactExit";
                }
            }
        }
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.LogDateTime";
            date_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'DATE_OF_TEST_YYYYMMDD'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "20501231"; }
            }
            time_test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'TIME_OF_TEST_HHMMSS'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "240000"; }
            }
            StuckEnableLim = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_even_pins-dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Number = Expr { String = "1000001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = WrongDeviceOrientation;
                evTestText = Expr { String = "'PART_ORIENTATION_IN_DEGREES'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
                evUnits = Expr { String = "'Deg'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_even_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "True"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_even_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_EVEN_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
            ForceI = Expr { String = "-200uA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536001.Min"; }
                evHighLimit = Expr { String = "TN101536001.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536006"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_odd_pins-dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Contact";
            TestPins = Expr { String = "dut_sio_odd_pins"; }
            ForceI = Expr { String = "-2mA"; }
            ClampV = Expr { String = "-1.7V"; }
            InitializeTest = Expr { String = "TRUE"; }
            RelayStr = Expr { String = "'AllDp'"; }
            OpensTest = evParametricTest {
                Number = Expr { String = "1536007"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Opens;
                evTestText = Expr { String = "'OPENS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536007.Min"; }
                evHighLimit = Expr { String = "TN101536007.Max"; }
                evSimulateValue = Expr { String = "-453mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ShortsTest = evParametricTest {
                Number = Expr { String = "1536008"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_sio_odd_pins"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SHORTS_SIO_ODD_PINS_FRONT'"; }
                evLowLimit = Expr { String = "TN101536002.Min"; }
                evHighLimit = Expr { String = "TN101536002.Max"; }
                evSimulateValue = Expr { String = "-455mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DevOrientationTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.SupplyShorts";
            VddTest = evParametricTest {
                Number = Expr { String = "1537001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD_FRONT'"; }
                evLowLimit = Expr { String = "TN101537001.Min"; }
                evHighLimit = Expr { String = "TN101537001.Max"; }
                evSimulateValue = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddATest = evParametricTest {
                Number = Expr { String = "1537002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDA_FRONT'"; }
                evLowLimit = Expr { String = "TN101537002.Min"; }
                evHighLimit = Expr { String = "TN101537002.Max"; }
                evSimulateValue = Expr { String = "12uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18Test = evParametricTest {
                Number = Expr { String = "1537003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD18_FRONT'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddIoTest = evParametricTest {
                Number = Expr { String = "1537004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDDIO_FRONT'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evSimulateValue = Expr { String = "45uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33Test = evParametricTest {
                Number = Expr { String = "1537005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = Shorts;
                evTestText = Expr { String = "'SUPPLY_SHORTS_VDD33_FRONT'"; }
                evLowLimit = Expr { String = "TN101537003.Min"; }
                evHighLimit = Expr { String = "TN101537003.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest Dal_Cleanup_Wrapper {
    Result = Expr { String = "#"; Mode = Output; }
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.DAL_wrapper_cleanup";
            OTP_Fail_Bin = Expr { String = "34"; }
            log_time = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Time to log Key result'"; }
                evLowLimit = Expr { String = "0ms"; }
                evHighLimit = Expr { String = "2000ms"; }
            }
        }
    }
}
ETest Dal_Init_Wrapper {
    Result = Expr { String = "#"; Mode = Output; }
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.Establish_SSL_Connection";
        }
    }
}
ETest Debug_Test {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
}
ETest Debug1 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning OR NOT OpVar_Char OR OpVar_Char"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.LinkSensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            DES_TX_Amplitude = Expr { String = "Array(100,130,160,160,160)"; }
            ErrCountA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            ErrCountB = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "'UART'"; }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkStatusTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TotalTestTime = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'i2c'"; }
            IncludeFunc = Expr { String = "TRUE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'GROSS_FUNCTIONAL_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'DEVICE_ID_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0x83"; }
                evHighLimit = Expr { String = "0x89"; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "150"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "150"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TDiodeVltgFail;
                evTestText = Expr { String = "'TDiode Voltage Check'"; }
                evLowLimit = Expr { String = "TN151543900.Min-100mV"; }
                evHighLimit = Expr { String = "TN151543900.Max+100mV"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
}
ETest DigitalLevelsTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalVilVih";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+DUT_DDCSCL+DUT_DDCSDA+DUT_HSPD+DUT_PWDNB"; }
            ForceVil = Expr { String = "TN251066901.Min"; }
            ForceVih = Expr { String = "TN251065901.Max"; }
            VilPatTest = evParametricTest {
                Number = Expr { String = "1066901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVilFail;
                evTestText = Expr { String = "'DIGITAL_VIL_MAX'"; }
                evLowLimit = Expr { String = "TN251066901.Min"; }
                evHighLimit = Expr { String = "2.88V"; }
                evSimulateValue = Expr { String = "VDDIO.Max*0.33"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VihPatTest = evParametricTest {
                Number = Expr { String = "1065901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVihFail;
                evTestText = Expr { String = "'DIGITAL_VIH_MAX'"; }
                evLowLimit = Expr { String = "1.44V"; }
                evHighLimit = Expr { String = "TN251065901.Max"; }
                evSimulateValue = Expr { String = "VDDIO.Max*0.6"; }
                evUnits = Expr { String = "'V'"; }
            }
            VilSrchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1066902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+DUT_DDCSCL+DUT_DDCSDA+DUT_HSPD+DUT_PWDNB"; }
                    evFailBin = DigVilFail;
                    evTestText = Expr { String = "'DIGITAL_VIL_SRCH_MAX'"; }
                    evLowLimit = Expr { String = "TN251066902.Min"; }
                    evHighLimit = Expr { String = "TN251066902.Max"; }
                    evSimulateValue = Expr { String = "1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            VihSrchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1065902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+DUT_DDCSCL+DUT_DDCSDA+DUT_HSPD+DUT_PWDNB"; }
                    evFailBin = DigVihFail;
                    evTestText = Expr { String = "'DIGITAL_VIH_SRCH_MAX'"; }
                    evLowLimit = Expr { String = "TN251065902.Min"; }
                    evHighLimit = Expr { String = "TN251065902.Max"; }
                    evSimulateValue = Expr { String = "1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalVilVih";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+DUT_DDCSCL+DUT_DDCSDA+DUT_HSPD+DUT_PWDNB"; }
            ForceVil = Expr { String = "TN251066201.Min"; }
            ForceVih = Expr { String = "TN251065201.Max"; }
            VilPatTest = evParametricTest {
                Number = Expr { String = "1066201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVilFail;
                evTestText = Expr { String = "'DIGITAL_VIL_MIN'"; }
                evLowLimit = Expr { String = "TN251066201.Min"; }
                evHighLimit = Expr { String = "1.36V"; }
                evSimulateValue = Expr { String = "VDDIO.Min*0.33"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VihPatTest = evParametricTest {
                Number = Expr { String = "1065201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVihFail;
                evTestText = Expr { String = "'DIGITAL_VIH_MIN'"; }
                evLowLimit = Expr { String = "680mV"; }
                evHighLimit = Expr { String = "TN251065201.Max"; }
                evSimulateValue = Expr { String = "VDDIO.Min*.6"; }
                evUnits = Expr { String = "'V'"; }
            }
            VilSrchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1066202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+DUT_DDCSCL+DUT_DDCSDA+DUT_HSPD+DUT_PWDNB"; }
                    evFailBin = DigVilFail;
                    evTestText = Expr { String = "'DIGITAL_VIL_SRCH_MIN'"; }
                    evLowLimit = Expr { String = "TN251066202.Min"; }
                    evHighLimit = Expr { String = "TN251066202.Max"; }
                    evSimulateValue = Expr { String = "1V"; }
                    evUnits = Expr { String = "'mV'"; }
                }
            }
            VihSrchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1065202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+DUT_DDCSCL+DUT_DDCSDA+DUT_HSPD+DUT_PWDNB"; }
                    evFailBin = DigVihFail;
                    evTestText = Expr { String = "'DIGITAL_VIH_SRCH_MIN'"; }
                    evLowLimit = Expr { String = "TN251065202.Min"; }
                    evHighLimit = Expr { String = "TN251065202.Max"; }
                    evSimulateValue = Expr { String = "1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            VDDCorner = Expr { String = "2"; }
            ForcePowerup = Expr { String = "FALSE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalVolVoh";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestPins = Expr { String = "dut_all_gpio_pins+dut_open_drain_even_pins+dut_open_drain_odd_pins+DUT_HSPD"; }
            ForceIol = Expr { String = "4mA"; }
            ForceIoh = Expr { String = "-4mA"; }
            VolMax = Expr { String = "TN251064201.Max"; }
            VohMin = Expr { String = "TN251063201.Min"; }
            VolPatTest = evParametricTest {
                Number = Expr { String = "1064201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVolFail;
                evTestText = Expr { String = "'GPIO_VOL_4mA_MIN'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "TN251064201.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VohPatTest = evParametricTest {
                Number = Expr { String = "1063201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVohFail;
                evTestText = Expr { String = "'GPIO_VOH_4mA_MIN'"; }
                evLowLimit = Expr { String = "TN251063201.Min"; }
                evHighLimit = Expr { String = "TN251063201.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VolMeasTest = evParametricTest {
                Number = Expr { String = "1064202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins+dut_open_drain_even_pins+dut_open_drain_odd_pins+DUT_HSPD"; }
                evFailBin = DigVolFail;
                evTestText = Expr { String = "'GPIO_VOL_MEAS_4mA_MIN'"; }
                evLowLimit = Expr { String = "TN251064202.Min"; }
                evHighLimit = Expr { String = "TN251064202.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VohMeasTest = evParametricTest {
                Number = Expr { String = "1063202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins"; }
                evFailBin = DigVohFail;
                evTestText = Expr { String = "'GPIO_VOH_MEAS_4mA_MIN'"; }
                evLowLimit = Expr { String = "TN251063202.Min"; }
                evHighLimit = Expr { String = "TN251063202.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDDCorner = Expr { String = "2"; }
            ForcePowerup = Expr { String = "FALSE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalVolVoh";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "dut_all_gpio_pins+dut_open_drain_even_pins+dut_open_drain_odd_pins+DUT_HSPD"; }
            ForceIol = Expr { String = "4mA"; }
            ForceIoh = Expr { String = "-4mA"; }
            VolMax = Expr { String = "TN251064201.Max"; }
            VohMin = Expr { String = "TN251063901.Min"; }
            VolPatTest = evParametricTest {
                Number = Expr { String = "1064901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVolFail;
                evTestText = Expr { String = "'GPIO_VOL_4mA_MAX'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "TN251064201.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VohPatTest = evParametricTest {
                Number = Expr { String = "1063901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DigVohFail;
                evTestText = Expr { String = "'GPIO_VOH_4mA_MAX'"; }
                evLowLimit = Expr { String = "TN251063901.Min"; }
                evHighLimit = Expr { String = "3.7V"; }
                evUnits = Expr { String = "'V'"; }
            }
            VolMeasTest = evParametricTest {
                Number = Expr { String = "1064902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins+dut_open_drain_even_pins+dut_open_drain_odd_pins+DUT_HSPD"; }
                evFailBin = DigVolFail;
                evTestText = Expr { String = "'GPIO_VOL_MEAS_4mA_MAX'"; }
                evLowLimit = Expr { String = "TN251064202.Min"; }
                evHighLimit = Expr { String = "TN251064202.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VohMeasTest = evParametricTest {
                Number = Expr { String = "1063902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins"; }
                evFailBin = DigVohFail;
                evTestText = Expr { String = "'GPIO_VOH_MEAS_4mA_MAX'"; }
                evLowLimit = Expr { String = "TN251063902.Min"; }
                evHighLimit = Expr { String = "TN251063902.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "FALSE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalPullUpDownTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+dut_ddc_pins"; }
            ForceV = Expr { String = "0V"; }
            ConnectV = Expr { String = "VDDIO.Max"; }
            IRange = Expr { String = "200uA"; }
            RegConfigStr = Expr { String = "'PullupGpio40k'"; }
            ConnectToDclAtEnd = Expr { String = "TRUE"; }
            ResultTest = evParametricTest {
                Number = Expr { String = "1555901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins+dut_i2c_uart_pins+dut_ddc_pins"; }
                evFailBin = PullupPullDownFail;
                evTestText = Expr { String = "'GPIO_PULLUP_40K_MAX'"; }
                evLowLimit = Expr { String = "TN251555901.Min"; }
                evHighLimit = Expr { String = "TN251555901.Max"; }
                evUnits = Expr { String = "'KOhm'"; }
            }
            Test_LOCK_ERRB = evParametricTest {
                Number = Expr { String = "1555902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_LOCK+DUT_ERRB_LFLTB_INTOUTB"; }
                evFailBin = PullupPullDownFail;
                evTestText = Expr { String = "'GPIO_PULLUP_40K_MAX'"; }
                evLowLimit = Expr { String = "TN251555901.Min"; }
                evHighLimit = Expr { String = "TN251555901.Max"; }
                evUnits = Expr { String = "'KOhm'"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "FALSE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalPullUpDownTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "dut_all_gpio_pins"; }
            ForceV = Expr { String = "0V"; }
            ConnectV = Expr { String = "VDDIO.Max"; }
            IRange = Expr { String = "20uA"; }
            RegConfigStr = Expr { String = "'PullupGpio1M'"; }
            ConnectToDclAtEnd = Expr { String = "TRUE"; }
            ResultTest = evParametricTest {
                Number = Expr { String = "1556901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins"; }
                evFailBin = PullupPullDownFail;
                evTestText = Expr { String = "'GPIO_PULLUP_1M_MAX'"; }
                evLowLimit = Expr { String = "TN251556901.Min"; }
                evHighLimit = Expr { String = "TN251556901.Max"; }
                evUnits = Expr { String = "'KOhm'"; }
            }
            Test_LOCK_ERRB = evParametricTest {
                Number = Expr { String = "1555906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "FALSE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalPullUpDownTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "dut_all_gpio_pins"; }
            ForceV = Expr { String = "VDDIO.Max"; }
            ConnectV = Expr { String = "0V"; }
            IRange = Expr { String = "200uA"; }
            RegConfigStr = Expr { String = "'PulldownGpio40k'"; }
            ConnectToDclAtEnd = Expr { String = "TRUE"; }
            ResultTest = evParametricTest {
                Number = Expr { String = "1555903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins"; }
                evFailBin = PullupPullDownFail;
                evTestText = Expr { String = "'GPIO_PULLDOWN_40K_MAX'"; }
                evLowLimit = Expr { String = "TN251555901.Min"; }
                evHighLimit = Expr { String = "TN251555901.Max"; }
                evUnits = Expr { String = "'KOhm'"; }
            }
            Test_LOCK_ERRB = evParametricTest {
                Number = Expr { String = "1555904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "FALSE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalPullUpDownTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "dut_all_gpio_pins"; }
            ForceV = Expr { String = "VDDIO.Max"; }
            ConnectV = Expr { String = "0V"; }
            IRange = Expr { String = "20uA"; }
            RegConfigStr = Expr { String = "'PulldownGpio1M'"; }
            ConnectToDclAtEnd = Expr { String = "TRUE"; }
            ResultTest = evParametricTest {
                Number = Expr { String = "1556902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_all_gpio_pins"; }
                evFailBin = PullupPullDownFail;
                evTestText = Expr { String = "'GPIO_PULLDOWN_1M_MAX'"; }
                evLowLimit = Expr { String = "TN251556901.Min"; }
                evHighLimit = Expr { String = "TN251556901.Max"; }
                evUnits = Expr { String = "'KOhm'"; }
            }
            Test_LOCK_ERRB = evParametricTest {
                Number = Expr { String = "1555905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "FALSE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.CtrlPinsPullDownTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "DUT_PWDNB+DUT_NC_GMSL2B+DUT_HSPD"; }
            ForceV = Expr { String = "VDDIO.Max"; }
            ConnectV = Expr { String = "0V"; }
            IRange = Expr { String = "20uA"; }
            RegConfigStr = Expr { String = "'PulldownGpio1M'"; }
            ConnectToDclAtEnd = Expr { String = "TRUE"; }
            ResultTest = evParametricTest {
                Number = Expr { String = "1143901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB+DUT_NC_GMSL2B+DUT_HSPD"; }
                evFailBin = PullupPullDownFail;
                evTestText = Expr { String = "'INPUT_PULLDOWN_1M_MAX'"; }
                evLowLimit = Expr { String = "TN251556901.Min"; }
                evHighLimit = Expr { String = "TN251556901.Max"; }
                evUnits = Expr { String = "'KOhm'"; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.X1_OSC_X2_Tests";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            X2Vlow_test = evParametricTest {
                Number = Expr { String = "541905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = DigVolFail;
                evTestText = Expr { String = "'VOL_X2_MAX'"; }
                evLowLimit = Expr { String = "TN250541905.Min"; }
                evHighLimit = Expr { String = "TN250541905.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            X2Vhigh_test = evParametricTest {
                Number = Expr { String = "540905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = DigVohFail;
                evTestText = Expr { String = "'VOH_X2_MAX'"; }
                evLowLimit = Expr { String = "TN250540905.Min"; }
                evHighLimit = Expr { String = "TN250540905.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            X2Ilow_test = evParametricTest {
                Number = Expr { String = "797915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X2_IOH_MAX'"; }
                evLowLimit = Expr { String = "-3.1mA"; }
                evHighLimit = Expr { String = "-1.5mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            X2Ihigh_test = evParametricTest {
                Number = Expr { String = "797916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X2_IOH_MAX'"; }
                evLowLimit = Expr { String = "-3.1mA"; }
                evHighLimit = Expr { String = "-1.0mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            X1Ilow_test = evParametricTest {
                Number = Expr { String = "797970"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'LKG_LOW_X1_MAX'"; }
                evLowLimit = Expr { String = "TN250797970.Min"; }
                evHighLimit = Expr { String = "TN250797970.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1Ihigh_test = evParametricTest {
                Number = Expr { String = "797971"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'LKG_HIGH_X1_MAX'"; }
                evLowLimit = Expr { String = "TN250797971.Min"; }
                evHighLimit = Expr { String = "TN250797971.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            ResVal_test = evParametricTest {
                Number = Expr { String = "797972"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_X2_RESISTANCE_MAX'"; }
                evLowLimit = Expr { String = "TN250797972.Min"; }
                evHighLimit = Expr { String = "TN250797972.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            X1Vil_test = evParametricTest {
                Number = Expr { String = "543910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = DigVilFail;
                evTestText = Expr { String = "'VIL_X1_OSC_MAX'"; }
                evLowLimit = Expr { String = "TN250543910.Min"; }
                evHighLimit = Expr { String = "TN250543910.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            X1Vih_test = evParametricTest {
                Number = Expr { String = "542910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = DigVihFail;
                evTestText = Expr { String = "'VIH_X1_OSC_MAX'"; }
                evLowLimit = Expr { String = "TN250542910.Min"; }
                evHighLimit = Expr { String = "TN250542910.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.X1_OSC_X2_Tests";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            X2Vlow_test = evParametricTest {
                Number = Expr { String = "541205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = DigVolFail;
                evTestText = Expr { String = "'VOL_X2_MIN'"; }
                evLowLimit = Expr { String = "TN250541905.Min"; }
                evHighLimit = Expr { String = "TN250541905.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            X2Vhigh_test = evParametricTest {
                Number = Expr { String = "540205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = DigVohFail;
                evTestText = Expr { String = "'VOH_X2_MIN'"; }
                evLowLimit = Expr { String = "TN250540205.Min"; }
                evHighLimit = Expr { String = "TN250540205.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            X2Ilow_test = evParametricTest {
                Number = Expr { String = "797215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'LKG_LOW_X2_MIN'"; }
                evLowLimit = Expr { String = "-3.1mA"; }
                evHighLimit = Expr { String = "-1.5mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            X2Ihigh_test = evParametricTest {
                Number = Expr { String = "797216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X2"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X2_IOH_MIN'"; }
                evLowLimit = Expr { String = "-3.1mA"; }
                evHighLimit = Expr { String = "-1.0mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            X1Ilow_test = evParametricTest {
                Number = Expr { String = "797270"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'LKG_LOW_X1_MIN'"; }
                evLowLimit = Expr { String = "TN250797270.Min"; }
                evHighLimit = Expr { String = "TN250797270.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1Ihigh_test = evParametricTest {
                Number = Expr { String = "797271"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'LKG_HIGH_X1_MIN'"; }
                evLowLimit = Expr { String = "TN250797271.Min"; }
                evHighLimit = Expr { String = "TN250797271.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            ResVal_test = evParametricTest {
                Number = Expr { String = "797272"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_X2_RESISTANCE_MIN'"; }
                evLowLimit = Expr { String = "TN250797972.Min"; }
                evHighLimit = Expr { String = "TN250797972.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            X1Vil_test = evParametricTest {
                Number = Expr { String = "543210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = DigVilFail;
                evTestText = Expr { String = "'VIL_X1_OSC_MIN'"; }
                evLowLimit = Expr { String = "TN250543210.Min"; }
                evHighLimit = Expr { String = "TN250543210.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            X1Vih_test = evParametricTest {
                Number = Expr { String = "542210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = DigVihFail;
                evTestText = Expr { String = "'VIH_X1_OSC_MIN'"; }
                evLowLimit = Expr { String = "TN250542910.Min"; }
                evHighLimit = Expr { String = "TN250542210.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.DigitalVilVih";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestPins = Expr { String = "DUT_PWDNB"; }
            ForceVil = Expr { String = "TN251066201.Min"; }
            ForceVih = Expr { String = "TN251065201.Max"; }
            VilPatTest = evParametricTest {
                Number = Expr { String = "1066203"; }
                evFailBin = DigVilFail;
                evTestText = Expr { String = "'DIGITAL_DUT_PWDNB_VIL_MIN'"; }
                evLowLimit = Expr { String = "TN251066201.Min"; }
                evHighLimit = Expr { String = "1.36V"; }
                evSimulateValue = Expr { String = "VDDIO.Min*0.33"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VihPatTest = evParametricTest {
                Number = Expr { String = "1065203"; }
                evFailBin = DigVihFail;
                evTestText = Expr { String = "'DIGITAL_DUT_PWDNB_VIH_MIN'"; }
                evLowLimit = Expr { String = "680mV"; }
                evHighLimit = Expr { String = "TN251065201.Max"; }
                evSimulateValue = Expr { String = "VDDIO.Min*.6"; }
                evUnits = Expr { String = "'V'"; }
            }
            VilSrchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1066204"; }
                    evPins = Expr { String = "DUT_PWDNB"; }
                    evFailBin = DigVilFail;
                    evTestText = Expr { String = "'DIGITAL_VIL_DUT_PWDNB__SRCH_MIN'"; }
                    evLowLimit = Expr { String = "TN251066204.Min"; }
                    evHighLimit = Expr { String = "TN251066204.Max"; }
                    evSimulateValue = Expr { String = "1V"; }
                    evUnits = Expr { String = "'mV'"; }
                }
            }
            VihSrchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1065204"; }
                    evPins = Expr { String = "DUT_PWDNB"; }
                    evFailBin = DigVihFail;
                    evTestText = Expr { String = "'DIGITAL_VIH_DUT_PWDNB_SRCH_MIN'"; }
                    evLowLimit = Expr { String = "TN251065204.Min"; }
                    evHighLimit = Expr { String = "TN251065204.Max"; }
                    evSimulateValue = Expr { String = "1V"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
        }
    }
}
ETest FPGA_DCARD_Debug {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.LogDateTime";
            date_test = evParametricTest {
                evTestText = Expr { String = "'DATE_OF_TEST_YYYYMMDD'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "20501231"; }
            }
            time_test = evParametricTest {
                evTestText = Expr { String = "'TIME_OF_TEST_HHMMSS'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "250000"; }
            }
            StuckEnableLim = evParametricTest {
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.LogSpotCal";
            CalDateTest = evParametricTest {
            }
            CalTimeTest = evParametricTest {
            }
            iForce_Test = evParametricTest {
                evLowLimit = Expr { String = "-100uA"; }
                evHighLimit = Expr { String = "100uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            iForce_large_Test = evParametricTest {
                evLowLimit = Expr { String = "-100uA"; }
                evHighLimit = Expr { String = "100uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            CalFactorTest = {
                Row[0] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN0A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[1] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN0B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[2] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN1A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[3] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN1B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            CalFactor_large_Test = {
                Row[0] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m20_uA_ERROR_LMN0A'"; }
                    evLowLimit = Expr { String = "-1.1uA"; }
                    evHighLimit = Expr { String = "1.1uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m20_uA_ERROR_LMN0B'"; }
                    evLowLimit = Expr { String = "-1.1uA"; }
                    evHighLimit = Expr { String = "1.1uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m20_uA_ERROR_LMN1A'"; }
                    evLowLimit = Expr { String = "-1.1uA"; }
                    evHighLimit = Expr { String = "1.1uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_m20_uA_ERROR_LMN1B'"; }
                    evLowLimit = Expr { String = "-1.1uA"; }
                    evHighLimit = Expr { String = "1.1uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            CalFactor_HVVI_Test = {
                Row[0] = evParametricTest {
                }
            }
            MeterError_HVVI_Test = {
                Row[0] = evParametricTest {
                }
            }
            iForce_HVVI_Test = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "hw_check.mod.HWCHK_Cal_PPMU_fi_with_DVM";
            ppmu_plist = Expr { String = "dut_lmn_pins"; }
            iForce = Expr { String = "-6uA"; }
            meterRange = Expr { String = "20uA"; }
            RawLim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "7001"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_RAW_LMN0A'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "7002"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_RAW_LMN0B'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "7003"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_RAW_LMN1A'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "7004"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_RAW_LMN1B'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
            }
            CalLim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "7011"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN0A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "7012"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN0B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "7013"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN1A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "7014"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m6_uA_ERROR_LMN1B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "hw_check.mod.HWCHK_Cal_PPMU_fi_with_DVM";
            ppmu_plist = Expr { String = "dut_lmn_pins"; }
            iForce = Expr { String = "-3.0uA"; }
            meterRange = Expr { String = "20uA"; }
            RawLim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "8001"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_RAW_LMN0A'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "8002"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_RAW_LMN0B'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "8003"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_RAW_LMN1A'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "8004"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_RAW_LMN1B'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
            }
            CalLim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "8011"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_ERROR_LMN0A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "8012"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_ERROR_LMN0B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "8013"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_ERROR_LMN1A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "8014"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evTestText = Expr { String = "'CAL_PPMU_m3_uA_ERROR_LMN1B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "hw_check.mod.HWCHK_Cal_HVVI_fi_with_HP3458A";
            hvvi_plist = Expr { String = "DUT_LMN01A_HVVI+DUT_LMN01B_HVVI"; }
            iForce = Expr { String = "-15.0uA"; }
            RawLim = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_RAW_LMN0A'"; }
                    evLowLimit = Expr { String = "-20.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_RAW_LMN0B'"; }
                    evLowLimit = Expr { String = "-20.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
            }
            MeasLim = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_iMETER_LMN0A'"; }
                    evLowLimit = Expr { String = "-20.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_iMETER_LMN0B'"; }
                    evLowLimit = Expr { String = "-20.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
            }
            CalLim = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_ERROR_LMN0A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_ERROR_LMN0B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
            }
            CalMEASLim = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_METER_ERROR_LMN0A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m15_uA_METER_ERROR_LMN0B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "hw_check.mod.HWCHK_Cal_HVVI_fi_with_HP3458A";
            hvvi_plist = Expr { String = "DUT_LMN01A_HVVI+DUT_LMN01B_HVVI"; }
            iForce = Expr { String = "-3.0uA"; }
            RawLim = {
                Row[0] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m3_uA_RAW_LMN0A'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
                Row[1] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m3_uA_RAW_LMN0B'"; }
                    evLowLimit = Expr { String = "-10.0uA"; }
                    evHighLimit = Expr { String = "0uA"; }
                    evUnits = Expr { String = "'=uA'"; }
                }
            }
            MeasLim = {
                Row[0] = evParametricTest {
                }
            }
            CalLim = {
                Row[0] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m3_uA_ERROR_LMN0A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
                Row[1] = evParametricTest {
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evTestText = Expr { String = "'CAL_HVVI_m3_uA_ERROR_LMN0B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'=nA'"; }
                }
            }
            CalMEASLim = {
                Row[0] = evParametricTest {
                }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "hw_check.mod.LMN_Hardware_Checks__BBB";
            RelayNCTest = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'K12_K21_NC_Relay_Resistance_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "6"; }
                    evUnits = Expr { String = "'Ohm'"; }
                }
            }
            RelayNOTest = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'K12_K21_NO_Relay_Resistance_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "6"; }
                    evUnits = Expr { String = "'Ohm'"; }
                }
            }
            HVVI_force_PPMU_meas = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'HVVI_force_5p6uA_PPMU_measure_INFO_MIN'"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            PPMU_force_HVVI_meas = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'PPMU_force_5p6uA_HVVI_measure_INFO_MIN'"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            HVVI_Error = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'HVVI_FORCE_ERROR_INFO_MIN'"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            PPMU_Error = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'PPMU_FORCE_ERROR_INFO_MIN'"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "sys_and_levels.mod.FPGA_health";
            FPGA_ID = Expr { String = "'FPGA1'"; }
            FPGAfirmwareRev = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'FPGA1_FIRMWARE_REVISION'"; }
            }
            FPGAfirmwareRev2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'FPGA2_FIRMWARE_REVISION'"; }
            }
            FanRPM = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'FPGA_FAN_RPM'"; }
                evUnits = Expr { String = "'RPM'"; }
            }
            FPGAdieTemp = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'FPGA_DIE_TEMPERATURE'"; }
                evUnits = Expr { String = "'C'"; }
            }
            FPGAoscFreq = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'FPGA_OSC_FREQUENCY'"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            HDMIvalue = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'HDMI_FREQUENCY'"; }
                evUnits = Expr { String = "'MHz'"; }
            }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.MeasDaughterCardVoltages";
            TestGND = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'Daughtercard_GND_relative_to_load_board'"; }
                evLowLimit = Expr { String = "-0.02V"; }
                evHighLimit = Expr { String = "0.02V"; }
                evUnits = Expr { String = "'mV'"; }
            }
            Test0p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_0p9V_DDR2'"; }
                evLowLimit = Expr { String = "0.873V"; }
                evHighLimit = Expr { String = "0.927V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test1p0Fpga = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_1p0V_FPGA'"; }
                evLowLimit = Expr { String = "0.97V"; }
                evHighLimit = Expr { String = "1.03V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test1p0 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_1p0V_HS84'"; }
                evLowLimit = Expr { String = "0.97V"; }
                evHighLimit = Expr { String = "1.03V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test1p2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_1p2V_FPGA1'"; }
                evLowLimit = Expr { String = "1.164V"; }
                evHighLimit = Expr { String = "1.236V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test1p7 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'Incoming_DC2DC_1p7V'"; }
                evLowLimit = Expr { String = "1.615V"; }
                evHighLimit = Expr { String = "1.785V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test1p8 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_1p8V_widespread'"; }
                evLowLimit = Expr { String = "1.746V"; }
                evHighLimit = Expr { String = "1.854V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test2p5 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_2p5V_FPGA_HS84'"; }
                evLowLimit = Expr { String = "2.425V"; }
                evHighLimit = Expr { String = "2.575V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test3p3 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_3p3V_widespread'"; }
                evLowLimit = Expr { String = "3.201V"; }
                evHighLimit = Expr { String = "3.4V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test1p1 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_1p1V_HDMI_LT'"; }
                evLowLimit = Expr { String = "1.067V"; }
                evHighLimit = Expr { String = "1.133V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test2p7 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'LDO_2p7V_For_LTs'"; }
                evLowLimit = Expr { String = "2.565V"; }
                evHighLimit = Expr { String = "2.835V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test2p8Vin = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'Incoming_DC2DC_2p8V'"; }
                evLowLimit = Expr { String = "2.66V"; }
                evHighLimit = Expr { String = "2.94V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test3p6Vin = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'Incoming_DC2DC_3p6V'"; }
                evLowLimit = Expr { String = "3.42V"; }
                evHighLimit = Expr { String = "3.78V"; }
                evUnits = Expr { String = "'V'"; }
            }
            Test5p0 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evTestText = Expr { String = "'Regulated_5V_for_Analog_Switches'"; }
                evLowLimit = Expr { String = "4.5V"; }
                evHighLimit = Expr { String = "5.5V"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
}
ETest GmslFunc {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999901"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999902"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.75"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_TAB_3_0P75_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_TAB_3_0P75_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_TAB_3_0P75_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999201"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999903"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'COMMENTED_1218_GMSL_CAB_6_1P5_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999202"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "800203"; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'THIS TEST SHOULD NOT BE ENABLED___GMSL_CAB_6_1P5_VIDEO_PRBS_VREG1V7'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "801203"; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_AUDIO_PRBS_VREG1V7'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "802203"; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_REV_AUDIO_PRBS_VREG1V7'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Min+200mV"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "800904"; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_VIDEO_PRBS_VREG1V9'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "801904"; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_AUDIO_PRBS_VREG1V9'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "802904"; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_REV_AUDIO_PRBS_VREG1V9'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_VIDEO_PRBS_-6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_AUDIO_PRBS_-6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_REV_AUDIO_PRBS_-6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "0999904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_TERM_PRES_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "128"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "-6"; }
            ReportTermVal = Expr { String = "TRUE"; }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_VIDEO_PRBS_+6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_AUDIO_PRBS_+6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_REV_AUDIO_PRBS_+6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_TERM_PRES_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "128"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "6"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_VIDEO_PRBS_-6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_AUDIO_PRBS_-6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_REV_AUDIO_PRBS_-6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_TERM_PRES_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "128"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "-6"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_VIDEO_PRBS_+6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_AUDIO_PRBS_+6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_REV_AUDIO_PRBS_+6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_TERM_PRES_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "128"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "6"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "170MHz"; }
            TestPrbsVideo = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_VIDEO_170PCLK_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Number = Expr { String = "1507208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_AUDIO_170PCLK_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Number = Expr { String = "1508208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_REV_AUDIO_170PCLK_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Number = Expr { String = "999202"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[12] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_Hardware_SI_RESCAL_result_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "0"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "FALSE"; }
        }
    }
    evBlock[13] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "1000"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "TRUE"; }
        }
    }
    evBlock[14] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "2000"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "FALSE"; }
        }
    }
    evBlock[15] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "3000"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "TRUE"; }
        }
    }
    evBlock[16] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "4000"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "FALSE"; }
        }
    }
    evBlock[17] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "5000"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "TRUE"; }
        }
    }
    evBlock[18] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "6000"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "FALSE"; }
        }
    }
    evBlock[19] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslHardwareSI";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "150MHz"; }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "255"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
            TestNumberBase = Expr { String = "7000"; }
            VDDString = Expr { String = "'TYP'"; }
            TuneOrNot = Expr { String = "TRUE"; }
        }
    }
}
ETest GmslLevelsTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslVolVohABUS";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            OpenAllRelays = Expr { String = "FALSE"; }
            VodHTest = evParametricTest {
                Number = Expr { String = "1053911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_VOD_MAX'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VodDeltaTest = evParametricTest {
                Number = Expr { String = "1054911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_VOD_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261054911.Min"; }
                evHighLimit = Expr { String = "TN261054911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VcmHTest = evParametricTest {
                Number = Expr { String = "1055911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_VOS_MAX'"; }
                evLowLimit = Expr { String = "TN261055911.Min"; }
                evHighLimit = Expr { String = "TN261055911.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_VOS_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodHTest = evParametricTest {
                Number = Expr { String = "1053912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODH_MAX'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodLTest = evParametricTest {
                Number = Expr { String = "1053913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODL_MAX'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodDeltaTest = evParametricTest {
                Number = Expr { String = "1054912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOD_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVcmHTest = evParametricTest {
                Number = Expr { String = "1055912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSH_MAX'"; }
                evLowLimit = Expr { String = "TN261055911.Min"; }
                evHighLimit = Expr { String = "TN261055911.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmLTest = evParametricTest {
                Number = Expr { String = "1055913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSL_MAX'"; }
                evLowLimit = Expr { String = "TN261055911.Min"; }
                evHighLimit = Expr { String = "TN261055911.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOS_DELTA_MAX'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TxDisTest = evParametricTest {
                Number = Expr { String = "1056913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVdisFail;
                evTestText = Expr { String = "'GMSL_DISABLED_OUTPUT_MAX'"; }
                evLowLimit = Expr { String = "TN261056913.Min"; }
                evHighLimit = Expr { String = "TN261056913.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslVolVohABUS";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            OpenAllRelays = Expr { String = "FALSE"; }
            VodHTest = evParametricTest {
                Number = Expr { String = "1053211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_VOD_MIN'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VodDeltaTest = evParametricTest {
                Number = Expr { String = "1054211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_VOD_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VcmHTest = evParametricTest {
                Number = Expr { String = "1055211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_VOS_MIN'"; }
                evLowLimit = Expr { String = "TN261055211.Min"; }
                evHighLimit = Expr { String = "TN261055211.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_VOS_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodHTest = evParametricTest {
                Number = Expr { String = "1053212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODH_MIN'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodLTest = evParametricTest {
                Number = Expr { String = "1053213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodFail;
                evTestText = Expr { String = "'GMSL_DIFF_VODL_MIN'"; }
                evLowLimit = Expr { String = "TN261053911.Min"; }
                evHighLimit = Expr { String = "TN261053911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVodDeltaTest = evParametricTest {
                Number = Expr { String = "1054212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVodDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOD_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DiffVcmHTest = evParametricTest {
                Number = Expr { String = "1055212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSH_MIN'"; }
                evLowLimit = Expr { String = "TN261055211.Min"; }
                evHighLimit = Expr { String = "TN261055211.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmLTest = evParametricTest {
                Number = Expr { String = "1055213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOSL_MIN'"; }
                evLowLimit = Expr { String = "TN261055211.Min"; }
                evHighLimit = Expr { String = "TN261055211.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            DiffVcmDeltaTest = evParametricTest {
                Number = Expr { String = "1056212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P"; }
                evFailBin = SioVosDeltaFail;
                evTestText = Expr { String = "'GMSL_DIFF_VOS_DELTA_MIN'"; }
                evLowLimit = Expr { String = "TN261056911.Min"; }
                evHighLimit = Expr { String = "TN261056911.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TxDisTest = evParametricTest {
                Number = Expr { String = "1056213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOA_N+DUT_SIOB_P+DUT_SIOB_N"; }
                evFailBin = SioVdisFail;
                evTestText = Expr { String = "'GMSL_DISABLED_OUTPUT_MIN'"; }
                evLowLimit = Expr { String = "TN261056213.Min"; }
                evHighLimit = Expr { String = "TN261056213.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputR";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1060501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_NOM_VI16'"; }
                evLowLimit = Expr { String = "TN261060501.Min"; }
                evHighLimit = Expr { String = "TN261060501.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Number = Expr { String = "1544501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Nom_VI16'"; }
                evLowLimit = Expr { String = "TN951501903.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TermPresTest = evParametricTest {
                Number = Expr { String = "1544502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'TERM_PRES_Res_Cal_Nom'"; }
                evLowLimit = Expr { String = "40"; }
                evHighLimit = Expr { String = "80"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ExtResistanceTest = evParametricTest {
                Number = Expr { String = "1544503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'INFO_GMSL_2POINT_RO_NOM_VI16'"; }
                evLowLimit = Expr { String = "30Ohm"; }
                evHighLimit = Expr { String = "70Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            OpenAllRelays = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputR";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1060502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_+6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "TN261060502.Min"; }
                evHighLimit = Expr { String = "TN261060502.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Number = Expr { String = "1544504"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_+6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "TN951501903.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TermPresTest = evParametricTest {
                Number = Expr { String = "1544505"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'TERM_PRES_Res_Cal_+6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "40"; }
                evHighLimit = Expr { String = "80"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "6"; }
            ExtResistanceTest = evParametricTest {
                Number = Expr { String = "1544506"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_2POINT_RO_+6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "30Ohm"; }
                evHighLimit = Expr { String = "70Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            OpenAllRelays = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputR";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1060503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_-6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "TN261060502.Min"; }
                evHighLimit = Expr { String = "TN261060502.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Number = Expr { String = "1544507"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_-6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "TN951501903.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            TermPresTest = evParametricTest {
                Number = Expr { String = "1544508"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'TERM_PRES_Res_Cal_-6_TERM_MAN_PRES_OFFSET_Nom'"; }
                evLowLimit = Expr { String = "40"; }
                evHighLimit = Expr { String = "80"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "-6"; }
            ExtResistanceTest = evParametricTest {
                Number = Expr { String = "1544509"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_2POINT_RO_-6_TERM_MAN_PRES_OFFSET_NOM'"; }
                evLowLimit = Expr { String = "30Ohm"; }
                evHighLimit = Expr { String = "70Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            OpenAllRelays = Expr { String = "TRUE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputResistanceSweep";
            Vddc = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            ResistanceTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_Min'"; }
                evLowLimit = Expr { String = "46Ohm"; }
                evHighLimit = Expr { String = "60Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Min'"; }
                evLowLimit = Expr { String = "1.0V"; }
                evHighLimit = Expr { String = "1.4V"; }
                evUnits = Expr { String = "'V'"; }
            }
            SweepMin = Expr { String = "0"; }
            SweepMax = Expr { String = "127"; }
            MinorTest = Expr { String = "1520000"; }
            dlog_string = Expr { String = "'Min'"; }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputResistanceSweep";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            ResistanceTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_Nom'"; }
                evLowLimit = Expr { String = "TN261060501.Min"; }
                evHighLimit = Expr { String = "TN261060501.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Nom'"; }
                evLowLimit = Expr { String = "TN261544501.Min"; }
                evHighLimit = Expr { String = "TN261544501.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            SweepMin = Expr { String = "0"; }
            SweepMax = Expr { String = "127"; }
            MinorTest = Expr { String = "1540000"; }
            dlog_string = Expr { String = "'Nom'"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslOutputResistanceSweep";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            ResistanceTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SIOA_P_VI16+DUT_SIOA_N_VI16+DUT_SIOB_P_VI16+DUT_SIOB_N_VI16"; }
                evFailBin = GmslOutputResFail;
                evTestText = Expr { String = "'GMSL_RO_Max'"; }
                evLowLimit = Expr { String = "46Ohm"; }
                evHighLimit = Expr { String = "60Ohm"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            XresVoltageTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_XRES"; }
                evFailBin = XresVltgFail;
                evTestText = Expr { String = "'XRES_Voltage_Max'"; }
                evLowLimit = Expr { String = "1.0V"; }
                evHighLimit = Expr { String = "1.4V"; }
                evUnits = Expr { String = "'V'"; }
            }
            SweepMin = Expr { String = "0"; }
            SweepMax = Expr { String = "127"; }
            MinorTest = Expr { String = "1590000"; }
            dlog_string = Expr { String = "'Max'"; }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslIos";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            Ios0VddTest = evParametricTest {
                Number = Expr { String = "1058901"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_LOW_MAX'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1VddTest = evParametricTest {
                Number = Expr { String = "1058902"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_HIGH_MAX'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios0GndTest = evParametricTest {
                Number = Expr { String = "1057901"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_LOW_MAX'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1GndTest = evParametricTest {
                Number = Expr { String = "1057902"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_HIGH_MAX'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.GmslIos";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            Ios0VddTest = evParametricTest {
                Number = Expr { String = "1058201"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_LOW_MIN'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1VddTest = evParametricTest {
                Number = Expr { String = "1058202"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_VDD_HIGH_MIN'"; }
                evLowLimit = Expr { String = "TN261058901.Min"; }
                evHighLimit = Expr { String = "TN261058901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios0GndTest = evParametricTest {
                Number = Expr { String = "1057201"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_LOW_MIN'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            Ios1GndTest = evParametricTest {
                Number = Expr { String = "1057202"; }
                evPins = Expr { String = "DUT_SIOA_P+DUT_SIOB_P+DUT_SIOA_N+DUT_SIOB_N"; }
                evFailBin = SioIosFail;
                evTestText = Expr { String = "'GMSL_IOS_GND_HIGH_MIN'"; }
                evLowLimit = Expr { String = "TN261057901.Min"; }
                evHighLimit = Expr { String = "TN261057901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
        }
    }
}
ETest GmslLinkTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "1.5"; }
            SioChannel = Expr { String = "'A'"; }
            MinVltg = Expr { String = "310mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "100301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "101301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "102301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "103301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "104301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "105301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "106301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "107301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "108301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "109301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "110301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evSimulateValue = Expr { String = "0"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "111301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_A_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "1.5"; }
            SioChannel = Expr { String = "'A'"; }
            MinVltg = Expr { String = "310mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "100201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "101201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "102201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "103201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "104201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "105201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "106201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "107201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "108201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "108201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "110201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "111201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_A_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "1.5"; }
            SioChannel = Expr { String = "'B'"; }
            MinVltg = Expr { String = "310mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "120301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "121301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "122301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "123301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "124301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "125301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "126301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "127301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "128301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "129301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "130301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "131301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_B_6P0_1P5_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "1.5"; }
            SioChannel = Expr { String = "'B'"; }
            MinVltg = Expr { String = "310mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "120201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "121201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "122201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "123201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "124201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "125201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "126201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "127201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "128201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "129201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "130201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "131201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_B_6P0_1P5_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "200301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "201301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "202301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "203301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "204301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "205301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "206301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "207301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "208301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "209301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "210301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evSimulateValue = Expr { String = "0"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "211301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_A_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "200201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "201201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "202201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "203201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "204201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "205201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "206201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "207201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "208201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "209201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "210201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "211201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_A_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "220301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "221301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "222301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "223301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "224301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "225301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "226301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "227301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "228301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "229301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "230301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "231301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_B_6P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "220201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "221201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "222201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "223201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "224201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "225201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "226201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "227201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "228201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "229201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "230201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "231201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_B_6P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "3.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "300301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "301301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "302301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "303301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "304301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "305301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "306301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "307301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "308301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "309301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "310301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evSimulateValue = Expr { String = "0"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "311301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_A_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "3.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "300201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "301201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "302201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "303201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "304201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "305201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "306201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "307201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "308201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "309201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "310201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "311201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_A_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "3.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "320301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "321301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "322301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "323301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "324301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "325301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "326301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "327301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "328301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "329301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "330301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "331301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_B_3P0_0P1875_MAX'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "OpVar_FChar"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.TestGmslMargin";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'F'"; }
            FwTxRate = Expr { String = "3.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            MinVltg = Expr { String = "350mV"; }
            TestLink = evParametricTest {
                Number = Expr { String = "320201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FW_LINK_MARGIN_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
            }
            TestAGC = evParametricTest {
                Number = Expr { String = "321201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_AGC_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestOSN = evParametricTest {
                Number = Expr { String = "322201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_OSN_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestBST = evParametricTest {
                Number = Expr { String = "323201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_BST_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE4 = evParametricTest {
                Number = Expr { String = "324201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE4_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE3 = evParametricTest {
                Number = Expr { String = "325201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE3_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE2 = evParametricTest {
                Number = Expr { String = "326201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE2_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestDFE1 = evParametricTest {
                Number = Expr { String = "327201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_DFE1_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneCap = evParametricTest {
                Number = Expr { String = "328201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TCAP_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestTuneAmp = evParametricTest {
                Number = Expr { String = "329201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_TAMP_REG_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "256"; }
                evSimulateValue = Expr { String = "0"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "330201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_MARGIN_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "400"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestNoise = evParametricTest {
                Number = Expr { String = "331201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_FWLM_NOISE_B_3P0_0P1875_MIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "4096"; }
                evSimulateValue = Expr { String = "0"; }
            }
        }
    }
}
ETest GmslPRBSAllRates {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P1875_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P375_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P375_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P375_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P375_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P375_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P375_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P75_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P75_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P75_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P75_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P75_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_0P75_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            PCLKFreq = Expr { String = "150E6"; }
            TestPrbsVideo = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_6_1P5_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P1875_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P375_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P375_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P375_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P375_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P375_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P375_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[12] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P75_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P75_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P75_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[13] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P75_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P75_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_0P75_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[14] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_1P5_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_1P5_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_1P5_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[15] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_1P5_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_1P5_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_3_1P5_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[16] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[17] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P1875_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P1875_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P1875_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[18] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P375_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P375_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P375_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[19] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P375_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P375_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P375_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[20] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P75_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P75_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P75_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[21] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P75_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P75_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_0P75_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[22] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_1P5_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_1P5_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_1P5_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[23] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_1P5_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_1P5_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_CAB_1P5_1P5_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[24] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[25] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P1875_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P1875_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P1875_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[26] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P375_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P375_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P375_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[27] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P375_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P375_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P375_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[28] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P75_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P75_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P75_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[29] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P75_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P75_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_0P75_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[30] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_1P5_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_1P5_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_1P5_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[31] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_1P5_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_1P5_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_6_1P5_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[32] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[33] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P1875_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P1875_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P1875_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[34] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P375_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P375_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P375_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[35] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P375_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P375_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P375_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[36] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P75_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P75_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P75_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[37] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P75_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P75_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_0P75_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[38] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_1P5_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_1P5_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_1P5_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[39] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_1P5_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_1P5_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_3_1P5_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[40] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P1875_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P1875_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P1875_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[41] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P1875_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P1875_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P1875_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[42] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P375_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P375_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P375_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[43] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.375"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P375_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P375_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P375_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[44] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P75_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P75_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P75_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[45] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "0.75"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P75_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P75_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_0P75_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[46] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_1P5_VIDEO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_1P5_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_1P5_REV_AUDIO_PRBS_MAX'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
    evBlock[47] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.GmslLockPrbs";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "1.5"; }
            TestPrbsVideo = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_1P5_VIDEO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_1P5_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestPrbsRevAudio = evParametricTest {
                evFailBin = GmslPrbsFail;
                evTestText = Expr { String = "'GMSL_SAB_1P5_1P5_REV_AUDIO_PRBS_MIN'"; }
                evLowLimit = Expr { String = "31"; }
                evHighLimit = Expr { String = "31"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            TestTermPres = evParametricTest {
            }
            LinkHDCP = Expr { String = "FALSE"; }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            ReportTermVal = Expr { String = "FALSE"; }
        }
    }
}
ETest GpioFuncTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "gpio.mod.GpioFunc";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6.0"; }
            StFreqGb = Expr { String = "0.1875"; }
            gng_lim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1511201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_UnComp_GPIO00_GPIO13_MIN'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1511202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures_Fwd_400KHz_UnComp_GPIO00_GPIO13_MIN'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1511203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures_Fwd_400KHz_UnComp_GPIO00_GPIO13_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1511204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_UnComp_GPIO14_GPIO17_MIN'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1511205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures_Fwd_400KHz_UnComp_GPIO14_GPIO17_MIN'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1511206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures_Fwd_400KHz_UnComp_GPIO14_GPIO17_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1511207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_Comp_GPIO00_GPIO13_MIN'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1511208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures_Fwd_400KHz_Comp_GPIO00_GPIO13_MIN'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1511209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures_Fwd_400KHz_Comp_GPIO00_GPIO13_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1511210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_Comp_GPIO14_GPIO17_MIN'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1511211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures_Fwd_400KHz_Comp_GPIO14_GPIO17_MIN'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1511212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures_Fwd_400KHz_Comp_GPIO14_GPIO17_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1516201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Rev_100KHz_UnComp_MIN'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1516202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures_Rev_100KHz_UnComp_MIN'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1516203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures_Rev_100KHz_UnComp_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1516204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Rev_200KHz_Comp_MIN'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1516205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures_Rev_200KHz_Comp_MIN'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1516206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures_Rev_200KHz_Comp_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "gpio.mod.GpioFunc";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6.0"; }
            StFreqGb = Expr { String = "0.1875"; }
            gng_lim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1511201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1511202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1511203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1511204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1511205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1511206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1511207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_Comp_Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1511208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1511209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1511210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Fwd_400KHz_Comp_Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1511211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1511212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1516201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Rev_100KHz_UnComp'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1516202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1516203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1516204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'GPIO_Rev_200KHz_Comp_Mode'"; }
                    evLowLimit = Expr { String = "3"; }
                    evHighLimit = Expr { String = "3"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1516205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_data_captures'"; }
                    evLowLimit = Expr { String = "16"; }
                    evHighLimit = Expr { String = "16"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1516206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = GPIO_Func;
                    evTestText = Expr { String = "'Number_of_Failures'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'VAL'"; }
                }
            }
        }
    }
}
ETest HDMI_At_Speed {
    Comment = "USE THIS FOR PRODUCTION ENABLE ON 198MHz AT-SPEED\/IDD TEST, removing backslashes and adding quotes as needed: EnableExpr = Expr \{ String = QUOTE (strcmp(OpVar_ProductUnderTest, \'MAX96751\') = 0)  OR  (strcmp(OpVar_ProductUnderTest, \'MAX96753\') = 0)QUOTE; \}";
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "OpVar_HDCP"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.CheckKSVBytes";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            uart_i2c = Expr { String = "'i2c'"; }
            TestKSVonesHDMI = evParametricTest {
                Number = Expr { String = "21"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
            TestKSVonesGMSL_A = evParametricTest {
                Number = Expr { String = "22"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "2"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "3"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN180000003.Min"; }
                evHighLimit = Expr { String = "TN180000003.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "4"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN180000003.Min-10Cel"; }
                evHighLimit = Expr { String = "TN180000003.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "904"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "905"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "906"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "25MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "24MHz"; }
                evHighLimit = Expr { String = "26MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "2"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "24MHz"; }
                evHighLimit = Expr { String = "26MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "3"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_A_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_Min'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "160MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "923"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "924"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "925"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "926"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "16"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "947"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "942"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "943"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "944"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "945"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "946"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "TN181499203.Min"; }
                evHighLimit = Expr { String = "TN181499203.Max"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "204"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "205"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "206"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "207"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Min'"; }
            }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499918"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "958"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min"; }
                evHighLimit = Expr { String = "TN181849901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min"; }
                evHighLimit = Expr { String = "TN181848901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1850901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1847901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1846901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96741R') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96743R') = 0    OR   strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "968"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_A_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181744901.Min"; }
                evHighLimit = Expr { String = "TN181744901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181742901.Min"; }
                evHighLimit = Expr { String = "TN181742901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "976"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_Max'"; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "970"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_B_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181744901.Min"; }
                evHighLimit = Expr { String = "TN181744901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181742901.Min"; }
                evHighLimit = Expr { String = "TN181742901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "977"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_B_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_B_Coax_Max'"; }
            }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499515"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499516"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499517"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499518"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181849901.Min"; }
                evHighLimit = Expr { String = "TN181849901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181742501.Min"; }
                evHighLimit = Expr { String = "TN181742501.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181743501.Min"; }
                evHighLimit = Expr { String = "TN181743501.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_1p9V_other_VDD_Typ'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "576"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN180000576.Min"; }
                evHighLimit = Expr { String = "TN180000576.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "5"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Typ'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Typ'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Typ'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555500"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Typ'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Typ'"; }
            }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499520"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499521"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499522"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499523"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "1499524"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "538"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_STP_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            VDDCorner = Expr { String = "5"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_STP_Typ'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_STP_Typ'"; }
            }
        }
    }
    evBlock[12] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_HDMI_Link_Result_6G_1p5G_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "244"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "245"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "246"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "247"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_1p5G_AB_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_1p5G_AB_Coax_Min'"; }
            }
        }
    }
    evBlock[13] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96777') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96779') = 0"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Min'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_198MHz_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_198MHz_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_198MHz_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181843901.Min"; }
                evHighLimit = Expr { String = "TN181843901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181842901.Min"; }
                evHighLimit = Expr { String = "TN181842901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181839901.Min"; }
                evHighLimit = Expr { String = "TN181839901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181844901.Min"; }
                evHighLimit = Expr { String = "TN181844901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181774901.Min"; }
                evHighLimit = Expr { String = "TN181774901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_198MHz_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_198MHz_Min'"; }
            }
        }
    }
    evBlock[14] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96777') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96779') = 0"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "978"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1843901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181843901.Min"; }
                evHighLimit = Expr { String = "TN181843901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1842901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181842901.Min"; }
                evHighLimit = Expr { String = "TN181842901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1839901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181839901.Min"; }
                evHighLimit = Expr { String = "TN181839901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1844901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181844901.Min"; }
                evHighLimit = Expr { String = "TN181844901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "955"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "956"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "957"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[15] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96777') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96779') = 0"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "979"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1804901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181804901.Min"; }
                evHighLimit = Expr { String = "TN181804901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1803901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181803901.Min"; }
                evHighLimit = Expr { String = "TN181803901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1798901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181798901.Min"; }
                evHighLimit = Expr { String = "TN181798901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1805901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181805901.Min"; }
                evHighLimit = Expr { String = "TN181805901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "965"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "966"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "967"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555935"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555936"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[16] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96777') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96779') = 0"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499942"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499943"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "980"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1804902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181804902.Min"; }
                evHighLimit = Expr { String = "TN181804902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1803902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181803902.Min"; }
                evHighLimit = Expr { String = "TN181803902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1798902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181798902.Min"; }
                evHighLimit = Expr { String = "TN181798902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1805902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181805902.Min"; }
                evHighLimit = Expr { String = "TN181805902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "986"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "987"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "988"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[17] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499935"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499936"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499937"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_A_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499938"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_B_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "988"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Result_6G_187p5M_AB_Coax_198MHz_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1843911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDD_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181849901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1842911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD18_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181848901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1839911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD33_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181845901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1844911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDA_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181850901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO25_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "979"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_6G_187p5M_AB_Coax_198MHz_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_6G_187p5M_AB_Coax_198MHz_Max'"; }
            }
        }
    }
    evBlock[18] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "240MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "300"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Frequency_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "239.5MHz"; }
                evHighLimit = Expr { String = "240.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "302"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "303"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "100"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Result_6G_187p5M_AB_Coax_240MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDD_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181849901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD18_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181848901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "103"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD33_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181845901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "104"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDA_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181850901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "105"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "106"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_240MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "107"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO25_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "111"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_6G_187p5M_AB_Coax_240MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_6G_187p5M_AB_Coax_240MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[19] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751H') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753H') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "104MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "310"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Frequency_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "103.5MHz"; }
                evHighLimit = Expr { String = "104.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "311"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "103.5MHz"; }
                evHighLimit = Expr { String = "104.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "312"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_NA__HDMI_Func_A_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "313"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_NA__HDMI_Func_B_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "110"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Link_Result_6G_187p5M_AB_Coax_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "111"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDD_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181849901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "112"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDD18_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181848901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "113"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDD33_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181845901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "114"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDA_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181850901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "115"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDIO_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "116"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDIO_6G_187p5M_AB_dual_link_104MHz_1920_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "117"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDIO25_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555945"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Link_Time_6G_187p5M_AB_Coax_104MHz_1920_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555946"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Link_Attempts_6G_187p5M_AB_Coax_104MHz_1920_Max'"; }
            }
        }
    }
    evBlock[20] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "2.0"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "105.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Frequency_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "105MHz"; }
                evHighLimit = Expr { String = "106MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_Port_A_oLDI_Frequency_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Func_A_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499933"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Func_B_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Result_6G_187p5M_AB_Coax_420MHz_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDD_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181849905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD18_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181848905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD33_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181845905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDA_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181845906.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845907.Min"; }
                evHighLimit = Expr { String = "TN181845907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_420MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181845907.Min"; }
                evHighLimit = Expr { String = "TN181845907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO25_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1uA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "999913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_6G_187p5M_AB_Coax_420MHz_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_6G_187p5M_AB_Coax_420MHz_Max'"; }
            }
        }
    }
    evBlock[21] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Frequency_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_Port_A_oLDI_Frequency_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Func_A_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Func_B_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_1p5G_1p5G_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "244"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "245"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "246"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "247"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_1p5G_1p5G_AB_Coax_420MHz_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_1p5G_1p5G_AB_Coax_420MHz_Min'"; }
            }
        }
    }
    evBlock[22] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR (OpVar_Debug_TempChecks) "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "11"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "12"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "13"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "14"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "(OpVar_DEBUG_Master)  OR (OpVar_Debug_TempChecks) "; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[23] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "0"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "300MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499919"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "295MHz"; }
                evHighLimit = Expr { String = "305MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499953"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "961"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "200mA"; }
                evHighLimit = Expr { String = "650mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "962"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "120mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "963"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "30mA"; }
                evHighLimit = Expr { String = "100mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "964"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "965"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "966"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "967"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "971"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[24] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "0"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "300MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "295MHz"; }
                evHighLimit = Expr { String = "305MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "1499227"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "224"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "225"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "226"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "227"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            UART_I2C = Expr { String = "0"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "231"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Min'"; }
            }
        }
    }
    evBlock[25] = {
        EnableExpr = Expr { String = "OpVar_HDCP"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "50MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Frequency_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___Port_A_oLDI_Frequency_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Func_A_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Func_B_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "905"; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Link_HDCP_Result_6G_187p5M_A_Coax_HDCP_Max'"; }
                evLowLimit = Expr { String = "16"; }
                evHighLimit = Expr { String = "16"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Number = Expr { String = "906"; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_HDCP_Result_6G_187p5M_A_Coax_HDCP_Max'"; }
                evLowLimit = Expr { String = "0x1201"; }
                evHighLimit = Expr { String = "0x1201"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "900"; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Link_Result_6G_187p5M_A_Coax_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "2"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "3"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "4"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "5"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "6"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "7"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "8"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "9"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "10"; }
            }
            HDMI_Init_Test = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "945"; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_Max'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "940"; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
            }
        }
    }
}
ETest HDMI_At_Speed_104 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499903"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499904"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499905"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499906"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "160MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "16"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499911"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499912"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499913"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499914"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499203"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499204"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499205"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499206"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499915"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499916"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499917"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499918"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "200mA"; }
                evHighLimit = Expr { String = "400mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "120mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "30mA"; }
                evHighLimit = Expr { String = "100mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
}
ETest HDMI_At_Speed_160 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499903"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499904"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499905"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499906"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "160MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "16"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499911"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499912"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499913"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499914"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499203"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499204"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499205"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499206"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
    evBlock[4] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499915"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499916"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499917"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499918"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "200mA"; }
                evHighLimit = Expr { String = "400mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "120mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845901"; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "30mA"; }
                evHighLimit = Expr { String = "100mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
        }
    }
}
ETest HDMI_Func {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_result1 = evParametricTest {
                Number = Expr { String = "1499901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT1_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_result2 = evParametricTest {
                Number = Expr { String = "1499902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT2_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            MeasureIDD = Expr { String = "TRUE"; }
            test_IDD = evParametricTest {
                Number = Expr { String = "1541901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDD_MAX'"; }
                evLowLimit = Expr { String = "TN181541901.Min"; }
                evHighLimit = Expr { String = "TN181541901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1541902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDD18_MAX'"; }
                evLowLimit = Expr { String = "TN181541902.Min"; }
                evHighLimit = Expr { String = "TN181541902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1541903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDIO_MAX'"; }
                evLowLimit = Expr { String = "TN181541902.Min"; }
                evHighLimit = Expr { String = "TN181541903.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD25 = evParametricTest {
                Number = Expr { String = "1541904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDIO25_MAX'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "1mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1541905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDA_MAX'"; }
                evLowLimit = Expr { String = "TN181541902.Min"; }
                evHighLimit = Expr { String = "TN181541903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1541906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDD33_MAX'"; }
                evLowLimit = Expr { String = "TN181541906.Min"; }
                evHighLimit = Expr { String = "TN181541906.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            ReloadPatternOnFail = Expr { String = "TRUE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_result1 = evParametricTest {
                Number = Expr { String = "1499903"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT1_-6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_result2 = evParametricTest {
                Number = Expr { String = "1499904"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT2_-6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "-6"; }
            MeasureIDD = Expr { String = "FALSE"; }
            test_IDD = evParametricTest {
                Number = Expr { String = "1541907"; }
            }
            test_IDD18 = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDD25 = evParametricTest {
            }
            test_IDDA = evParametricTest {
            }
            test_IDD33 = evParametricTest {
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_result1 = evParametricTest {
                Number = Expr { String = "1499905"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT1_+6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_result2 = evParametricTest {
                Number = Expr { String = "1499906"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT2_+6_TERM_MAN_PRES_OFFSET_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "6"; }
            MeasureIDD = Expr { String = "FALSE"; }
            test_IDD = evParametricTest {
                Number = Expr { String = "1541913"; }
            }
            test_IDD18 = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDD25 = evParametricTest {
            }
            test_IDDA = evParametricTest {
            }
            test_IDD33 = evParametricTest {
            }
        }
    }
    evBlock[3] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_result1 = evParametricTest {
                Number = Expr { String = "1499201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT1_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_result2 = evParametricTest {
                Number = Expr { String = "1499202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT2_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            BiasTermCal = Expr { String = "FALSE"; }
            TermCalOffset = Expr { String = "0"; }
            MeasureIDD = Expr { String = "TRUE"; }
            test_IDD = evParametricTest {
                Number = Expr { String = "1541201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDD_MIN'"; }
                evLowLimit = Expr { String = "TN181541901.Min"; }
                evHighLimit = Expr { String = "TN181541901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1541202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDD18_MIN'"; }
                evLowLimit = Expr { String = "TN181541902.Min"; }
                evHighLimit = Expr { String = "TN181541902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1541203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDIO_MIN'"; }
                evLowLimit = Expr { String = "TN181541902.Min"; }
                evHighLimit = Expr { String = "TN181541903.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD25 = evParametricTest {
                Number = Expr { String = "1541204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDIO25_MIN'"; }
                evLowLimit = Expr { String = "TN181541204.Min"; }
                evHighLimit = Expr { String = "TN181541204.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1541205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDDA_MIN'"; }
                evLowLimit = Expr { String = "TN181541902.Min"; }
                evHighLimit = Expr { String = "TN181541903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1541206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'HDMI_IDD33_MIN'"; }
                evLowLimit = Expr { String = "TN181541206.Min"; }
                evHighLimit = Expr { String = "TN181541906.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            ReloadPatternOnFail = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_result1 = evParametricTest {
                Number = Expr { String = "1499203"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT1_-6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_result2 = evParametricTest {
                Number = Expr { String = "1499204"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT2_-6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "-6"; }
            MeasureIDD = Expr { String = "FALSE"; }
            test_IDD = evParametricTest {
                Number = Expr { String = "1541207"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1541208"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1541209"; }
            }
            test_IDD25 = evParametricTest {
                Number = Expr { String = "1541210"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1541211"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1541212"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_result1 = evParametricTest {
                Number = Expr { String = "1499205"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT1_+6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_result2 = evParametricTest {
                Number = Expr { String = "1499206"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_PAT2_+6_TERM_MAN_PRES_OFFSET_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evSimulateValue = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            BiasTermCal = Expr { String = "TRUE"; }
            TermCalOffset = Expr { String = "6"; }
            MeasureIDD = Expr { String = "FALSE"; }
            test_IDD = evParametricTest {
                Number = Expr { String = "1541213"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1541214"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1541215"; }
            }
            test_IDD25 = evParametricTest {
                Number = Expr { String = "1541216"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1541217"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1541218"; }
            }
        }
    }
}
ETest HdmiDcLevels {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR  (OpVar_Debug_TempChecks)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_HDMI_LVLS__VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_PRE_HDMI_LVLS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim)   AND  (   ((OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  AND (strcmp(OpVar_TestType, 'FT') = 0) )     OR    (OpVar_ForceTrim)    OR   (OpVar_IME_qual)   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMITermRKelvin";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            IForce = Expr { String = "-1.9mA"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "1564502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_R_TYP'"; }
                evLowLimit = Expr { String = "TN301564902.Min"; }
                evHighLimit = Expr { String = "TN301564902.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            RX0_AveTest = evParametricTest {
                Number = Expr { String = "1564503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_RX0_AVERAGE_VALUE_TYP'"; }
                evLowLimit = Expr { String = "TN301564902.Min"; }
                evHighLimit = Expr { String = "TN301564902.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            ExistingTrimBitsTest = evParametricTest {
                Number = Expr { String = "5264510"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_INCOMING_OTP_BITS_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            TrimAdjustTest = evParametricTest {
                Number = Expr { String = "5264512"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_ADJUST_TYP'"; }
                evLowLimit = Expr { String = "-4"; }
                evHighLimit = Expr { String = "3"; }
                evUnits = Expr { String = "'LSB'"; }
            }
            NewTrimValueTest = evParametricTest {
                Number = Expr { String = "5264514"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_VALUE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            trim_code_postTest = evParametricTest {
                Number = Expr { String = "94"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_OTP_READBACK_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            AlreadyTrimmedTest = evParametricTest {
                Number = Expr { String = "95"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'INFO_HDMI_TERM_TRIM_ALREADY_TRIMMED_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CalculateTrimCodes = Expr { String = "TRUE"; }
            TryCodes = Expr { String = "FALSE"; }
            ClearTrimCodes = Expr { String = "TRUE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "(NOT OpVar_IME_qual) "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMITermTrimOTP";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "5264001"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'INFO_HDMI_TERM_TRIM_ALREADY_LOCKED_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            ExistingTrimBitsTest = evParametricTest {
                Number = Expr { String = "5264002"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_INCOMING_OTP_VALUE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            NewTrimValueTest = evParametricTest {
                Number = Expr { String = "5264003"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_CODE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            trim_code_postTest = evParametricTest {
                Number = Expr { String = "5264004"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_OTP_VALUE_AFTER_WRITE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            CompFailTest = evParametricTest {
                Number = Expr { String = "5264005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_TERM_TRIM_OTP_WRITE_COMPARE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HdmiTermDoneTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            HdmiTermPassTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMITermRKelvin";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            IForce = Expr { String = "-1.9mA"; }
            ResistanceTest = evParametricTest {
                Number = Expr { String = "5264520"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_R_POST_TRIM_TYP'"; }
                evLowLimit = Expr { String = "TN305264520.Min"; }
                evHighLimit = Expr { String = "TN305264520.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            RX0_AveTest = evParametricTest {
                Number = Expr { String = "5264522"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_POST_TRIM_RX0_AVERAGE_VALUE_TYP'"; }
                evLowLimit = Expr { String = "TN305264520.Min"; }
                evHighLimit = Expr { String = "TN305264520.Max"; }
                evUnits = Expr { String = "'Ohm'"; }
            }
            ExistingTrimBitsTest = evParametricTest {
                Number = Expr { String = "5264524"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_TERM_POST_TRIM_OTP_BITS_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "7"; }
            }
            TrimAdjustTest = evParametricTest {
                Number = Expr { String = "96"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            NewTrimValueTest = evParametricTest {
                Number = Expr { String = "97"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            trim_code_postTest = evParametricTest {
                Number = Expr { String = "98"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            AlreadyTrimmedTest = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDMITermFail;
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CalculateTrimCodes = Expr { String = "FALSE"; }
            TryCodes = Expr { String = "FALSE"; }
            ClearTrimCodes = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMIOpenPinV";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            IForce = Expr { String = "-100nA"; }
            VOpenTest = evParametricTest {
                Number = Expr { String = "1564904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VOpen_MAX'"; }
                evLowLimit = Expr { String = "TN301564904.Min"; }
                evHighLimit = Expr { String = "TN301564904.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            V33Test = evParametricTest {
                Number = Expr { String = "1560905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDD33_LOCAL_MAX'"; }
                evLowLimit = Expr { String = "TN301564904.Min"; }
                evHighLimit = Expr { String = "TN301564904.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDeltaTest = evParametricTest {
                Number = Expr { String = "1560906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDELTA_MAX'"; }
                evLowLimit = Expr { String = " TN301560906.Min"; }
                evHighLimit = Expr { String = "TN301560906.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMIOpenPinV";
            Vddc = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            IForce = Expr { String = "-100nA"; }
            VOpenTest = evParametricTest {
                Number = Expr { String = "1564204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VOpen_MIN'"; }
                evLowLimit = Expr { String = "TN301564204.Min"; }
                evHighLimit = Expr { String = "TN301564204.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            V33Test = evParametricTest {
                Number = Expr { String = "1560205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDD33_LOCAL_MIN'"; }
                evLowLimit = Expr { String = "TN301564204.Min"; }
                evHighLimit = Expr { String = "TN301564204.Max"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDeltaTest = evParametricTest {
                Number = Expr { String = "1560206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RX0_P+DUT_RX0_N+DUT_RX1_P+DUT_RX1_N+DUT_RX2_P+DUT_RX2_N+DUT_RXC_P+DUT_RXC_N"; }
                evFailBin = HDMITermFail;
                evTestText = Expr { String = "'HDMI_VDELTA_MIN'"; }
                evLowLimit = Expr { String = " TN301560206.Min"; }
                evHighLimit = Expr { String = "TN301560206.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "FALSE"; }
        Result = Expr { String = "tm_rslt:NO_TEST"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMITermCHARVI16";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMITestPinsVI16 = Expr { String = "dut_hdmi_VI16_pins"; }
            ForceI = Expr { String = "-4.5mA"; }
            ConnectV = Expr { String = "VDD33.Min"; }
            ConnectToDclAtEnd = Expr { String = "TRUE"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master OR OpVar_Debug_TempChecks OR (strcmp(OpVar_TestTemp, 'COLD') = 0)  OR (   (strcmp(OpVar_TestTemp, 'HOT') = 0)  AND (strcmp(OpVar_TestType, 'FT') = 0)   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_POST_HDMI_LVLS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_POST_HDMI_LVLS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_POST_HDMI_LVLS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN180000003.Min"; }
                evHighLimit = Expr { String = "TN180000003.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_POST_HDMI_LVLS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN180000003.Min-10Cel"; }
                evHighLimit = Expr { String = "TN180000003.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
}
ETest I2C_ClockFrequency {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.I2C_ClockFreqTest";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestLow = evFunctionalTest {
                Number = Expr { String = "1099201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_100KHZ_LOW_MIN'"; }
            }
            TestMid = evFunctionalTest {
                Number = Expr { String = "1100201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_400KHZ_MID_MIN'"; }
            }
            TestHigh = evFunctionalTest {
                Number = Expr { String = "1101201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_1MHZ_HIGH_MIN'"; }
            }
            TestLowFwd = evFunctionalTest {
                Number = Expr { String = "1099202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_100KHZ_LOW_MIN'"; }
            }
            TestMidFwd = evFunctionalTest {
                Number = Expr { String = "1100202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_400KHZ_MID_MIN'"; }
            }
            TestHighFwd = evFunctionalTest {
                Number = Expr { String = "1101202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_1MHZ_HIGH_MIN'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.I2C_ClockFreqTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestLow = evFunctionalTest {
                Number = Expr { String = "1099901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_100KHZ_LOW_MAX'"; }
            }
            TestMid = evFunctionalTest {
                Number = Expr { String = "1100901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_400KHZ_MID_MAX'"; }
            }
            TestHigh = evFunctionalTest {
                Number = Expr { String = "1101901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_1MHZ_HIGH_MAX'"; }
            }
            TestLowFwd = evFunctionalTest {
                Number = Expr { String = "1099902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_100KHZ_LOW_MAX'"; }
            }
            TestMidFwd = evFunctionalTest {
                Number = Expr { String = "1100902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_400KHZ_MID_MAX'"; }
            }
            TestHighFwd = evFunctionalTest {
                Number = Expr { String = "1101902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_1MHZ_HIGH_MAX'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.I2C_ClockFreqTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestLow = evFunctionalTest {
                Number = Expr { String = "1099903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_100KHZ_LOW_MAX'"; }
            }
            TestMid = evFunctionalTest {
                Number = Expr { String = "1100903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_400KHZ_MID_MAX'"; }
            }
            TestHigh = evFunctionalTest {
                Number = Expr { String = "1101903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_REVCTRL_CLKFREQ_1MHZ_HIGH_MAX'"; }
            }
            TestLowFwd = evFunctionalTest {
                Number = Expr { String = "1099904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_100KHZ_LOW_MAX'"; }
            }
            TestMidFwd = evFunctionalTest {
                Number = Expr { String = "1100904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_400KHZ_MID_MAX'"; }
            }
            TestHighFwd = evFunctionalTest {
                Number = Expr { String = "1101904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DNUT_SDA"; }
                evFailBin = I2cClkFreqFail;
                evTestText = Expr { String = "'I2C_FWDCTRL_CLKFREQ_1MHZ_HIGH_MAX'"; }
            }
        }
    }
}
ETest I2C_DDC_Timing_Char_100KHz {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = I2C_Timing_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_DDC_char";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'DDC_I2C_READ_CHAR'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_data_setup_time_100KHz_MIN'"; }
                evLowLimit = Expr { String = "TN211117102.Min"; }
                evHighLimit = Expr { String = "TN211117102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_data_hold_time_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN321114101.Min"; }
                evHighLimit = Expr { String = "TN211114102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_HIGH_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_LOW_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN321105101.Min"; }
                evHighLimit = Expr { String = "TN321105101.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tHD:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN321102101.Min"; }
                evHighLimit = Expr { String = "TN321102101.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STO_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tBUF_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN321123101.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDDAT_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN321126101.Min"; }
                evHighLimit = Expr { String = "TN321126101.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDACK_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN321126101.Min"; }
                evHighLimit = Expr { String = "TN321126101.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSP_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-2.22E-07"; }
                evHighLimit = Expr { String = "145.0ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_DDC_char";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'DDC_I2C_READ_CHAR'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_data_setup_time_100KHz_MAX'"; }
                evLowLimit = Expr { String = "TN211117102.Min"; }
                evHighLimit = Expr { String = "TN321117201.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_data_hold_time_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN321114101.Min"; }
                evHighLimit = Expr { String = "TN211114102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_HIGH_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_LOW_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN321105101.Min"; }
                evHighLimit = Expr { String = "TN321105101.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tHD:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STO_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tBUF_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN321123101.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDDAT_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN321126101.Min"; }
                evHighLimit = Expr { String = "TN321126101.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDACK_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN321126101.Min"; }
                evHighLimit = Expr { String = "TN321126101.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSP_100kHz_MAX'"; }
                evLowLimit = Expr { String = "-2.22E-07"; }
                evHighLimit = Expr { String = "145.0ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "NOT OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_DDC_FT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'DDC_I2C_READ_CHAR'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_data_setup_time_100KHz_MIN'"; }
                evLowLimit = Expr { String = "249ns"; }
                evHighLimit = Expr { String = "251ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_data_hold_time_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-1ns"; }
                evHighLimit = Expr { String = "1ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_HIGH_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "3.9us"; }
                evHighLimit = Expr { String = "4.01us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_LOW_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0.00000469"; }
                evHighLimit = Expr { String = "4.71us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tHD:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "3.99us"; }
                evHighLimit = Expr { String = "4.01us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.71us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STO_100kHz_MIN'"; }
                evLowLimit = Expr { String = "3.9us"; }
                evHighLimit = Expr { String = "4.01us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tBUF_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0.00000469 - 5.69E-06"; }
                evHighLimit = Expr { String = "4.71us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDDAT_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0.00000344"; }
                evHighLimit = Expr { String = "0.00000346"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDACK_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0.00000344"; }
                evHighLimit = Expr { String = "0.00000346"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132401"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSP_100kHz_MIN_NOT_TESTED'"; }
                evLowLimit = Expr { String = "49ns"; }
                evHighLimit = Expr { String = "1000ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            sutime = Expr { String = "250ns"; }
            hdtime = Expr { String = "0ns"; }
            tHIGH = Expr { String = "4.0us"; }
            tLOW = Expr { String = "4.7us"; }
            tHDSTA = Expr { String = "4us"; }
            tSUSTA = Expr { String = "4.7us"; }
            tSUSTO = Expr { String = "4us"; }
            tBUF = Expr { String = "4.7us"; }
            tVDDAT = Expr { String = "3.45us"; }
            tVDACK = Expr { String = "3.45us"; }
            tSP = Expr { String = "50ns"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "NOT OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_DDC_FT";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'DDC_I2C_READ_CHAR'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_data_setup_time_100KHz_MAX'"; }
                evLowLimit = Expr { String = "249ns"; }
                evHighLimit = Expr { String = "251ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_100kHz_MAX'"; }
                evLowLimit = Expr { String = "-1ns"; }
                evHighLimit = Expr { String = "1ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_HIGH_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "3.9us"; }
                evHighLimit = Expr { String = "4.01us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_SCL_LOW_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0.00000469"; }
                evHighLimit = Expr { String = "4.71us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tHD:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "3.99us"; }
                evHighLimit = Expr { String = "4.01us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.71us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSU:STO_100kHz_MAX'"; }
                evLowLimit = Expr { String = "3.9us"; }
                evHighLimit = Expr { String = "4.01us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tBUF_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0.00000469 - 5.69E-06"; }
                evHighLimit = Expr { String = "4.71us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDDAT_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0.00000344"; }
                evHighLimit = Expr { String = "0.00000346"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tVDACK_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0.00000344"; }
                evHighLimit = Expr { String = "0.00000346"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_DDC_tSP_100kHz_MAX_NOT_TESTED'"; }
                evLowLimit = Expr { String = "49ns"; }
                evHighLimit = Expr { String = "1000ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            sutime = Expr { String = "250ns"; }
            hdtime = Expr { String = "0ns"; }
            tHIGH = Expr { String = "4.0us"; }
            tLOW = Expr { String = "4.7us"; }
            tHDSTA = Expr { String = "4us"; }
            tSUSTA = Expr { String = "4.7us"; }
            tSUSTO = Expr { String = "4us"; }
            tBUF = Expr { String = "4.7us"; }
            tVDDAT = Expr { String = "3.45us"; }
            tVDACK = Expr { String = "3.45us"; }
            tSP = Expr { String = "50ns"; }
        }
    }
}
ETest I2C_Timing_Char_100KHz {
    Result = Expr { String = "#"; Mode = Output; }
    Mask[0] = I2C_Mask;
    Entry[0] = I2C_Timing_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_char";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_Char'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211117102.Min"; }
                evHighLimit = Expr { String = "TN211117102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211114102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211126102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211126102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_100kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211132102.Min"; }
                evHighLimit = Expr { String = "TN211132102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            I2C_pat1 = Expr { String = "'SER_I2C_STOP_WRITE_CHAR'"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_char";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_Char'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211117102.Min"; }
                evHighLimit = Expr { String = "TN211117102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211114102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211108102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211105102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211126102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN211126102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_100kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211132102.Min"; }
                evHighLimit = Expr { String = "TN211132202.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            I2C_pat1 = Expr { String = "'SER_I2C_STOP_WRITE_CHAR'"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "NOT OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_Timing_FT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_FT'"; }
            i2c_timing_it = evParametricTest {
                Number = Expr { String = "11111211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_GO_NOGO_100kHz_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "251ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "1ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_100kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_100kHz_MIN'"; }
                evLowLimit = Expr { String = "-222ns"; }
                evHighLimit = Expr { String = "150ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "NOT OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_Timing_FT";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_FT'"; }
            i2c_timing_it = evParametricTest {
                Number = Expr { String = "11111911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_GO_NOGO_100kHz_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11117901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_100KHz_MAX'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "251ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11114901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_100kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "1ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11108901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11105901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11102901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_100kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11120901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_100kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11123901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11126901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11129901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_100kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11132901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP__NOT_TEST_100kHz_MAX'"; }
                evLowLimit = Expr { String = "48ns"; }
                evHighLimit = Expr { String = "150ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
}
ETest I2C_Timing_Char_400KHz {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = I2C_Timing_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_char";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_Char'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_400KHz_MIN'"; }
                evLowLimit = Expr { String = "TN211117102.Min"; }
                evHighLimit = Expr { String = "TN221118102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11115102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211114102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11109102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN221109102.Min"; }
                evHighLimit = Expr { String = "TN221109102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11106102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN221106102.Min"; }
                evHighLimit = Expr { String = "TN221106102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11103102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN221103102.Min"; }
                evHighLimit = Expr { String = "TN221103102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN221111102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11121102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN221111102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11124102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN221124102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11127102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN221127102.Min"; }
                evHighLimit = Expr { String = "TN221127102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11130102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN221127102.Min"; }
                evHighLimit = Expr { String = "TN221127102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11133102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_400kHz_MIN'"; }
                evLowLimit = Expr { String = "TN211132102.Min"; }
                evHighLimit = Expr { String = "TN211132102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            I2C_pat1 = Expr { String = "'SER_I2C_STOP_WRITE_CHAR'"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_char";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_Char'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_400KHz_MAX'"; }
                evLowLimit = Expr { String = "TN211117102.Min"; }
                evHighLimit = Expr { String = "TN221118102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11115202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN211114102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11109202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN221109102.Min"; }
                evHighLimit = Expr { String = "TN221109102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11106202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN221106102.Min"; }
                evHighLimit = Expr { String = "TN221106102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11103202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN221103102.Min"; }
                evHighLimit = Expr { String = "TN221103102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN221111102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11121202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211114102.Min"; }
                evHighLimit = Expr { String = "TN221111102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11124202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN221124102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11127202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN221127102.Min"; }
                evHighLimit = Expr { String = "TN221127102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11130202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN221127102.Min"; }
                evHighLimit = Expr { String = "TN221127102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11133202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_400kHz_MAX'"; }
                evLowLimit = Expr { String = "TN211132102.Min"; }
                evHighLimit = Expr { String = "TN211132102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            I2C_pat1 = Expr { String = "'SER_I2C_STOP_WRITE_CHAR'"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "NOT OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_Timing_FT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_FT'"; }
            i2c_timing_it = evParametricTest {
                Number = Expr { String = "11111211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_GO_NOGO_400kHz_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_400KHz_MIN'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "237ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11115201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_400kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "0ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11109201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_400kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "3.8us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11106201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_400kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.465us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11103201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_400kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "3.7975us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_400kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "4.465us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11121201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_400kHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "3.7975us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11124201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_400kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.465us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11127201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_400kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "3.2775us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11130201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_400kHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "3.2775us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11133201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_400kHz_MIN'"; }
                evLowLimit = Expr { String = "-222ns"; }
                evHighLimit = Expr { String = "145ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "NOT OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_Timing_FT";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_FT'"; }
            i2c_timing_it = evParametricTest {
                Number = Expr { String = "11111911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_GO_NOGO_400kHz_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_400kHz_MAX'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "251ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11115901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_400kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "1ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11109901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_400kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11106901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_400kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11103901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_400kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11111901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_400kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11121901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_400kHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11124901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_400kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11127901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_400kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11130901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_400kHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11133901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP__NOT_TEST_400kHz_MAX'"; }
                evLowLimit = Expr { String = "48ns"; }
                evHighLimit = Expr { String = "150ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
}
ETest I2C_Timing_Char_1MHz {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = I2C_Timing_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_char";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_Char'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231118102.Min"; }
                evHighLimit = Expr { String = "TN231118102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11116102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231116102.Min"; }
                evHighLimit = Expr { String = "TN231116102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11110102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN231110102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11107102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231107102.Min"; }
                evHighLimit = Expr { String = "TN231107102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11104102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231104102.Min"; }
                evHighLimit = Expr { String = "TN231104102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11112102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231104102.Min"; }
                evHighLimit = Expr { String = "TN231104102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11122102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231122102.Min"; }
                evHighLimit = Expr { String = "TN231122102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11125102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN231125102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11128102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231128102.Min"; }
                evHighLimit = Expr { String = "TN231128102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11131102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231131102.Min"; }
                evHighLimit = Expr { String = "TN231131102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11134102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_1MHz_MIN'"; }
                evLowLimit = Expr { String = "TN231134102.Min"; }
                evHighLimit = Expr { String = "TN231134102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            I2C_pat1 = Expr { String = "'SER_I2C_STOP_WRITE_CHAR'"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_char";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_Char'"; }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231118102.Min"; }
                evHighLimit = Expr { String = "TN231118102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11116202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231116102.Min"; }
                evHighLimit = Expr { String = "TN231116102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11110202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN231110102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11107202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231107102.Min"; }
                evHighLimit = Expr { String = "TN231107102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11104202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231104102.Min"; }
                evHighLimit = Expr { String = "TN231104102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11112202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231104102.Min"; }
                evHighLimit = Expr { String = "TN231104102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11122202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231104102.Min"; }
                evHighLimit = Expr { String = "TN231104102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11125202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN211108102.Min"; }
                evHighLimit = Expr { String = "TN231125102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11128202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231131102.Min"; }
                evHighLimit = Expr { String = "TN231131102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11131202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN231131102.Min"; }
                evHighLimit = Expr { String = "TN231131102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11134202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_1MHz_MAX'"; }
                evLowLimit = Expr { String = "TN211132102.Min"; }
                evHighLimit = Expr { String = "TN211132102.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            I2C_pat1 = Expr { String = "'SER_I2C_STOP_WRITE_CHAR'"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "NOT OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_Timing_FT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_FT'"; }
            i2c_timing_it = evParametricTest {
                Number = Expr { String = "11111211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_GO_NOGO_1MHz_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_1MHz_MIN'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "237ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11116201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_1MHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "0ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11110201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_1MHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "3.8us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11107201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_1MHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.465us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11104201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_1MHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "3.7975us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11112201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_1MHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "4.465us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11122201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_1MHz_MIN'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "3.7975us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11125201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_1MHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.465us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11128201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_1MHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "3.2775us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11131201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_1MHz_MIN'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "3.2775us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11134201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP_1MHz_MIN'"; }
                evLowLimit = Expr { String = "-222ns"; }
                evHighLimit = Expr { String = "145ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "NOT OpVar_Char "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2C_Timing_FT";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_pat = Expr { String = "'SER_I2C_Write_FT'"; }
            i2c_timing_it = evParametricTest {
                Number = Expr { String = "11111911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_GO_NOGO_1MHz_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            sutime_ft = evParametricTest {
                Number = Expr { String = "11118901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_setup_time_1MHz_MAX'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "251ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            hdtime_ft = evParametricTest {
                Number = Expr { String = "11116901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_data_hold_time_1MHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "1ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHIGH_ft = evParametricTest {
                Number = Expr { String = "11110901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_HIGH_period_1MHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tLOW_ft = evParametricTest {
                Number = Expr { String = "11107901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'SCL_LOW_period_1MHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tHDSTA_ft = evParametricTest {
                Number = Expr { String = "11104901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tHD:STA_1MHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTA_ft = evParametricTest {
                Number = Expr { String = "11112901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STA_1MHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSUSTO_ft = evParametricTest {
                Number = Expr { String = "11122901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSU:STO_1MHz_MAX'"; }
                evLowLimit = Expr { String = "-50ns"; }
                evHighLimit = Expr { String = "5us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tBUF_ft = evParametricTest {
                Number = Expr { String = "11125901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tBUF_1MHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "5.7us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDDAT_ft = evParametricTest {
                Number = Expr { String = "11128901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDDAT_1MHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tVDACK_ft = evParametricTest {
                Number = Expr { String = "11131901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tVDACK_1MHz_MAX'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "4.45us"; }
                evUnits = Expr { String = "'ns'"; }
            }
            tSP_ft = evParametricTest {
                Number = Expr { String = "11134901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'tSP__NOT_TEST_1MHz_MAX'"; }
                evLowLimit = Expr { String = "48ns"; }
                evHighLimit = Expr { String = "150ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
}
ETest I2C_WakeUpTime {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2cWakeTimeSearch";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestResult = evParametricTest {
                Number = Expr { String = "1734901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_WAKE_TIME_MAX'"; }
                evLowLimit = Expr { String = "TN231734901.Min"; }
                evHighLimit = Expr { String = "TN231734901.Max"; }
                evUnits = Expr { String = "'ms'"; }
            }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "I2CTIMING_TEST.mod.I2cWakeTimeSearch";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestResult = evParametricTest {
                Number = Expr { String = "1734201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = I2C_TIMING_TEST;
                evTestText = Expr { String = "'I2C_WAKE_TIME_MIN'"; }
                evLowLimit = Expr { String = "TN231734901.Min"; }
                evHighLimit = Expr { String = "TN231734901.Max"; }
                evUnits = Expr { String = "'ms'"; }
            }
        }
    }
}
ETest I2S_GMSL2 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'I2S_16'"; }
            SCK_Freq = Expr { String = "6.144MHz"; }
            bits = Expr { String = "16"; }
            test_audio1 = evParametricTest {
                Number = Expr { String = "1507201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd_Audio_I2S_16bit_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Number = Expr { String = "1508201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev_Audio_I2S_16bit_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'I2S_16'"; }
            SCK_Freq = Expr { String = "6.144MHz"; }
            bits = Expr { String = "16"; }
            test_audio1 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd_Audio_I2S_16bit_MAX'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev_Audio_I2S_16bit_MAX'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'I2S_32'"; }
            SCK_Freq = Expr { String = "12.288MHz"; }
            bits = Expr { String = "32"; }
            test_audio1 = evParametricTest {
                Number = Expr { String = "1507202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd_Audio_I2S_32bit_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Number = Expr { String = "1508202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev_Audio_I2S_32bit_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.Audio_Func_RevB";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Audio_Start_Addr = Expr { String = "'TDM_8CH'"; }
            SCK_Freq = Expr { String = "49.152MHz"; }
            bits = Expr { String = "32"; }
            test_audio1 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Fwd_Audio_TDM_8ch_32bit'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_audio2 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'Rev_Audio_TDM_8ch_32bit'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.I2S_Audio_Timing_FT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            htime = Expr { String = "10ns"; }
            ltime = Expr { String = "10ns"; }
            sutime = Expr { String = "1.5ns"; }
            hdtime = Expr { String = "1.5ns"; }
            I2S1_bt = evParametricTest {
                Number = Expr { String = "1763201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_SD_TSET_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            I2S2_bt = evParametricTest {
                Number = Expr { String = "1763202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_WS_TSET_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            I2S3_bt = evParametricTest {
                Number = Expr { String = "1764201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_SD_THOLD_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
            I2S4_bt = evParametricTest {
                Number = Expr { String = "1764202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_WS_THOLD_MIN'"; }
                evLowLimit = Expr { String = "7"; }
                evHighLimit = Expr { String = "7"; }
                evSimulateValue = Expr { String = "7"; }
                evUnits = Expr { String = "'REG'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.I2S_Audio_Timing_Char";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SCK_LOW_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_SCK_MIN'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SCK_HIGH_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_SCK_MIN'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SD_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_SD_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_WS_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            SD_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_SD_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_WS_MIN'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "Audio.mod.I2S_Audio_Timing_Char";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SCK_LOW_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TLC_SCK_MAX'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SCK_HIGH_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THC_SCK_MAX'"; }
                evHighLimit = Expr { String = "TN270050001.Max"; }
            }
            SD_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_SD_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_tsu_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_TSET_WS_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            SD_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_SD_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
            WS_thd_ft = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedAudioFail;
                evTestText = Expr { String = "'I2S_THOLD_WS_MAX'"; }
                evLowLimit = Expr { String = "TN270050003.Min"; }
                evHighLimit = Expr { String = "TN270050003.Max"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
}
ETest IME_OTP {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = OTP_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "( (strcmp(OpVar_TestType, 'FT') = 0)  AND (strcmp(OpVar_TestTemp, 'HOT') = 0) ) "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_BLANK_Test";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "2.75V"; }
            Vddio25 = Expr { String = "2.75V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            BLANKTESTHDMI = evParametricTest {
                Number = Expr { String = "5"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'BlankTestHDMI'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "2"; }
            }
            BLANKTESTGMSL = evParametricTest {
                Number = Expr { String = "10"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'BlankTestGMSL'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "2"; }
            }
            HDMIBLANKLOCFAIL = evParametricTest {
                Number = Expr { String = "15"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_BLANK_FAIL_LOCATION'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "-1"; }
            }
            HDMIBLANKRDVAL_MSB = evParametricTest {
                Number = Expr { String = "20"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_FAILED_VAL_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMIBLANKRDVAL_LSB = evParametricTest {
                Number = Expr { String = "25"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_FAILED_VAL_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSLBLANKLOCFAIL = evParametricTest {
                Number = Expr { String = "30"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_BLANK_FAIL_LOCATION'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "-1"; }
            }
            GMSLBLANKRDVAL_MSB = evParametricTest {
                Number = Expr { String = "35"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_FAILED_VAL_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSLBLANKRDVAL_LSB = evParametricTest {
                Number = Expr { String = "40"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_FAILED_VAL_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_IME_qual  AND NOT OpVar_PreventTrim"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.Program_OTP_IME_HS87D0C";
            Vdd = Expr { String = "1V"; }
            VddA = Expr { String = "1V"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "2.75V"; }
            Vddio25 = Expr { String = "2.75V"; }
            Vdd33 = Expr { String = "3.13V"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            DoubleWrite = Expr { String = "FALSE"; }
            HDMI_PGM = evParametricTest {
                Number = Expr { String = "99010005"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMIPrgOk'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            GMSL_PGM = evParametricTest {
                Number = Expr { String = "99010010"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSLPrgOk'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI_PGM_Lock = evParametricTest {
                Number = Expr { String = "99010012"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMILockOk'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GMSL_PGM_Lock = evParametricTest {
                Number = Expr { String = "99010013"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSLLockOk'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            HDMI_FAIL_LOC = evParametricTest {
                Number = Expr { String = "99010015"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HdmiFailLocation'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "-1"; }
            }
            GMSL_FAIL_LOC = evParametricTest {
                Number = Expr { String = "99010020"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GmslFailLocation'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "-1"; }
            }
            HDMIReadVal_MSB = evParametricTest {
                Number = Expr { String = "99010025"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HdmiReadValMsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMIReadVal_LSB = evParametricTest {
                Number = Expr { String = "99010030"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HdmiReadValLsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMIExptVal_MSB = evParametricTest {
                Number = Expr { String = "99010035"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HdmiExpectValMsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMIExptVal_LSB = evParametricTest {
                Number = Expr { String = "99010040"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HdmiExpectValLsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSLReadVal_MSB = evParametricTest {
                Number = Expr { String = "99010045"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GmslReadValMsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSLReadVal_LSB = evParametricTest {
                Number = Expr { String = "99010050"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GmslReadValLsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSLExptVal_MSB = evParametricTest {
                Number = Expr { String = "99010055"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GmslExpectValMsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSLExptVal_LSB = evParametricTest {
                Number = Expr { String = "99010060"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GmslExpectValLsb'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSL_LOCK = evParametricTest {
                Number = Expr { String = "99010065"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GmslLock'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "8"; }
            }
            HDMI_LOCK = evParametricTest {
                Number = Expr { String = "99010070"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HdmiLock'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "8"; }
            }
            HDMILOC1 = Expr { String = "0xFF"; }
            HDMI_LOC_1 = evParametricTest {
                Number = Expr { String = "99010075"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HdmiChk'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "99010080"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "99010085"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor_or_MMDD = evParametricTest {
                Number = Expr { String = "99010090"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_YYYYMMDD_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "99010095"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "99010100"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123_or_HHMMSS = evParametricTest {
                Number = Expr { String = "99010105"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456_or_SN = evParametricTest {
                Number = Expr { String = "99010110"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789_or_SITE = evParametricTest {
                Number = Expr { String = "99010115"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789_OR_SITE_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            GMSLReadFailCorner = evParametricTest {
                Number = Expr { String = "99010120"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_Readback_failure_corner'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMIReadFailCorner = evParametricTest {
                Number = Expr { String = "99010125"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_Readback_failure_corner'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            IMEexperiment = evParametricTest {
                Number = Expr { String = "99010130"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'IME_OTP_2p1V_write_workaround_produces_d3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "195"; }
            }
            TestHDMITime1 = evParametricTest {
                Number = Expr { String = "99010135"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_Array_First_Write_Time'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "999"; }
            }
            TestHDMITime2 = evParametricTest {
                Number = Expr { String = "99010140"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_Array_Second_Write_Time'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "999"; }
            }
            TestGMSLTime1 = evParametricTest {
                Number = Expr { String = "99010145"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_Array_First_Write_Time'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "999"; }
            }
            TestGMSLTime2 = evParametricTest {
                Number = Expr { String = "99010150"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_Array_Second_Write_Time'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "999"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_RETENTION";
            Vdd = Expr { String = "1V"; }
            VddA = Expr { String = "1V"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "2.75V"; }
            Vddio25 = Expr { String = "2.75V"; }
            Vdd33 = Expr { String = "3.13V"; }
            DUMMY_TEST1 = evParametricTest {
                Number = Expr { String = "99010185"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Actual_retention_tests_are_in_Cadence_code'"; }
            }
            DUMMY_TEST2 = evParametricTest {
                Number = Expr { String = "99010190"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'   '"; }
            }
            DUMMY_TEST3 = evParametricTest {
                Number = Expr { String = "99010195"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'   '"; }
            }
        }
    }
}
ETest IDD_Sleep_Powerdown_End {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540903.Min"; }
                evHighLimit = Expr { String = "TN471540903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_END_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_END_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_END_VDDMAX'"; }
                evLowLimit = Expr { String = "TN481540908.Min"; }
                evHighLimit = Expr { String = "TN481540908.Max"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_END_MAX'"; }
                evLowLimit = Expr { String = "TN471545901.Min"; }
                evHighLimit = Expr { String = "TN471545901.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_END_MAX'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540203.Min"; }
                evHighLimit = Expr { String = "TN471540203.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_END_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_END_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_END_VDDMIN'"; }
                evLowLimit = Expr { String = "TN481540908.Min"; }
                evHighLimit = Expr { String = "TN481540908.Max"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_END_MIN'"; }
                evLowLimit = Expr { String = "TN471545201.Min"; }
                evHighLimit = Expr { String = "TN471545201.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_END_MIN'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
}
ETest IDD_Sleep_Powerdown_Front {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            ForcePowerup = Expr { String = "TRUE"; }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_MAX'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_MAX'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_MAX'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_MAX'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_MAX'"; }
                evLowLimit = Expr { String = "-1uA"; }
                evHighLimit = Expr { String = "10uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_MAX'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_MAX'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_MAX'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_MAX'"; }
                evLowLimit = Expr { String = "TN471540903.Min"; }
                evHighLimit = Expr { String = "TN471540903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_MAX'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_MAX'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_MAX'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_MAX'"; }
                evLowLimit = Expr { String = "-1uA"; }
                evHighLimit = Expr { String = "100uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_VDDMAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_MAX'"; }
                evLowLimit = Expr { String = "TN471545901.Min"; }
                evHighLimit = Expr { String = "TN471545901.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_MAX'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.IddSleepPowerDown";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            ForcePowerup = Expr { String = "TRUE"; }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            VddSlTest = evParametricTest {
                Number = Expr { String = "1539201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD_MIN'"; }
                evLowLimit = Expr { String = "TN471539901.Min"; }
                evHighLimit = Expr { String = "TN471539901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddASlTest = evParametricTest {
                Number = Expr { String = "1539202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDA_MIN'"; }
                evLowLimit = Expr { String = "TN471539902.Min"; }
                evHighLimit = Expr { String = "TN471539902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18SlTest = evParametricTest {
                Number = Expr { String = "1539203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD18_MIN'"; }
                evLowLimit = Expr { String = "TN471539903.Min"; }
                evHighLimit = Expr { String = "TN471539903.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioSlTest = evParametricTest {
                Number = Expr { String = "1539204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO_MIN'"; }
                evLowLimit = Expr { String = "TN471539904.Min"; }
                evHighLimit = Expr { String = "TN471539904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25SlTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDDIO25_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33SlTest = evParametricTest {
                Number = Expr { String = "1539206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_VDD33_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumSlTest = evParametricTest {
                Number = Expr { String = "1539207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddSleepFail;
                evTestText = Expr { String = "'IDD_SLEEP_CORE_TOTAL_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddPdTest = evParametricTest {
                Number = Expr { String = "1540201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD_MIN'"; }
                evLowLimit = Expr { String = "TN471540901.Min"; }
                evHighLimit = Expr { String = "TN471540901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddAPdTest = evParametricTest {
                Number = Expr { String = "1540202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDA_MIN'"; }
                evLowLimit = Expr { String = "TN471540902.Min"; }
                evHighLimit = Expr { String = "TN471540902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd18PdTest = evParametricTest {
                Number = Expr { String = "1540203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD18_MIN'"; }
                evLowLimit = Expr { String = "TN471540203.Min"; }
                evHighLimit = Expr { String = "TN471540203.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddioPdTest = evParametricTest {
                Number = Expr { String = "1540204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO_MIN'"; }
                evLowLimit = Expr { String = "TN471540904.Min"; }
                evHighLimit = Expr { String = "TN471540904.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vddio25PdTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDDIO25_MIN'"; }
                evLowLimit = Expr { String = "TN471540905.Min"; }
                evHighLimit = Expr { String = "TN471540905.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Vdd33PdTest = evParametricTest {
                Number = Expr { String = "1540206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_VDD33_MIN'"; }
                evLowLimit = Expr { String = "TN471539906.Min"; }
                evHighLimit = Expr { String = "TN471539906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            VddSumPdTest = evParametricTest {
                Number = Expr { String = "1540207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPwdnFail;
                evTestText = Expr { String = "'IDD_PWRDN_CORE_TOTAL_MIN'"; }
                evLowLimit = Expr { String = "TN471539907.Min"; }
                evHighLimit = Expr { String = "TN471539907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            DevIdTest = evParametricTest {
                Number = Expr { String = "1540208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = DevIdFail;
                evTestText = Expr { String = "'DEVICE_ID_REG13_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "131"; }
            }
            CmuCapTest = evParametricTest {
                Number = Expr { String = "1545201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_VOLTAGE_MIN'"; }
                evLowLimit = Expr { String = "TN471545201.Min"; }
                evHighLimit = Expr { String = "TN471545201.Max"; }
                evSimulateValue = Expr { String = "700mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CmuCapSleepTest = evParametricTest {
                Number = Expr { String = "1545202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_CMU_CAP"; }
                evFailBin = CmuCapVltgFail;
                evTestText = Expr { String = "'CMU_CAP_SLEEP_VOLTAGE_MIN'"; }
                evLowLimit = Expr { String = "TN471545902.Min"; }
                evHighLimit = Expr { String = "TN471545902.Max"; }
                evSimulateValue = Expr { String = "0mV"; }
                evUnits = Expr { String = "'mV'"; }
            }
        }
    }
}
ETest LeakageTestEnd {
    FinderFilter = "";
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PPMU_Leakage4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            Reset_IIL_Test = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB+dut_IIL_odd_pins-DUT_RX2_P+dut_IIL_even_pins-DUT_RXC_P-DUT_HPD"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'RESET_MODE_IIL_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Reset_IIH_Test = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_IIH_even_vddio_pins+dut_IIH_odd_vddio_pins+dut_IIH_even_vdd18_pins+dut_IIH_odd_vdd18_pins+dut_IIH_even_vdd33_pins+dut_IIH_odd_vdd33_pins-DUT_RXC_P-DUT_NC_GMSL2B-DUT_RX2_P"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'RESET_MODE_IIH_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            GPIO_IOZL_Test = evParametricTest {
                Number = Expr { String = "1066901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            GPIO_IOZH_Test = evParametricTest {
                Number = Expr { String = "1065901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrain_IOZL_Test = evParametricTest {
                Number = Expr { String = "1068901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX+DUT_DDCSCL+DUT_SDA_RX+DUT_DDCSDA"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrain_IOZH_Test = evParametricTest {
                Number = Expr { String = "1067901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX+DUT_DDCSCL+DUT_SDA_RX+DUT_DDCSDA"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMI_IOZL_Test = evParametricTest {
                Number = Expr { String = "1559901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMI_IOZH_Test = evParametricTest {
                Number = Expr { String = "1559902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            LMN_IOZL_Test = evParametricTest {
                Number = Expr { String = "911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_lmn_pins"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN500000201.Min"; }
                evHighLimit = Expr { String = "TN500000201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            LMN_IOZH_Test = evParametricTest {
                Number = Expr { String = "912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_lmn_pins"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN500000201.Min"; }
                evHighLimit = Expr { String = "TN500000201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            PWDNB_IIL_Test = evParametricTest {
                Number = Expr { String = "1142901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121142201.Min"; }
                evHighLimit = Expr { String = "TN121142201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            PWDNB_IIH_Test = evParametricTest {
                Number = Expr { String = "1141901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121070201.Min"; }
                evHighLimit = Expr { String = "TN121144201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            NCGMSLIILTest = evParametricTest {
                Number = Expr { String = "1066902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'NC_GMSL2_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121066202.Min"; }
                evHighLimit = Expr { String = "TN121066202.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IILTest = evParametricTest {
                Number = Expr { String = "1579901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121579201.Min"; }
                evHighLimit = Expr { String = "TN121579201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IIHTest = evParametricTest {
                Number = Expr { String = "1579902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121579902.Min"; }
                evHighLimit = Expr { String = "TN121579902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIILTest = evParametricTest {
                Number = Expr { String = "9999901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN129999901.Min"; }
                evHighLimit = Expr { String = "TN129999901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIIHTest = evParametricTest {
                Number = Expr { String = "9999902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN129999902.Min"; }
                evHighLimit = Expr { String = "TN129999902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PPMU_Leakage3";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            GpioIilTest = evParametricTest {
                Number = Expr { String = "1066901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            GpioIihTest = evParametricTest {
                Number = Expr { String = "1065901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMIPinsLowTest = evParametricTest {
                Number = Expr { String = "1559901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N+DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMIPinsHighTest = evParametricTest {
                Number = Expr { String = "1559902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N+DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            InputPinsLowTest = evParametricTest {
                Number = Expr { String = "1142901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121142201.Min"; }
                evHighLimit = Expr { String = "TN121142201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            PWDNBIIHTest = evParametricTest {
                Number = Expr { String = "1141901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121070201.Min"; }
                evHighLimit = Expr { String = "TN121144201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            NCGMSLIILTest = evParametricTest {
                Number = Expr { String = "1066902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'NC_GMSL2_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121066202.Min"; }
                evHighLimit = Expr { String = "TN121066202.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            NCGMSLIIHTest = evParametricTest {
                Number = Expr { String = "1065902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'NC_GMSL2_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121066202.Min"; }
                evHighLimit = Expr { String = "TN121066202.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IILTest = evParametricTest {
                Number = Expr { String = "1579901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121579201.Min"; }
                evHighLimit = Expr { String = "TN121579201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IIHTest = evParametricTest {
                Number = Expr { String = "1579902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121579902.Min"; }
                evHighLimit = Expr { String = "TN121579902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrainIILTest = evParametricTest {
                Number = Expr { String = "1068901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX+DUT_DDCSDA+DUT_SCL_TX+DUT_DDCSCL"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrainIIHTest = evParametricTest {
                Number = Expr { String = "1067901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX+DUT_DDCSDA+DUT_SCL_TX+DUT_DDCSCL"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIILTest = evParametricTest {
                Number = Expr { String = "9999901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B+DUT_LOCK+DUT_ERRB_LFLTB_INTOUTB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIL_MAX_END'"; }
                evLowLimit = Expr { String = "TN129999901.Min"; }
                evHighLimit = Expr { String = "TN129999901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIIHTest = evParametricTest {
                Number = Expr { String = "9999902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B+DUT_LOCK+DUT_ERRB_LFLTB_INTOUTB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIH_MAX_END'"; }
                evLowLimit = Expr { String = "TN129999902.Min"; }
                evHighLimit = Expr { String = "TN129999902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest LeakageTestFront {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PPMU_Leakage4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VDDCorner = Expr { String = "9"; }
            Reset_IIL_Test = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB+dut_IIL_odd_pins-DUT_RX2_P+dut_IIL_even_pins-DUT_RXC_P-DUT_HPD"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'RESET_MODE_IIL_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            Reset_IIH_Test = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_IIH_even_vddio_pins+dut_IIH_odd_vddio_pins+dut_IIH_even_vdd18_pins+dut_IIH_odd_vdd18_pins+dut_IIH_even_vdd33_pins+dut_IIH_odd_vdd33_pins-DUT_RXC_P-DUT_NC_GMSL2B-DUT_RX2_P"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'RESET_MODE_IIH_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            GPIO_IOZL_Test = evParametricTest {
                Number = Expr { String = "1066901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            GPIO_IOZH_Test = evParametricTest {
                Number = Expr { String = "1065901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrain_IOZL_Test = evParametricTest {
                Number = Expr { String = "1068901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX+DUT_DDCSCL+DUT_SDA_RX+DUT_DDCSDA"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrain_IOZH_Test = evParametricTest {
                Number = Expr { String = "1067901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX+DUT_DDCSCL+DUT_SDA_RX+DUT_DDCSDA"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMI_IOZL_Test = evParametricTest {
                Number = Expr { String = "1559901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMI_IOZH_Test = evParametricTest {
                Number = Expr { String = "1559902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P+DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            LMN_IOZL_Test = evParametricTest {
                Number = Expr { String = "911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_lmn_pins"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN500000201.Min"; }
                evHighLimit = Expr { String = "TN500000201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            LMN_IOZH_Test = evParametricTest {
                Number = Expr { String = "912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_lmn_pins"; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'LMN_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN500000201.Min"; }
                evHighLimit = Expr { String = "TN500000201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            PWDNB_IIL_Test = evParametricTest {
                Number = Expr { String = "1142901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121142201.Min"; }
                evHighLimit = Expr { String = "TN121142201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            PWDNB_IIH_Test = evParametricTest {
                Number = Expr { String = "1141901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121070201.Min"; }
                evHighLimit = Expr { String = "TN121144201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            NCGMSLIILTest = evParametricTest {
                Number = Expr { String = "1066902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'NC_GMSL2_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121066202.Min"; }
                evHighLimit = Expr { String = "TN121066202.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IILTest = evParametricTest {
                Number = Expr { String = "1579901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121579201.Min"; }
                evHighLimit = Expr { String = "TN121579201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IIHTest = evParametricTest {
                Number = Expr { String = "1579902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121579902.Min"; }
                evHighLimit = Expr { String = "TN121579902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIILTest = evParametricTest {
                Number = Expr { String = "9999901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN129999901.Min"; }
                evHighLimit = Expr { String = "TN129999901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIIHTest = evParametricTest {
                Number = Expr { String = "9999902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN129999902.Min"; }
                evHighLimit = Expr { String = "TN129999902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PPMU_Leakage3";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            GpioIilTest = evParametricTest {
                Number = Expr { String = "1066901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            GpioIihTest = evParametricTest {
                Number = Expr { String = "1065901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "dut_gpio_even_pins+dut_gpio_odd_pins"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'GPIO_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMIPinsLowTest = evParametricTest {
                Number = Expr { String = "1559901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N+DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            HDMIPinsHighTest = evParametricTest {
                Number = Expr { String = "1559902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_RXC_P+DUT_RX0_N+DUT_RX1_N+DUT_RX2_N+DUT_RXC_N+DUT_RX0_P+DUT_RX1_P+DUT_RX2_P"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'HDMI_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            InputPinsLowTest = evParametricTest {
                Number = Expr { String = "1142901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121142201.Min"; }
                evHighLimit = Expr { String = "TN121142201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            PWDNBIIHTest = evParametricTest {
                Number = Expr { String = "1141901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_PWDNB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PWDNB_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121070201.Min"; }
                evHighLimit = Expr { String = "TN121144201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            NCGMSLIILTest = evParametricTest {
                Number = Expr { String = "1066902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'NC_GMSL2_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121066202.Min"; }
                evHighLimit = Expr { String = "TN121066202.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            NCGMSLIIHTest = evParametricTest {
                Number = Expr { String = "1065902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_NC_GMSL2B"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'NC_GMSL2_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121066202.Min"; }
                evHighLimit = Expr { String = "TN121066202.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IILTest = evParametricTest {
                Number = Expr { String = "1579901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121579201.Min"; }
                evHighLimit = Expr { String = "TN121579201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            X1IIHTest = evParametricTest {
                Number = Expr { String = "1579902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_X1"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'X1_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121579902.Min"; }
                evHighLimit = Expr { String = "TN121579902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrainIILTest = evParametricTest {
                Number = Expr { String = "1068901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX+DUT_DDCSDA+DUT_SCL_TX+DUT_DDCSCL"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OpenDrainIIHTest = evParametricTest {
                Number = Expr { String = "1067901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX+DUT_DDCSDA+DUT_SCL_TX+DUT_DDCSCL"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'OPENDRAIN_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN121069201.Min"; }
                evHighLimit = Expr { String = "TN121069201.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIILTest = evParametricTest {
                Number = Expr { String = "9999901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B+DUT_LOCK+DUT_ERRB_LFLTB_INTOUTB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIL_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN129999901.Min"; }
                evHighLimit = Expr { String = "TN129999901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            OneMegPDIIHTest = evParametricTest {
                Number = Expr { String = "9999902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_HSPD+DUT_NC_GMSL2B+DUT_LOCK+DUT_ERRB_LFLTB_INTOUTB"; }
                evFailBin = Leakage_Current;
                evTestText = Expr { String = "'PERSISTENT_1MEGPD_IIH_MAX_FRONT'"; }
                evLowLimit = Expr { String = "TN129999902.Min"; }
                evHighLimit = Expr { String = "TN129999902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest Line_Fault_Levels {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = DC_LMN;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.LogSpotCal";
            CalDateTest = evParametricTest {
                Number = Expr { String = "100"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'CAL_PPMU_APPROXIMATE_Date_of_spot_Calibration'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "21001232"; }
            }
            CalTimeTest = evParametricTest {
                Number = Expr { String = "101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'CAL_PPMU_Time_of_spot_Calibration'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "240101"; }
            }
            iForce_Test = evParametricTest {
                Number = Expr { String = "102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'CAL_PPMU_Current_Used_For_20uA_range_Calibration'"; }
                evLowLimit = Expr { String = "-100uA"; }
                evHighLimit = Expr { String = "0uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
            iForce_large_Test = evParametricTest {
                Number = Expr { String = "103"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'CAL_PPMU_Current_Used_For_200uA_range_Calibration'"; }
                evLowLimit = Expr { String = "-100uA"; }
                evHighLimit = Expr { String = "0A"; }
                evUnits = Expr { String = "'uA'"; }
            }
            CalFactorTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "104"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m6uA_LMN0A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "105"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m6uA_LMN0B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "106"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m6uA_LMN1A'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "107"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m6uA_LMN1B'"; }
                    evLowLimit = Expr { String = "-200nA"; }
                    evHighLimit = Expr { String = "200nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            CalFactor_large_Test = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "108"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m20uA_LMN0A'"; }
                    evLowLimit = Expr { String = "-1100nA"; }
                    evHighLimit = Expr { String = "1100nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "109"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m20uA_LMN0B'"; }
                    evLowLimit = Expr { String = "-1100nA"; }
                    evHighLimit = Expr { String = "1100nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "110"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m20uA_LMN1A'"; }
                    evLowLimit = Expr { String = "-1100nA"; }
                    evHighLimit = Expr { String = "1100nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "111"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_PPMU_ERROR_m20uA_LMN1B'"; }
                    evLowLimit = Expr { String = "-1100nA"; }
                    evHighLimit = Expr { String = "1100nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            CalFactor_HVVI_Test = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "112"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_HVVI_ERROR_m15uA_LMN01A'"; }
                    evLowLimit = Expr { String = "-250nA"; }
                    evHighLimit = Expr { String = "250nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "113"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_HVVI_ERROR_m15uA_LMN01B'"; }
                    evLowLimit = Expr { String = "-250nA"; }
                    evHighLimit = Expr { String = "250nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            MeterError_HVVI_Test = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "114"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01A_HVVI"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_HVVI_METER_ERROR_m15uA_LMN01A'"; }
                    evLowLimit = Expr { String = "-250nA"; }
                    evHighLimit = Expr { String = "250nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "115"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN01B_HVVI"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'CAL_HVVI_METER_ERROR_m15uA_LMN01B'"; }
                    evLowLimit = Expr { String = "-250nA"; }
                    evHighLimit = Expr { String = "250nA"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            iForce_HVVI_Test = evParametricTest {
                Number = Expr { String = "116"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HardwareIssue;
                evTestText = Expr { String = "'CAL_HVVI_Current_Used_For_50uA_range_Calibration'"; }
                evLowLimit = Expr { String = "-100uA"; }
                evHighLimit = Expr { String = "0uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_Char   OR   OpVar_DEBUG_Master   OR   OpVar_Debug_TempChecks"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_LMN_MIN_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_DC_IV_PARAMS";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_MIN'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_MIN'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000203.Min"; }
                    evHighLimit = Expr { String = "TN500000203.Max"; }
                    evSimulateValue = Expr { String = "TN500000203.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000204.Min"; }
                    evHighLimit = Expr { String = "TN500000204.Max"; }
                    evSimulateValue = Expr { String = "TN500000204.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000205.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evSimulateValue = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000206.Max"; }
                    evSimulateValue = Expr { String = "TN500000206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TrueShortTrueOpen_Test = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_OPEN_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_OPEN_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            PowerDownAtEnd = Expr { String = "TRUE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic_C";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VDDCorner = Expr { String = "2"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            LimitsRev = Expr { String = "2"; }
            LimitsRevTest = evParametricTest {
                Number = Expr { String = "30200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LineFaultNew;
                evTestText = Expr { String = "'CALCULATED_LIMITS_REVISION_VDDMIN'"; }
                evLowLimit = Expr { String = "2"; }
                evHighLimit = Expr { String = "2"; }
                evSimulateValue = Expr { String = "2"; }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "30201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_VDDMIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "30202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_VDDMIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "30203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_VDDMIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "30204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_VDDMIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "30205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "30206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "30207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "30208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "30209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "30210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "30211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "30212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "30213"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_VDDMIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "30214"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_VDDMIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "30215"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_VDDMIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "30216"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_VDDMIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "30217"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "30218"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "30219"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "30220"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "30221"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "30222"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "30223"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "30224"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_VDDMIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "31201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "31202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "31203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "31204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "31205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "31206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "31207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "31208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "31209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "31210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "31211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "31212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Relative_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "32201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "32202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "32203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "32204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "32205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "32206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "32207"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "32208"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "32209"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "32210"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "32211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "32212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "32213"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "32214"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "32215"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "32216"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "32217"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "32218"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmin_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "32219"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "32220"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmax_INFO_VDDMIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic_C";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VDDCorner = Expr { String = "2"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            LimitsRev = Expr { String = "1"; }
            LimitsRevTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'CALCULATED_LIMITS_REVISION_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000213"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000214"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "250"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "253"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "254"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "255"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "256"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "257"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1686201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1688201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1566201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1570201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1568201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1573201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1568202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1573202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1572201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1572203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1572202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1572204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "265"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "266"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "267"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "268"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "269"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "270"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "271"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "272"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "273"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "274"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "275"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "276"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Relative_spec_I_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[14] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[15] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[16] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[17] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmin_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[18] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[19] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_specmax_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_MIN'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_MIN'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000203.Min"; }
                    evHighLimit = Expr { String = "TN500000203.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MIN'"; }
                    evLowLimit = Expr { String = "TN500000204.Min"; }
                    evHighLimit = Expr { String = "TN500000204.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000205"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000205.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000206"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MIN'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000211"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000212"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000213"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000214"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MIN'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "250"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "253"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "254"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "255"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "256"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "257"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1686201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1688201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MIN'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1566201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1570201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1568201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1573201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1568202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1573202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1572201"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1572203"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1572202"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1572204"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "265"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "266"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "267"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "268"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "269"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "270"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "271"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "272"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "273"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "274"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "275"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "276"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "280"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "281"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "282"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "283"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_5PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "284"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "285"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "286"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "287"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_4PCT_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "290"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "291"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "292"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "293"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "294"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "295"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "296"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "297"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            float_char_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1566251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1566252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1567251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1567252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1568251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1568252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1570251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1570252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1571251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1571252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1572251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1572252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1573251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1573252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573252.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            gng_20190222_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_20190222_MIN'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_I_20190222_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_20190222_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            margin_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_MARGIN_INFO_VMIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_MARGIN_INFO_VMIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_TO_NORMAL_MARGIN_INFO_VMIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_TO_NORMAL_MARGIN_INFO_VMIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            norm_char_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO0_LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO0_LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ION0_LMN0A_NORMALIZED_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ION0_LMN0B_NORMALIZED_OPEN_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG0_LMN0A_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG0_LMN0B_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO1_LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO1_LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IOLL1_LMN1A_NORMALIZED_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IOLL1_LMN1B_NORMALIZED_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ILLN1_LMN1A_NORMALIZED_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ILLN1_LMN1B_NORMALIZED_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG1_LMN1A_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG1_LMN1B_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "OpVar_Char   OR   OpVar_DEBUG_Master   OR   OpVar_Debug_TempChecks"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_POST_LMN_MIN_PRE_LMN_MAX_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_DC_IV_PARAMS";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_VDDMAX'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_VDDMAX'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_VDDMAX'"; }
                    evLowLimit = Expr { String = "TN500000903.Min"; }
                    evHighLimit = Expr { String = "TN500000903.Max"; }
                    evSimulateValue = Expr { String = "TN500000203.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_VDDMAX'"; }
                    evLowLimit = Expr { String = "TN500000904.Min"; }
                    evHighLimit = Expr { String = "TN500000904.Max"; }
                    evSimulateValue = Expr { String = "TN500000204.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000905"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_VDDMAX'"; }
                    evLowLimit = Expr { String = "TN500000905.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evSimulateValue = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000906"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_VDDMAX'"; }
                    evLowLimit = Expr { String = "TN500000906.Min"; }
                    evHighLimit = Expr { String = "TN500000906.Max"; }
                    evSimulateValue = Expr { String = "TN500000206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            TrueShortTrueOpen_Test = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000907"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_SHORT_TO_GND_VDDMAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000908"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_SHORT_TO_GND_VDDMAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000909"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_TRUE_OPEN_VDDMAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000910"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_TRUE_OPEN_VDDMAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            PowerDownAtEnd = Expr { String = "TRUE"; }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic_C";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VDDCorner = Expr { String = "2"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            LimitsRev = Expr { String = "2"; }
            LimitsRevTest = evParametricTest {
                Number = Expr { String = "30900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LineFaultNew;
                evTestText = Expr { String = "'CALCULATED_LIMITS_REVISION_VDDMAX'"; }
                evLowLimit = Expr { String = "2"; }
                evHighLimit = Expr { String = "2"; }
                evSimulateValue = Expr { String = "2"; }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "30901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_VDDMAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "30902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_VDDMAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "30903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_VDDMAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "30904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_VDDMAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "30905"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "30906"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "30907"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "30908"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "30909"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "30910"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "30911"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "30912"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "30913"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_VDDMAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "30914"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_VDDMAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "30915"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_VDDMAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "30916"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_VDDMAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "30917"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "30918"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "30919"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "30920"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "30921"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "30922"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "30923"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "30924"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_VDDMAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "31901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "31902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "31903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "31904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "31905"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "31906"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "31907"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "31908"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "31909"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "31910"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "31911"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "31912"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_20190222_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Relative_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "32901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "32902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "32903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "32904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "32905"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "32906"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "32907"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "32908"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "32909"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "32910"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "32911"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "32912"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "32913"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "32914"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "32915"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "32916"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "32917"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "32918"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_min_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "32919"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "32920"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LineFaultNew;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_max_INFO_VDDMAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic_C";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VDDCorner = Expr { String = "2"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            LimitsRev = Expr { String = "1"; }
            LimitsRevTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LMN_IihIil;
                evTestText = Expr { String = "'CALCULATED_LIMITS_REVISION_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000911"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000912"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000913"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000914"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evSimulateValue = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000950"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000953"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "0000954"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "0000955"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "0000956"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "0000957"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1686901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1688901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evSimulateValue = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1566901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1570901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evSimulateValue = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1568901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1573901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1568902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1573902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evSimulateValue = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1572901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1572903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1572902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1572904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evSimulateValue = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000965"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000966"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000967"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000968"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000969"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000970"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000971"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000972"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "0000973"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "0000974"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "0000975"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "0000976"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Relative_spec_I_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ION0_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG0_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_IOLL1_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[14] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[15] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_ILLN1_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[16] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[17] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_min_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[18] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[19] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'Relative_Threshold_INSG1_max_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-50uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evSimulateValue = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresholds_Dynamic";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            IIL_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIL_MAX'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            IIH_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "dut_lmn_pins"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN_IIH_MAX'"; }
                    evLowLimit = Expr { String = "TN500000201.Min"; }
                    evHighLimit = Expr { String = "TN500000201.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN0Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "TN500000903.Min"; }
                    evHighLimit = Expr { String = "TN500000903.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            LMN1Ignd_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1_ENABLED_CURRENT_INTO_GND_MAX'"; }
                    evLowLimit = Expr { String = "TN500000904.Min"; }
                    evHighLimit = Expr { String = "TN500000904.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            Vopen0_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000905"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "TN500000905.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_ft = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000906"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_MAX'"; }
                    evLowLimit = Expr { String = "TN500000906.Min"; }
                    evHighLimit = Expr { String = "TN500000906.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000911"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_min_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000912"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_min_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000913"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_OPEN_max_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000914"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_OPEN_max_spec_MAX'"; }
                    evLowLimit = Expr { String = "15"; }
                    evHighLimit = Expr { String = "15"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000950"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000953"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "0000954"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "0000955"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_max_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "0000956"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "0000957"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_SHORT_min_THRESH_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1686901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1688901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_GND_MAX'"; }
                    evLowLimit = Expr { String = "5"; }
                    evHighLimit = Expr { String = "5"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1566901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_SHORT_TO_BAT_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1570901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_SHORT_TO_BAT_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "0"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1568901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1573901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1568902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1573902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1572901"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1572903"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1572902"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1572904"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000965"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000966"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000967"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000968"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000969"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000970"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000971"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000972"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "0000973"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "0000974"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "0000975"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "0000976"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000980"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000981"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000982"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000983"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_5PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000984"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000985"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000986"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000987"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_4PCT_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            L2L_RDRIFT_nonspec_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "0000990"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "0000991"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "0000992"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "0000993"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_5PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "0000994"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "0000995"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_LOW_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "0000996"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "0000997"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_4PCT_RDRIFT_HIGH_SIDE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            float_char_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1566951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1566952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501566251.Min"; }
                    evHighLimit = Expr { String = "TN501566251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1567951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1567952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501567251.Min"; }
                    evHighLimit = Expr { String = "TN501567251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1568951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1568952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN0B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501568251.Min"; }
                    evHighLimit = Expr { String = "TN501568251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1570951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1570952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501570251.Min"; }
                    evHighLimit = Expr { String = "TN501570251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1571951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1571952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501571251.Min"; }
                    evHighLimit = Expr { String = "TN501571251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1572951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1572952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501572251.Min"; }
                    evHighLimit = Expr { String = "TN501572251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1573951"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1573952"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "TN501573251.Min"; }
                    evHighLimit = Expr { String = "TN501573251.Max"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            gng_20190222_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_LOW_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_LOW_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_NORMAL_RDRIFT_HIGH_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_NORMAL_RDRIFT_HIGH_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "10"; }
                    evHighLimit = Expr { String = "10"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_LOW_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_PINS_LINE_TO_LINE_RDRIFT_HIGH_SIDE_20190222_MAX'"; }
                    evLowLimit = Expr { String = "192"; }
                    evHighLimit = Expr { String = "192"; }
                    evUnits = Expr { String = "'Reg'"; }
                }
            }
            RDRIFT_I_20190222_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_CURRENT_20190222_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            margin_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_OPEN_TO_LINE_TO_LINE_MARGIN_INFO_VMAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_OPEN_TO_LINE_TO_LINE_MARGIN_INFO_VMAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1A_LINE_TO_LINE_TO_NORMAL_MARGIN_INFO_VMAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMN1B_LINE_TO_LINE_TO_NORMAL_MARGIN_INFO_VMAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            norm_char_tests = {
                Row[0] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO0_LMN0A_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO0_LMN0B_SHORT_TO_BAT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ION0_LMN0A_NORMALIZED_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ION0_LMN0B_NORMALIZED_OPEN_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG0_LMN0A_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG0_LMN0B_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO1_LMN1A_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ISBO1_LMN1B_SHORT_TO_BATT_TO_OPEN_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IOLL1_LMN1A_NORMALIZED_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IOLL1_LMN1B_NORMALIZED_OPEN_TO_LINE_TO_LINE_SHORT_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ILLN1_LMN1A_NORMALIZED_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'ILLN1_LMN1B_NORMALIZED_LINE_TO_LINE_SHORT_TO_NORMAL_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG1_LMN1A_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'INSG1_LMN1B_NORMALIZED_NORMAL_TO_SHORT_TO_GND_THRESHOLD_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "30uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "OpVar_Char   OR   OpVar_DEBUG_Master   OR   OpVar_Debug_TempChecks"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max+20C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+20C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
    evBlock[12] = {
        EnableExpr = Expr { String = "OpVar_PPMU_LMN"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresh_Dynamic_PPMU";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            RelayNCTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1201"; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'K12_K21_NC_Relay_Resistance_INFO_MIN'"; }
                    evUnits = Expr { String = "'Ohm'"; }
                }
            }
            RelayNOTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1202"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'K12_K21_NO_Relay_Resistance_INFO_MIN'"; }
                    evUnits = Expr { String = "'Ohm'"; }
                }
            }
            HVVI_force_PPMU_meas = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1203"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'HVVI_force_5p6uA_PPMU_measure_INFO_MIN'"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            PPMU_force_HVVI_meas = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1204"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'PPMU_force_5p6uA_HVVI_measure_INFO_MIN'"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            HVVI_Error = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1205"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'HVVI_FORCE_ERROR_INFO_MIN'"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            PPMU_Error = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1206"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'PPMU_FORCE_ERROR_INFO_MIN'"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            Vopen0_HVVI = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1207"; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_HVVI_INFO_MIN'"; }
                    evLowLimit = Expr { String = "TN500000205.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_HVVI = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1208"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_HVVI_INFO_MIN'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen_PPMU_test = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1209"; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B+DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN_OPEN_VOLTAGE_PPMU_INFO_MIN'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1210"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1211"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1212"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1213"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1214"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1215"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1216"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1217"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1218"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1219"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1220"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1221"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1222"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1223"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1224"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1225"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MIN'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1250"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1251"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1252"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1253"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1254"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1255"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1256"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_HIGHSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1257"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1258"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1259"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1260"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1261"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_i_HVVI_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1262"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1263"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1264"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1265"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1266"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1267"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1268"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1269"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1270"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1271"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1272"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1273"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_i_PPMU_VO_INFO_MIN'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
    evBlock[13] = {
        EnableExpr = Expr { String = "OpVar_PPMU_LMN"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.LMN_Thresh_Dynamic_PPMU";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            RelayNCTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1901"; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'K12_K21_NC_Relay_Resistance_INFO_MAX'"; }
                    evUnits = Expr { String = "'Ohm'"; }
                }
            }
            RelayNOTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1902"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'K12_K21_NO_Relay_Resistance_INFO_MAX'"; }
                    evUnits = Expr { String = "'Ohm'"; }
                }
            }
            HVVI_force_PPMU_meas = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1903"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'HVVI_force_5p6uA_PPMU_measure_INFO_MAX'"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            PPMU_force_HVVI_meas = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1904"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'PPMU_force_5p6uA_HVVI_measure_INFO_MAX'"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
            HVVI_Error = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1905"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'HVVI_FORCE_ERROR_INFO_MAX'"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            PPMU_Error = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1906"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = HardwareIssue;
                    evTestText = Expr { String = "'PPMU_FORCE_ERROR_INFO_MAX'"; }
                    evUnits = Expr { String = "'nA'"; }
                }
            }
            Vopen0_HVVI = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1907"; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN0_OPEN_VOLTAGE_HVVI_INFO_MAX'"; }
                    evLowLimit = Expr { String = "TN500000205.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen1_HVVI = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1908"; }
                    evPins = Expr { String = "DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN1_OPEN_VOLTAGE_HVVI_INFO_MAX'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000206.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            Vopen_PPMU_test = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1909"; }
                    evPins = Expr { String = "DUT_LMN0A+DUT_LMN0B+DUT_LMN1A+DUT_LMN1B"; }
                    evFailBin = LMN_V;
                    evTestText = Expr { String = "'LMN_OPEN_VOLTAGE_PPMU_INFO_MAX'"; }
                    evLowLimit = Expr { String = "TN500000206.Min"; }
                    evHighLimit = Expr { String = "TN500000205.Max"; }
                    evUnits = Expr { String = "'V'"; }
                }
            }
            gng_threshold_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1910"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1911"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1912"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1913"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1914"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1915"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_LOWSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1916"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1917"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_HIGHSIDE_HVVI_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1918"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1919"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1920"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_NORMAL_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1921"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_NORMAL_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "15"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1922"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1923"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_LOWSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1924"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNA_LINE_TO_LINE_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1925"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'LMNB_LINE_TO_LINE_RDRIFT_HIGHSIDE_PPMU_VO_PPMU_i_FORCE_INFO_MAX'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "192"; }
                }
            }
            RDRIFT_spec_I_tests = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "1950"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "1951"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "1952"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "1953"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "1954"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "1955"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "1956"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_HIGHSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "1957"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "1958"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "1959"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "1960"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "1961"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_i_HVVI_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "1962"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_LOWSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "1963"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_LOWSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "1964"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0A_HIGHSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "1965"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN0_LMN0B_HIGHSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "1966"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A_LOWSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "1967"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_LOWSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "1968"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1A__HIGHSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "1969"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFN1_LMN1B_HIGHSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[20] = evParametricTest {
                    Number = Expr { String = "1970"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_LOWSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[21] = evParametricTest {
                    Number = Expr { String = "1971"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_LOWSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[22] = evParametricTest {
                    Number = Expr { String = "1972"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1A_HIGHSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
                Row[23] = evParametricTest {
                    Number = Expr { String = "1973"; }
                    evFailBin = LMN_IihIil;
                    evTestText = Expr { String = "'IFLLS1_LMN1B_HIGHSIDE_i_PPMU_VO_INFO_MAX'"; }
                    evLowLimit = Expr { String = "-20uA"; }
                    evHighLimit = Expr { String = "20uA"; }
                    evUnits = Expr { String = "'uA'"; }
                }
            }
        }
    }
}
ETest LinkParams {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR  (OpVar_Debug_TempChecks)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'i2c'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'GROSS_FUNCTIONAL_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'DEVICE_ID_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0x83"; }
                evHighLimit = Expr { String = "0x89"; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_PRE_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_PRE_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max+160C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_PRE_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C+160C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Number = Expr { String = "1543904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TDiodeVltgFail;
                evTestText = Expr { String = "'TDiode Voltage Check_PRE_LINK_SENSITIVITY'"; }
                evLowLimit = Expr { String = "TN151543900.Min-100mV"; }
                evHighLimit = Expr { String = "TN151543900.Max+100mV"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "FALSE"; }
            LinkRetryLimit = Expr { String = "10"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_130MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "120241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_A_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "120242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_A_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "120243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_A_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "120244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_A_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "120245"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_A_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "120246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_A_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "11"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "120247"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "120248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "120249"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "120250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "120251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "120252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "120253"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_A_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "11"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "120255"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FinalLockState_CTRL3_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "120256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FinalSweepLockState_CTRL3_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "120254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_130mV'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "FALSE"; }
            LinkRetryLimit = Expr { String = "11"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_160MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "160161"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_A_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "160162"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_A_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "160163"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_A_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "160164"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_A_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "160165"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_A_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "160166"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_A_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "160167"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "160168"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "160169"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "160170"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "160171"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "160172"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "160173"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_A_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "10"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "160175"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FinalLockState_CTRL3_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "160176"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FInalSweepLockState_CTRL3_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "120174"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_160mV'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "TRUE"; }
            LinkRetryLimit = Expr { String = "10"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_150MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "120201"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_A_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "120202"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_A_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "120203"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_A_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "120204"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_A_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "120205"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_A_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "120206"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_A_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "120207"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "120208"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "120209"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "120210"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "120211"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "120212"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "120213"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_A_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "5"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "120215"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FinalLockState_CTRL3_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "120216"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FInalSweepLockState_CTRL3_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "120214"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_SWEEP'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "FALSE"; }
            LinkRetryLimit = Expr { String = "10"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_180MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "120281"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_A_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "120282"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_A_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "120283"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_A_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "120284"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_A_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "120285"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_A_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "120286"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_A_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "120287"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "120288"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "120289"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "120290"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "120291"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "120292"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "120293"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_A_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "5"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "120295"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FinalLockState_CTRL3_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "120296"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_FInalSweepLockState_CTRL3_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "120294"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_180mV'"; }
            }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "FALSE"; }
            LinkRetryLimit = Expr { String = "10"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_130MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "150241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_B_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "150242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_B_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "150243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_B_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "150244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_B_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "150245"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_B_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "150246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_B_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "11"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "150247"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "150248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "150249"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "150250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "150251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "150252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "150253"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_B_6_0p1875_Vt0x20_ECP0_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "11"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "150255"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FinalLockState_CTRL3_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "150256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FInalSweepLockState_CTRL3_130mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "150254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_130mV'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "FALSE"; }
            LinkRetryLimit = Expr { String = "11"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_160MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "160261"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_B_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "160262"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_B_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "160263"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_B_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "160264"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_B_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "160265"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_B_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "160266"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_B_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "160267"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "160268"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "160269"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "160270"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "160271"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "160272"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "160273"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_B_6_0p1875_Vt0x20_ECP0_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "10"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "160275"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FinalLockState_CTRL3_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "160276"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FInalSweepLockState_CTRL3_160mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "121274"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_160mV'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "TRUE"; }
            LinkRetryLimit = Expr { String = "10"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_150MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "150201"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_B_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "150202"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_B_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "150203"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_B_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "150204"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_B_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "150205"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_B_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "150206"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_B_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "150207"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "150208"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "150209"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "150210"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "150211"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "150212"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "150213"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_B_6_0p1875_Vt0x20_ECP0_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "5"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "150215"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FinalLockState_CTRL3_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "150216"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FInalSweepLockState_CTRL3_SWEEP_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "150214"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_SWEEP"; }
            }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            CharSweep = Expr { String = "FALSE"; }
            LinkRetryLimit = Expr { String = "10"; }
            GNG_TestCode = Expr { String = "LINK_SENSE_180MV.Typ"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "150281"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_B_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                Number = Expr { String = "150282"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_B_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "-10"; }
                evHighLimit = Expr { String = "750"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                Number = Expr { String = "150283"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_B_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                Number = Expr { String = "150284"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_B_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                Number = Expr { String = "150285"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_B_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                Number = Expr { String = "150286"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_B_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                Number = Expr { String = "150287"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "150288"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonTemp_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TdiodeVTest = evParametricTest {
                Number = Expr { String = "150289"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TmonVTest = evParametricTest {
                Number = Expr { String = "150290"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            TvssVTest = evParametricTest {
                Number = Expr { String = "150291"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TvssV_VDDMIN'"; }
                evLowLimit = Expr { String = "-100"; }
                evHighLimit = Expr { String = "200"; }
            }
            CfTest = evParametricTest {
                Number = Expr { String = "150292"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
                Number = Expr { String = "150293"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_35ms_Link_Attempts_B_6_0p1875_Vt0x20_ECP0_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "5"; }
            }
            FinalLockState = evParametricTest {
                Number = Expr { String = "150295"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FinalLockState_CTRL3_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            LoopLockState = evParametricTest {
                Number = Expr { String = "150296"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_FInalSweepLockState_CTRL3_180mV_VDDMIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0xFF"; }
            }
            RLMS_Values_SA = evParametricTest {
                Number = Expr { String = "150294"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'6_0p1875_Vt0x20_ECP0_180mV'"; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.GmslOsnMargin2";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AP'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            LinkStatTest = evParametricTest {
                Number = Expr { String = "43200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetLinkPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_LINK_STAT_GMSL2_6_0p1875_COAX_VMIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            EsVt24Test = evParametricTest {
                Number = Expr { String = "3200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetEsVltgPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_ES_VLTG_0X18_MIN'"; }
                evLowLimit = Expr { String = "OSN_ESVT24_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_ESVT24_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            EsVt40Test = evParametricTest {
                Number = Expr { String = "3201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetEsVltgPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_ES_VLTG_0X28_MIN'"; }
                evLowLimit = Expr { String = "OSN_ESVT40_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_ESVT40_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestCoeff = evParametricTest {
                Number = Expr { String = "3203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetLinkPhyA;
                evTestText = Expr { String = "'GMSL2_6_0p1875_COAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10e6"; }
            }
            LockGainTest = evParametricTest {
                Number = Expr { String = "3204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_LINK_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_LINK_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LINK_GAIN_LIM.Max"; }
            }
            LockOffsetTest = evParametricTest {
                Number = Expr { String = "3205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_LINK_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_LINK_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LINK_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            M6dbGainTest = evParametricTest {
                Number = Expr { String = "3206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_0DB_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_M6DB_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_M6DB_GAIN_LIM.Max"; }
                evUnits = Expr { String = "'m'"; }
            }
            M6dbGainCodeTest = evParametricTest {
                Number = Expr { String = "3207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_0DB_AGC_CODE_MIN'"; }
                evLowLimit = Expr { String = "OSN_M6DB_AGC_CODE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_M6DB_AGC_CODE_LIM.Max"; }
            }
            M6dbOffsetTest = evParametricTest {
                Number = Expr { String = "3208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_0DB_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_M6DB_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_M6DB_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DefGainTest = evParametricTest {
                Number = Expr { String = "3209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_AGC_AT_128_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_AGC128_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_AGC128_GAIN_LIM.Max"; }
            }
            DefOffsetTest = evParametricTest {
                Number = Expr { String = "3210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_AGC_AT_128_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_AGC128_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_AGC128_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            SampleTest = evParametricTest {
                Number = Expr { String = "3211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetSamplePhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_SAMPLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_SAMPLETEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_SAMPLETEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ConvTest = evParametricTest {
                Number = Expr { String = "3212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetConvergencePhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_CONVERGENCE_MIN'"; }
                evLowLimit = Expr { String = "OSN_CONVTEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_CONVTEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            Ctle128_SampleTest = evParametricTest {
                Number = Expr { String = "3250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetSamplePhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_CTLE128_SAMPLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_CTLE128SAMPLETEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_CTLE128SAMPLETEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            InitTest = evParametricTest {
                Number = Expr { String = "3213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetInitPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_INIT_MIN'"; }
                evLowLimit = Expr { String = "OSN_INITTEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_INITTEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VgaTest = evParametricTest {
                Number = Expr { String = "3214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetVgaPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_VGA_MIN'"; }
                evLowLimit = Expr { String = "OSN_VGATEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_VGATEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosEsTest1p8 = evParametricTest {
                Number = Expr { String = "3215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_G2P2_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_G1P8_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_G1P8_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            AgcGainTest = evParametricTest {
                Number = Expr { String = "3216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_G2P2_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_G2P2_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_G2P2_GAIN_LIM.Max"; }
            }
            AgcGainCodeTest = evParametricTest {
                Number = Expr { String = "3217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_G2P2_AGC_CODE_MIN'"; }
                evLowLimit = Expr { String = "OSN_G1P8_AGC_CODE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_G1P8_AGC_CODE_LIM.Max"; }
            }
            VosRETest = evParametricTest {
                Number = Expr { String = "3218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_RE_CTLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_RE_CTLE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_RE_CTLE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosFETest = evParametricTest {
                Number = Expr { String = "3219"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_FE_CTLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_FE_CTLE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_FE_CTLE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosESTest = evParametricTest {
                Number = Expr { String = "3220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_ES_CTLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_ES_CTLE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_ES_CTLE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosInCancelTest = evParametricTest {
                Number = Expr { String = "3222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_VOSIN_CANCEL_MIN'"; }
                evLowLimit = Expr { String = "OSN_VOSIN_CANCEL_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_VOSIN_CANCEL_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosQpQnTest = evParametricTest {
                Number = Expr { String = "3223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_VOSQPQN_MIN'"; }
                evLowLimit = Expr { String = "OSN_VOSQPQN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_VOSQPQN_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosReMFeMEsTest = evParametricTest {
                Number = Expr { String = "3224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_RE_FE_ES_MIN'"; }
                evLowLimit = Expr { String = "OSN_RE_FE_ES_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_RE_FE_ES_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosReMQpQnMEsTest = evParametricTest {
                Number = Expr { String = "3225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_RE_QPQN_ES_MIN'"; }
                evLowLimit = Expr { String = "OSN_RE_QPQN_ES_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_RE_QPQN_ES_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VsigInitTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "3226"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_RE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_RE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_RE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "3227"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_FE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_FE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_FE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "3228"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_ES_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_ES_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_ES_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "3229"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_VSIG_RE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_VSIG_RE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_VSIG_RE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "3230"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_VSIG_FE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_VSIG_FE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_VSIG_FE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "3231"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_VSIG_ES_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_VSIG_ES_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_VSIG_ES_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
            }
            LeomvTest = evParametricTest {
                Number = Expr { String = "3232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_LEOMV_QPQN_MIN'"; }
                evLowLimit = Expr { String = "OSN_LEOMV_QPQN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LEOMV_QPQN_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            LeomvFeTest = evParametricTest {
                Number = Expr { String = "3233"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_LEOMV_FE_MIN'"; }
                evLowLimit = Expr { String = "OSN_LEOMV_FE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LEOMV_FE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CombVosTest = evParametricTest {
                Number = Expr { String = "3234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_COMBINED_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_COMBINED_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_COMBINED_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            HazyDsTest = evParametricTest {
                Number = Expr { String = "3235"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetHazyPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_HAZY_DS_FE_MIN'"; }
                evLowLimit = Expr { String = "OSN_HAZYTEST_FE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_HAZYTEST_FE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            HazyDsQpQnTest = evParametricTest {
                Number = Expr { String = "3236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetHazyPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_HAZY_DS_QPQN_MIN'"; }
                evLowLimit = Expr { String = "OSN_HAZYTEST_QPQN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_HAZYTEST_QPQN_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            GainLoopsTest_0p5 = evParametricTest {
                Number = Expr { String = "3237"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_GainLoops_0p5_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "20"; }
            }
            GainLoopsTest_1p8 = evParametricTest {
                Number = Expr { String = "3238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_GainLoops_1p8_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "20"; }
            }
            AgcSearchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "3239"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode0'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "3240"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode1'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "3241"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode2'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "3242"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode3'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "3243"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode4'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "3244"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode5'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "3245"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode6'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "3246"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode7'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "3247"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode8'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "3248"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode9'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "3249"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode10'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "3251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode11'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "3252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode12'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "3253"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode13'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "3254"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode14'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "3255"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode15'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "3256"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode16'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "3257"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode17'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "3258"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode18'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "3259"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_AgcCode19'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
            }
            GainSearchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "3270"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain0'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "3271"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain1'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "3272"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain2'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "3273"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain3'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "3274"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain4'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "3275"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain5'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "3276"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain6'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "3277"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain7'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "3278"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain8'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "3279"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain9'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "3280"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain10'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "3281"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain11'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "3282"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain12'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "3283"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain13'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "3284"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain14'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "3285"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain15'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "3286"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain16'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "3287"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain17'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "3288"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain18'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "3289"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyA;
                    evTestText = Expr { String = "'GMSL_OFFSET_A_m6dB_Gain19'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
            }
            m6dB_GainTarget = Expr { String = "GAIN_TARGET_m6dB.Typ"; }
            ErrorSlicerGainTarget = Expr { String = "GAIN_TARGET_ES.Typ"; }
            LinkAgcDeltaTest_m6dB = evParametricTest {
                Number = Expr { String = "3290"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_LinkAgcDelta_0dB'"; }
                evLowLimit = Expr { String = "-255"; }
                evHighLimit = Expr { String = "255"; }
            }
            LinkAgcDeltaTest_1p8 = evParametricTest {
                Number = Expr { String = "3291"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyA;
                evTestText = Expr { String = "'GMSL_OFFSET_A_LinkAgcDelta_2p2'"; }
                evLowLimit = Expr { String = "-255"; }
                evHighLimit = Expr { String = "255"; }
            }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.GmslOsnMargin2";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'BP'"; }
            FwTxRate = Expr { String = "6.0"; }
            RevTxRate = Expr { String = "0.1875"; }
            LinkStatTest = evParametricTest {
                Number = Expr { String = "44200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetLinkPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_LINK_STAT_GMSL2_6_0p1875_COAX_VMIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            EsVt24Test = evParametricTest {
                Number = Expr { String = "4200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetEsVltgPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_ES_VLTG_0X18_MIN'"; }
                evLowLimit = Expr { String = "OSN_ESVT24_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_ESVT24_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            EsVt40Test = evParametricTest {
                Number = Expr { String = "4201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetEsVltgPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_ES_VLTG_0X28_MIN'"; }
                evLowLimit = Expr { String = "OSN_ESVT40_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_ESVT40_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestCoeff = evParametricTest {
                Number = Expr { String = "4203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetLinkPhyB;
                evTestText = Expr { String = "'GMSL2_6_0p1875_COAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10e6"; }
            }
            LockGainTest = evParametricTest {
                Number = Expr { String = "4204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_LINK_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_LINK_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LINK_GAIN_LIM.Max"; }
            }
            LockOffsetTest = evParametricTest {
                Number = Expr { String = "4205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_LINK_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_LINK_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LINK_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            M6dbGainTest = evParametricTest {
                Number = Expr { String = "4206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_0DB_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_M6DB_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_M6DB_GAIN_LIM.Max"; }
                evUnits = Expr { String = "'m'"; }
            }
            M6dbGainCodeTest = evParametricTest {
                Number = Expr { String = "4207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_0DB_AGC_CODE_MIN'"; }
                evLowLimit = Expr { String = "OSN_M6DB_AGC_CODE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_M6DB_AGC_CODE_LIM.Max"; }
            }
            M6dbOffsetTest = evParametricTest {
                Number = Expr { String = "4208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_0DB_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_M6DB_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_M6DB_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            DefGainTest = evParametricTest {
                Number = Expr { String = "4209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_AGC_AT_128_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_AGC128_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_AGC128_GAIN_LIM.Max"; }
            }
            DefOffsetTest = evParametricTest {
                Number = Expr { String = "4210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_AGC_AT_128_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_AGC128_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_AGC128_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            SampleTest = evParametricTest {
                Number = Expr { String = "4211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetSamplePhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_SAMPLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_SAMPLETEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_SAMPLETEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            ConvTest = evParametricTest {
                Number = Expr { String = "4212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetConvergencePhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_CONVERGENCE_MIN'"; }
                evLowLimit = Expr { String = "OSN_CONVTEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_CONVTEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            Ctle128_SampleTest = evParametricTest {
                Number = Expr { String = "4250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetSamplePhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_CTLE128_SAMPLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_CTLE128SAMPLETEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_CTLE128SAMPLETEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            InitTest = evParametricTest {
                Number = Expr { String = "4213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetInitPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_INIT_MIN'"; }
                evLowLimit = Expr { String = "OSN_INITTEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_INITTEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VgaTest = evParametricTest {
                Number = Expr { String = "4214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetVgaPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_VGA_MIN'"; }
                evLowLimit = Expr { String = "OSN_VGATEST_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_VGATEST_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosEsTest1p8 = evParametricTest {
                Number = Expr { String = "4215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_G2P2_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_G1P8_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_G1P8_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            AgcGainTest = evParametricTest {
                Number = Expr { String = "4216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_G2P2_GAIN_MIN'"; }
                evLowLimit = Expr { String = "OSN_G2P2_GAIN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_G2P2_GAIN_LIM.Max"; }
            }
            AgcGainCodeTest = evParametricTest {
                Number = Expr { String = "4217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_G2P2_AGC_CODE_MIN'"; }
                evLowLimit = Expr { String = "OSN_G1P8_AGC_CODE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_G1P8_AGC_CODE_LIM.Max"; }
            }
            VosRETest = evParametricTest {
                Number = Expr { String = "4218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_RE_CTLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_RE_CTLE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_RE_CTLE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosFETest = evParametricTest {
                Number = Expr { String = "4219"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_FE_CTLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_FE_CTLE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_FE_CTLE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosESTest = evParametricTest {
                Number = Expr { String = "4220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_ES_CTLE_MIN'"; }
                evLowLimit = Expr { String = "OSN_ES_CTLE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_ES_CTLE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosInCancelTest = evParametricTest {
                Number = Expr { String = "4222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_VOSIN_CANCEL_MIN'"; }
                evLowLimit = Expr { String = "OSN_VOSIN_CANCEL_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_VOSIN_CANCEL_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosQpQnTest = evParametricTest {
                Number = Expr { String = "4223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_VOSQPQN_MIN'"; }
                evLowLimit = Expr { String = "OSN_VOSQPQN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_VOSQPQN_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosReMFeMEsTest = evParametricTest {
                Number = Expr { String = "4224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_RE_FE_ES_MIN'"; }
                evLowLimit = Expr { String = "OSN_RE_FE_ES_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_RE_FE_ES_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VosReMQpQnMEsTest = evParametricTest {
                Number = Expr { String = "4225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_RE_QPQN_ES_MIN'"; }
                evLowLimit = Expr { String = "OSN_RE_QPQN_ES_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_RE_QPQN_ES_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            VsigInitTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "4226"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_RE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_RE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_RE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "4227"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_FE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_FE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_FE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "4228"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_ES_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_ES_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_ES_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "4229"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_VSIG_RE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_VSIG_RE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_VSIG_RE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "4230"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_VSIG_FE_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_VSIG_FE_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_VSIG_FE_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "4231"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_VSIG_ES_INIT_MIN'"; }
                    evLowLimit = Expr { String = "OSN_VSIG_ES_INIT_LIM.Min"; }
                    evHighLimit = Expr { String = "OSN_VSIG_ES_INIT_LIM.Max"; }
                    evUnits = Expr { String = "'mV'"; }
                }
            }
            LeomvTest = evParametricTest {
                Number = Expr { String = "4232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_LEOMV_QPQN_MIN'"; }
                evLowLimit = Expr { String = "OSN_LEOMV_QPQN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LEOMV_QPQN_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            LeomvFeTest = evParametricTest {
                Number = Expr { String = "4233"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_LEOMV_FE_MIN'"; }
                evLowLimit = Expr { String = "OSN_LEOMV_FE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_LEOMV_FE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            CombVosTest = evParametricTest {
                Number = Expr { String = "4234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_COMBINED_VOS_MIN'"; }
                evLowLimit = Expr { String = "OSN_COMBINED_VOS_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_COMBINED_VOS_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            HazyDsTest = evParametricTest {
                Number = Expr { String = "4235"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetHazyPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_HAZY_DS_FE_MIN'"; }
                evLowLimit = Expr { String = "OSN_HAZYTEST_FE_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_HAZYTEST_FE_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            HazyDsQpQnTest = evParametricTest {
                Number = Expr { String = "4236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetHazyPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_HAZY_DS_QPQN_MIN'"; }
                evLowLimit = Expr { String = "OSN_HAZYTEST_QPQN_LIM.Min"; }
                evHighLimit = Expr { String = "OSN_HAZYTEST_QPQN_LIM.Max"; }
                evUnits = Expr { String = "'mV'"; }
            }
            GainLoopsTest_0p5 = evParametricTest {
                Number = Expr { String = "4237"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_GainLoops_0p5_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "20"; }
            }
            GainLoopsTest_1p8 = evParametricTest {
                Number = Expr { String = "4238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_GainLoops_1p8_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "20"; }
            }
            AgcSearchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "4239"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode0'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "4240"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode1'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "4241"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode2'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "4242"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode3'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "4243"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode4'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "4244"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode5'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "4245"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode6'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "4246"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode7'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "4247"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode8'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "4248"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode9'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "4249"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode10'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "4251"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode11'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "4252"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode12'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "4253"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode13'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "4254"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode14'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "4255"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode15'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "4256"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode16'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "4257"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode17'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "4258"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode18'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "4259"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_AgcCode19'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "255"; }
                }
            }
            GainSearchTest = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "4270"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain0'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "4271"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain1'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[2] = evParametricTest {
                    Number = Expr { String = "4272"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain2'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[3] = evParametricTest {
                    Number = Expr { String = "4273"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain3'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[4] = evParametricTest {
                    Number = Expr { String = "4274"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain4'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[5] = evParametricTest {
                    Number = Expr { String = "4275"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain5'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[6] = evParametricTest {
                    Number = Expr { String = "4276"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain6'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[7] = evParametricTest {
                    Number = Expr { String = "4277"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain7'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[8] = evParametricTest {
                    Number = Expr { String = "4278"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain8'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[9] = evParametricTest {
                    Number = Expr { String = "4279"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain9'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[10] = evParametricTest {
                    Number = Expr { String = "4280"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain10'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[11] = evParametricTest {
                    Number = Expr { String = "4281"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain11'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[12] = evParametricTest {
                    Number = Expr { String = "4282"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain12'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[13] = evParametricTest {
                    Number = Expr { String = "4283"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain13'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[14] = evParametricTest {
                    Number = Expr { String = "4284"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain14'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[15] = evParametricTest {
                    Number = Expr { String = "4285"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain15'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[16] = evParametricTest {
                    Number = Expr { String = "4286"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain16'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[17] = evParametricTest {
                    Number = Expr { String = "4287"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain17'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[18] = evParametricTest {
                    Number = Expr { String = "4288"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain18'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
                Row[19] = evParametricTest {
                    Number = Expr { String = "4289"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnOffsetFailPhyB;
                    evTestText = Expr { String = "'GMSL_OFFSET_B_m6dB_Gain19'"; }
                    evLowLimit = Expr { String = "0"; }
                    evHighLimit = Expr { String = "100"; }
                    evUnits = Expr { String = "'m'"; }
                }
            }
            m6dB_GainTarget = Expr { String = "GAIN_TARGET_m6dB.Typ"; }
            ErrorSlicerGainTarget = Expr { String = "GAIN_TARGET_ES.Typ"; }
            LinkAgcDeltaTest_m6dB = evParametricTest {
                Number = Expr { String = "4290"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_LinkAgcDelta_0dB'"; }
                evLowLimit = Expr { String = "-255"; }
                evHighLimit = Expr { String = "255"; }
            }
            LinkAgcDeltaTest_1p8 = evParametricTest {
                Number = Expr { String = "4291"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OsnOffsetFailPhyB;
                evTestText = Expr { String = "'GMSL_OFFSET_B_LinkAgcDelta_2p2'"; }
                evLowLimit = Expr { String = "-255"; }
                evHighLimit = Expr { String = "255"; }
            }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_OsnReplicaGain";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            vdiff_lim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "180001"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnReplicaGainPhyA;
                    evTestText = Expr { String = "'GMSL_OSN_REPLICA_GAIN_VDIFF_A_MIN'"; }
                    evLowLimit = Expr { String = "OSNREPLICA_GAIN_VDIFF.Min"; }
                    evHighLimit = Expr { String = "OSNREPLICA_GAIN_VDIFF.Max"; }
                    evUnits = Expr { String = "'=mV'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "180002"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnReplicaGainPhyB;
                    evTestText = Expr { String = "'GMSL_OSN_REPLICA_GAIN_VDIFF_B_MIN'"; }
                    evLowLimit = Expr { String = "OSNREPLICA_GAIN_VDIFF.Min"; }
                    evHighLimit = Expr { String = "OSNREPLICA_GAIN_VDIFF.Max"; }
                    evUnits = Expr { String = "'=mV'"; }
                }
            }
            gain_lim = {
                Row[0] = evParametricTest {
                    Number = Expr { String = "180021"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnReplicaGainPhyA;
                    evTestText = Expr { String = "'GMSL_OSN_REPLICA_GAIN_GAIN_A_MIN'"; }
                    evLowLimit = Expr { String = "OSNREPLICA_GAIN_GAIN.Min"; }
                    evHighLimit = Expr { String = "OSNREPLICA_GAIN_GAIN.Max"; }
                    evUnits = Expr { String = "'=V/V'"; }
                }
                Row[1] = evParametricTest {
                    Number = Expr { String = "180022"; }
                    Result = Expr { String = "#"; Mode = Output; }
                    evFailBin = OsnReplicaGainPhyB;
                    evTestText = Expr { String = "'GMSL_OSN_REPLICA_GAIN_GAIN_B_MIN'"; }
                    evLowLimit = Expr { String = "OSNREPLICA_GAIN_GAIN.Min"; }
                    evHighLimit = Expr { String = "OSNREPLICA_GAIN_GAIN.Max"; }
                    evUnits = Expr { String = "'=V/V'"; }
                }
            }
        }
    }
    evBlock[12] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR  (OpVar_Debug_TempChecks)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'i2c'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'GROSS_FUNCTIONAL_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'DEVICE_ID_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0x83"; }
                evHighLimit = Expr { String = "0x89"; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_POST_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_POST_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_POST_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max+160C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_POST_LINK_SENSITIVITY_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C+160C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Number = Expr { String = "1543914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TDiodeVltgFail;
                evTestText = Expr { String = "'TDiode Voltage Check_POST_LINK_SENSITIVITY'"; }
                evLowLimit = Expr { String = "TN151543900.Min-100mV"; }
                evHighLimit = Expr { String = "TN151543900.Max+100mV"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
    evBlock[13] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'AP'"; }
            CharSweep = Expr { String = "TRUE"; }
            GNG_TestCode = Expr { String = "-1"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "40001"; }
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_A_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "370"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_A_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "410"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_A_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_A_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_A_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_A_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeTemp_VDDMIN'"; }
            }
            TmonTempTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonTemp_VDDMIN'"; }
            }
            TdiodeVTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TdiodeV_VDDMIN'"; }
            }
            TmonVTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TmonV_VDDMIN'"; }
            }
            TvssVTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_TvssV_VDDMIN'"; }
            }
            CfTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyA;
                evTestText = Expr { String = "'GMSL_RevLink_A_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
            }
            FinalLockState = evParametricTest {
            }
            LoopLockState = evParametricTest {
            }
            RLMS_Values_SA = evParametricTest {
            }
        }
    }
    evBlock[14] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "TRUE"; }
        TestMethod {
            Name = "functional.mod.Test_Gmsl_Link_Sensitivity";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            LinkDirection = Expr { String = "'R'"; }
            FwTxRate = Expr { String = "6"; }
            RevTxRate = Expr { String = "0.1875"; }
            SioChannel = Expr { String = "'BP'"; }
            CharSweep = Expr { String = "TRUE"; }
            GNG_TestCode = Expr { String = "-1"; }
            RLMS = Expr { String = "TRUE"; }
            Threshold = Expr { String = "0x20"; }
            ECP_Offset = Expr { String = "0"; }
            TestSensitivity = evParametricTest {
                Number = Expr { String = "50001"; }
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Sensitivity_B_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "370"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestMargin = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Margin_B_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "410"; }
                evUnits = Expr { String = "'mV'"; }
            }
            TestLock = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_Lock_B_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestRxDpLock = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RxDpLock_B_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            TestDecodingErrors = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_DecodingErrors_B_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            TestRetryLoops = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_RetryLoops_B_6_0p1875_Vt0x20_ECP0_Char_VDDMIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "10"; }
            }
            TdiodeTempTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeTemp_VDDMIN'"; }
            }
            TmonTempTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonTemp_VDDMIN'"; }
            }
            TdiodeVTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TdiodeV_VDDMIN'"; }
            }
            TmonVTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TmonV_VDDMIN'"; }
            }
            TvssVTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_TvssV_VDDMIN'"; }
            }
            CfTest = evParametricTest {
                evFailBin = GmslLockErrorFailPhyB;
                evTestText = Expr { String = "'GMSL_RevLink_B_6_0p1875_HwCorrectionFactor_VDDMIN'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "500"; }
            }
            link_tries = evParametricTest {
            }
            FinalLockState = evParametricTest {
            }
            LoopLockState = evParametricTest {
            }
            RLMS_Values_SA = evParametricTest {
            }
        }
    }
}
ETest LockTimeTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.LocTimeTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_ser_lock = evParametricTest {
                Number = Expr { String = "1094901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LinkLock'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LockTimeTest = evParametricTest {
                Number = Expr { String = "1094902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LockTimeVmax'"; }
                evLowLimit = Expr { String = "TN171094902.Min"; }
                evHighLimit = Expr { String = "TN171094902.Max"; }
                evUnits = Expr { String = "'=mS'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.LocTimeTest";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            test_ser_lock = evParametricTest {
                Number = Expr { String = "1094201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LinkLock'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'Reg'"; }
            }
            LockTimeTest = evParametricTest {
                Number = Expr { String = "1094202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = LockTiming;
                evTestText = Expr { String = "'LockTimeVmin'"; }
                evLowLimit = Expr { String = "0mS"; }
                evHighLimit = Expr { String = "39.99999910593mS"; }
                evUnits = Expr { String = "'=mS'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
}
ETest MBistTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "strcmp(OpVar_TestTemp, 'HOT') = 0        OR  (OpVar_DEBUG_Master)  OR  (OpVar_DebugVDDcorners)  "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.MbistTest";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            MembistFuncTest = evParametricTest {
                Number = Expr { String = "1521200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_MIN'"; }
                evLowLimit = Expr { String = "32"; }
                evHighLimit = Expr { String = "32"; }
                evSimulateValue = Expr { String = "11"; }
            }
            LinkCheck = evParametricTest {
                Number = Expr { String = "1521299"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_LINK_CHECK_MIN'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            G17 = evParametricTest {
                Number = Expr { String = "1521201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP1_SEL7__32K_ROM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G21 = evParametricTest {
                Number = Expr { String = "1521202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL1__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G22 = evParametricTest {
                Number = Expr { String = "1521203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL2__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G23 = evParametricTest {
                Number = Expr { String = "1521204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL3__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G24 = evParametricTest {
                Number = Expr { String = "1521205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL4__HDCP2P2_CRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G25 = evParametricTest {
                Number = Expr { String = "1521206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL5__HDCP2P2_IRAM_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G26 = evParametricTest {
                Number = Expr { String = "1521207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL6__HDMI_EDID_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G30 = evParametricTest {
                Number = Expr { String = "1521208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL0__TBB[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G31 = evParametricTest {
                Number = Expr { String = "1521209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL1__TBB[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G32 = evParametricTest {
                Number = Expr { String = "1521210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL2__RBB[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G33 = evParametricTest {
                Number = Expr { String = "1521211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL3__RBB[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G34 = evParametricTest {
                Number = Expr { String = "1521212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL4__VIDEO_TX[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G35 = evParametricTest {
                Number = Expr { String = "1521213"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL5__VIDEO_TX[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G36 = evParametricTest {
                Number = Expr { String = "1521214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL6__AUDIO_RX_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G38 = evParametricTest {
                Number = Expr { String = "1521215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL8__arq_audio_x[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G39 = evParametricTest {
                Number = Expr { String = "1521216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL9__arq_audio_x[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G310 = evParametricTest {
                Number = Expr { String = "1521217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL10__arq_audio_x[2]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G311 = evParametricTest {
                Number = Expr { String = "1521218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL11__arq_audio_x[3]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G312 = evParametricTest {
                Number = Expr { String = "1521219"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL12__arq_audio_y[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G313 = evParametricTest {
                Number = Expr { String = "1521220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL13__arq_audio_y[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G314 = evParametricTest {
                Number = Expr { String = "1521221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL14__arq_audio_y[2]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G315 = evParametricTest {
                Number = Expr { String = "1521222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL15__arq_audio_y[3]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G40 = evParametricTest {
                Number = Expr { String = "1521223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL0__DUALVIEW[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G41 = evParametricTest {
                Number = Expr { String = "1521224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL1__DUALVIEW[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G42 = evParametricTest {
                Number = Expr { String = "1521225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL2__RGMII[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G43 = evParametricTest {
                Number = Expr { String = "1521226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL3__RGMII[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G44 = evParametricTest {
                Number = Expr { String = "1521227"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL4__RETENTION_RTTN[0]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G45 = evParametricTest {
                Number = Expr { String = "1521228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL5__RETENTION_RTTN[1]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G46 = evParametricTest {
                Number = Expr { String = "1521229"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL6__RETENTION_RTTN[2]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G47 = evParametricTest {
                Number = Expr { String = "1521230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL7__RETENTION_RTTN[3]_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G48 = evParametricTest {
                Number = Expr { String = "1521231"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL8__arq_gpio_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G410 = evParametricTest {
                Number = Expr { String = "1521232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL10__arq_spi_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            ERRBgoodTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'ERRB_PIN_STATE_FOR_GOOD_LINK_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LOCKgoodTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'LOCK_PIN_STATE_FOR_GOOD_LINK_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            ERRBbadTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'ERRB_PIN_STATE_FOR_BROKEN_LINK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            LOCKbadTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'LOCK_PIN_STATE_FOR_BROKEN_LINK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            I2C_UART = Expr { String = "'uart'"; }
            VDDCorner = Expr { String = "2"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(strcmp(OpVar_TestTemp, 'ROOM') = 0)  OR  (strcmp(OpVar_TestTemp, 'COLD') = 0)    OR  (OpVar_DEBUG_Master)  OR  (OpVar_DebugVDDcorners)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.MbistTest";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            MembistFuncTest = evParametricTest {
                Number = Expr { String = "1521900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_MAX'"; }
                evLowLimit = Expr { String = "32"; }
                evHighLimit = Expr { String = "32"; }
                evSimulateValue = Expr { String = "11"; }
            }
            LinkCheck = evParametricTest {
                Number = Expr { String = "1521999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_LINK_CHECK_MAX'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
            }
            G17 = evParametricTest {
                Number = Expr { String = "1521901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP1_SEL7__32K_ROM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G21 = evParametricTest {
                Number = Expr { String = "1521902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL1__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G22 = evParametricTest {
                Number = Expr { String = "1521903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL2__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G23 = evParametricTest {
                Number = Expr { String = "1521904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL3__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G24 = evParametricTest {
                Number = Expr { String = "1521905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL4__HDCP2P2_CRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G25 = evParametricTest {
                Number = Expr { String = "1521906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL5__HDCP2P2_IRAM_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G26 = evParametricTest {
                Number = Expr { String = "1521907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP2_SEL6__HDMI_EDID_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G30 = evParametricTest {
                Number = Expr { String = "1521908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL0__TBB[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G31 = evParametricTest {
                Number = Expr { String = "1521909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL1__TBB[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G32 = evParametricTest {
                Number = Expr { String = "1521910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL2__RBB[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G33 = evParametricTest {
                Number = Expr { String = "1521911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL3__RBB[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G34 = evParametricTest {
                Number = Expr { String = "1521912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL4__VIDEO_TX[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G35 = evParametricTest {
                Number = Expr { String = "1521913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL5__VIDEO_TX[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G36 = evParametricTest {
                Number = Expr { String = "1521914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL6__AUDIO_RX_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G38 = evParametricTest {
                Number = Expr { String = "1521915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL8__arq_audio_x[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G39 = evParametricTest {
                Number = Expr { String = "1521916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL9__arq_audio_x[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G310 = evParametricTest {
                Number = Expr { String = "1521917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL10__arq_audio_x[2]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G311 = evParametricTest {
                Number = Expr { String = "1521918"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL11__arq_audio_x[3]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G312 = evParametricTest {
                Number = Expr { String = "1521919"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL12__arq_audio_y[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G313 = evParametricTest {
                Number = Expr { String = "1521920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL13__arq_audio_y[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G314 = evParametricTest {
                Number = Expr { String = "1521921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL14__arq_audio_y[2]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G315 = evParametricTest {
                Number = Expr { String = "1521922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP3_SEL15__arq_audio_y[3]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G40 = evParametricTest {
                Number = Expr { String = "1521923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL0__DUALVIEW[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G41 = evParametricTest {
                Number = Expr { String = "1521924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL1__DUALVIEW[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G42 = evParametricTest {
                Number = Expr { String = "1521925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL2__RGMII[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G43 = evParametricTest {
                Number = Expr { String = "1521926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL3__RGMII[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G44 = evParametricTest {
                Number = Expr { String = "1521927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL4__RETENTION_RTTN[0]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G45 = evParametricTest {
                Number = Expr { String = "1521928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL5__RETENTION_RTTN[1]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G46 = evParametricTest {
                Number = Expr { String = "1521929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL6__RETENTION_RTTN[2]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G47 = evParametricTest {
                Number = Expr { String = "1521930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL7__RETENTION_RTTN[3]_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
                evSimulateValue = Expr { String = "1"; }
            }
            G48 = evParametricTest {
                Number = Expr { String = "1521931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL8__arq_gpio_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            G410 = evParametricTest {
                Number = Expr { String = "1521932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = MBistFail;
                evTestText = Expr { String = "'MBIST_GRP4_SEL10__arq_spi_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            ERRBgoodTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'ERRB_PIN_STATE_FOR_GOOD_LINK_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LOCKgoodTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'LOCK_PIN_STATE_FOR_GOOD_LINK_MAX'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            ERRBbadTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'ERRB_PIN_STATE_FOR_BROKEN_LINK_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            LOCKbadTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'LOCK_PIN_STATE_FOR_BROKEN_LINK_MAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            I2C_UART = Expr { String = "'uart'"; }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
        }
    }
}
ETest OTP_FLOW {
    Result = Expr { String = "#"; Mode = Output; }
    PortExpr[0] = Expr { String = "OpVar_IME_qual"; }
    PortExpr[1] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96751') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96751H') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96751R') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96741R') = 0 OR strcmp(OpVar_ProductUnderTest, 'MAX96751G') = 0"; }
    PortExpr[2] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96753') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96753H') = 0 OR  strcmp(OpVar_ProductUnderTest, 'MAX96753R') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96743R') = 0  OR strcmp(OpVar_ProductUnderTest, 'MAX96779') = 0"; }
    PortExpr[3] = Expr { String = "TRUE"; }
}
ETest OTP_TRIM_HDCP {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = OTP_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim)  AND  (   ((OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  AND (strcmp(OpVar_TestType, 'FT') = 0) )     OR    (OpVar_ForceTrim)    OR   (OpVar_IME_qual)   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.Program_HDCP_keys_burst";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            KEY_TYPE1 = Expr { String = "'SER_PTX01'"; }
            KEY_HDMI1X = Expr { String = "'DES_PRX01'"; }
            KEY_HDMI2X = Expr { String = "'DES_PRX02'"; }
            HDMI_1X_PGM = evParametricTest {
                Number = Expr { String = "5"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'PROGRAM_HDMI1x_successful'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI_2X_PGM = evParametricTest {
                Number = Expr { String = "10"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'PROGRAM_HDMI2x_successful'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            GMSL_1X_PGM = evParametricTest {
                Number = Expr { String = "15"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'PROGRAM_GMSL1x_successful'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI_1X_FAIL_LOC = evParametricTest {
                Number = Expr { String = "20"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI1_fail_location'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI_2X_FAIL_LOC = evParametricTest {
                Number = Expr { String = "25"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI2_fail_location'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            GMSL_1X_FAIL_LOC = evParametricTest {
                Number = Expr { String = "30"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL1_fail_location'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI1XLockBitFail = evParametricTest {
                Number = Expr { String = "35"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi1XLockBit'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI1XFailBitFail = evParametricTest {
                Number = Expr { String = "40"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi1XFailBit'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI1XReadVal_MSB = evParametricTest {
                Number = Expr { String = "45"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi1XBadReadbackValue_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMI1XReadVal_LSB = evParametricTest {
                Number = Expr { String = "50"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi1XBadReadbackValue_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMI1XExptVal_MSB = evParametricTest {
                Number = Expr { String = "55"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi1XExpectedValue_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMI1XExptVal_LSB = evParametricTest {
                Number = Expr { String = "60"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi1XExpectedValue_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMI2XLockBitFail = evParametricTest {
                Number = Expr { String = "65"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi2XLockBit'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI2XFailBitFail = evParametricTest {
                Number = Expr { String = "70"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi2XFailBit'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI2XReadVal_MSB = evParametricTest {
                Number = Expr { String = "75"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi2XBadReadbackValue_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMI2XReadVal_LSB = evParametricTest {
                Number = Expr { String = "80"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi2XBadReadbackValue_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMI2XExptVal_MSB = evParametricTest {
                Number = Expr { String = "85"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi2XExpectedValue_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HDMI2XExptVal_LSB = evParametricTest {
                Number = Expr { String = "90"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Hdmi2XExpectedValue_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSL1XLockBitFail = evParametricTest {
                Number = Expr { String = "95"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Gmsl1XLockBit'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            GMSL1XFailBitFail = evParametricTest {
                Number = Expr { String = "100"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Gmsl1XFailBit'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            GMSL1XReadVal_MSB = evParametricTest {
                Number = Expr { String = "105"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Gmsl1XBadReadbackValue_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSL1XReadVal_LSB = evParametricTest {
                Number = Expr { String = "110"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Gmsl1XBadReadbackValue_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSL1XExptVal_MSB = evParametricTest {
                Number = Expr { String = "115"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Gmsl1XExpectedValue_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSL1XExptVal_LSB = evParametricTest {
                Number = Expr { String = "120"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Gmsl1XExpectedValue_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "125"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK'"; }
                evLowLimit = Expr { String = "REG_OTP8.Min"; }
                evHighLimit = Expr { String = "REG_OTP8.Max"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "130"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK'"; }
                evLowLimit = Expr { String = "REG_OTP8.Min"; }
                evHighLimit = Expr { String = "REG_OTP8.Max"; }
            }
            REG_13_15 = evParametricTest {
                Number = Expr { String = "135"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Reg13_15'"; }
                evLowLimit = Expr { String = "REG13_15F.Min"; }
                evHighLimit = Expr { String = "REG13_15F.Max"; }
            }
            REG15val = evParametricTest {
                Number = Expr { String = "140"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Reg_15'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            key_time_ft = evParametricTest {
                Number = Expr { String = "145"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'key_time_GMSL'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'=S'"; }
            }
            key_time_ft_hdmi1x = evParametricTest {
                Number = Expr { String = "150"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'key_time_HDMI1X'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'=S'"; }
            }
            key_time_ft_hdmi2x = evParametricTest {
                Number = Expr { String = "155"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'key_time_HDMI2X'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "5"; }
                evUnits = Expr { String = "'=S'"; }
            }
            server_code = evParametricTest {
                Number = Expr { String = "160"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Servercode_GMSL'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            server_code1 = evParametricTest {
                Number = Expr { String = "165"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Servercode_HDMI1X'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            server_code2 = evParametricTest {
                Number = Expr { String = "170"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Servercode_HDMI2X'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI_LOC_511 = evParametricTest {
                Number = Expr { String = "175"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_location_511_correct'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            SERIAL_NUMBER = evParametricTest {
                Number = Expr { String = "180"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Serial#'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            SITETRIM = evParametricTest {
                Number = Expr { String = "185"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'trimsite'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0x10"; }
            }
            TIMETRIM = evParametricTest {
                Number = Expr { String = "190"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Timetrim'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFFF"; }
            }
            GMSLReadFailCorner = evParametricTest {
                Number = Expr { String = "195"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_Readback_failure_corner'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "1"; }
            }
            HDMIReadFailCorner = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_Readback_failure_corner'"; }
                evLowLimit = Expr { String = "-1"; }
                evHighLimit = Expr { String = "1"; }
            }
            BadFlow = evParametricTest {
                Number = Expr { String = "205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'INCOMING_OTP_KEYSPACE_ALREADY_WRITTEN_BUT_DEVICE_NOT_LOCKED'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.Check_OTP_TrimFields";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            OTP_LOCK = evParametricTest {
                Number = Expr { String = "300"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_LOCK_SCREN_STATE_TYP'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "3"; }
            }
            SERIAL_NUMBER = evParametricTest {
                Number = Expr { String = "305"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'SERIAL_NUMBER_WHEN_OTP_WRITTEN_TYP'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            SITETRIM = evParametricTest {
                Number = Expr { String = "310"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'SITE_WHEN_OTP_TRIMMED_TYP'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TIMETRIM = evParametricTest {
                Number = Expr { String = "315"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'TIME_HHMMSS_WHEN_OTP_WRITTEN_TYP'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            DATETRIM = evParametricTest {
                Number = Expr { String = "320"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DATE_YYYYMMDD_WHEN_OTP_WRITTEN_TYP'"; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
        }
    }
}
ETest POR {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Por1V";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            VDDDPins = Expr { String = "DUT_VDDD"; }
            VDDAPins = Expr { String = "DUT_VDDA"; }
            TestVltg = Expr { String = "900mV"; }
            PorOffVoltage = Expr { String = "0.7V"; }
            Por1VOnTest = evParametricTest {
                Number = Expr { String = "1538201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_1V_VDD_MIN'"; }
                evLowLimit = Expr { String = "100mV"; }
                evHighLimit = Expr { String = "TN481538201.Max"; }
            }
            Por1VOffTest = evParametricTest {
                Number = Expr { String = "1538202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_1V_VDD_MIN'"; }
                evLowLimit = Expr { String = "100mV"; }
                evHighLimit = Expr { String = "TN481538201.Max"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Por1V";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            VDDDPins = Expr { String = "DUT_VDDD"; }
            VDDAPins = Expr { String = "DUT_VDDA"; }
            TestVltg = Expr { String = "900mV"; }
            PorOffVoltage = Expr { String = "0.7V"; }
            Por1VOnTest = evParametricTest {
                Number = Expr { String = "1538901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_1V_VDD_MAX'"; }
                evLowLimit = Expr { String = "800mV"; }
                evHighLimit = Expr { String = "1.2V"; }
            }
            Por1VOffTest = evParametricTest {
                Number = Expr { String = "1538902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_1V_VDD_MAX'"; }
                evLowLimit = Expr { String = "700mV"; }
                evHighLimit = Expr { String = "1.2V"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PorVDD18";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestPins = Expr { String = "DUT_VDD18"; }
            TestVltg = Expr { String = "1.67V"; }
            PorOnTest = evParametricTest {
                Number = Expr { String = "1538203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_VDD18_MIN'"; }
                evLowLimit = Expr { String = "0.1V"; }
                evHighLimit = Expr { String = "TN481538203.Max"; }
            }
            PorOffTest = evParametricTest {
                Number = Expr { String = "1538204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_VDD18_MIN'"; }
                evLowLimit = Expr { String = "0.1V"; }
                evHighLimit = Expr { String = "TN481538203.Max"; }
            }
            SrchPass = Expr { String = "VDD18.Min-30mV"; }
            SrchFail = Expr { String = "1.2V"; }
            CurLim = Expr { String = "120.0mA"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PorVDD18";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "DUT_VDD18"; }
            TestVltg = Expr { String = "1.67V"; }
            PorOnTest = evParametricTest {
                Number = Expr { String = "1538903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_VDD18_MAX'"; }
                evLowLimit = Expr { String = "1V"; }
                evHighLimit = Expr { String = "2V"; }
            }
            PorOffTest = evParametricTest {
                Number = Expr { String = "1538904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_VDD18_MAX'"; }
                evLowLimit = Expr { String = "1V"; }
                evHighLimit = Expr { String = "2V"; }
            }
            SrchPass = Expr { String = "VDD18.Min - 30mV"; }
            SrchFail = Expr { String = "1.2V"; }
            CurLim = Expr { String = "120.0mA"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PorVDDIO";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestPins = Expr { String = "DUT_VDDIO"; }
            TestVltg = Expr { String = "1.67V"; }
            PorOnTest = evParametricTest {
                Number = Expr { String = "1538205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_VDDIO_MIN'"; }
                evLowLimit = Expr { String = "0.1V"; }
                evHighLimit = Expr { String = "TN481538205.Max"; }
            }
            PorOffTest = evParametricTest {
                Number = Expr { String = "1538206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_VDDIO_MIN'"; }
                evLowLimit = Expr { String = "0.1V"; }
                evHighLimit = Expr { String = "TN481538206.Max"; }
            }
            SrchPass = Expr { String = "1.7V"; }
            SrchFail = Expr { String = "0.975V"; }
            CurLim = Expr { String = "0A"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PorVDDIO";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "DUT_VDDIO"; }
            TestVltg = Expr { String = "1.67V"; }
            PorOnTest = evParametricTest {
                Number = Expr { String = "1538905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_VDDIO_MAX'"; }
                evLowLimit = Expr { String = "0.1V"; }
                evHighLimit = Expr { String = "TN481538905.Max"; }
            }
            PorOffTest = evParametricTest {
                Number = Expr { String = "1538906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_VDDIO_MAX'"; }
                evLowLimit = Expr { String = "0.1V"; }
                evHighLimit = Expr { String = "TN481538206.Max"; }
            }
            SrchPass = Expr { String = "1.7V"; }
            SrchFail = Expr { String = "0.975V"; }
            CurLim = Expr { String = "0A"; }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PorGeneric";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TestPins = Expr { String = "DUT_VDD18"; }
            TestVltg = Expr { String = "1.6V"; }
            PorOnTest = evParametricTest {
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_VDD18_MIN'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "2V"; }
            }
            PorOffTest = evParametricTest {
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_VDD18_MIN'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "2V"; }
            }
            SrchPass = Expr { String = "VDD18.Min-30mV"; }
            SrchFail = Expr { String = "1.2V"; }
            CurLim = Expr { String = "120.0mA"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.PorGeneric";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TestPins = Expr { String = "DUT_VDD18"; }
            TestVltg = Expr { String = "900mV"; }
            PorOnTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_ON_VDD18_MAX'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "2V"; }
            }
            PorOffTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = POR_fail;
                evTestText = Expr { String = "'POR_OFF_VDD18_MAX'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "2V"; }
            }
            SrchPass = Expr { String = "VDD18.Min - 30mV"; }
            SrchFail = Expr { String = "1.2V"; }
            CurLim = Expr { String = "120.0mA"; }
        }
    }
}
ETest PrbsIDD {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "zz_OBSOLETE_procedures_etc.mod.zz_OBSOLETE_PrbsIDD";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestIDDD = evParametricTest {
                Number = Expr { String = "1541201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD_MIN'"; }
                evLowLimit = Expr { String = "50mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDA = evParametricTest {
                Number = Expr { String = "1541202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDDA_MIN'"; }
                evLowLimit = Expr { String = "2mA"; }
                evHighLimit = Expr { String = "10mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDD18 = evParametricTest {
                Number = Expr { String = "1541203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD18_MIN'"; }
                evLowLimit = Expr { String = "150mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDIO = evParametricTest {
                Number = Expr { String = "1541204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDDIO_MIN'"; }
                evLowLimit = Expr { String = "-2mA"; }
                evHighLimit = Expr { String = "15mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDIO25 = evParametricTest {
                Number = Expr { String = "1541205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPRBSFail;
                evLowLimit = Expr { String = "20mA"; }
                evHighLimit = Expr { String = "40mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDD33 = evParametricTest {
                Number = Expr { String = "1541206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD33_MIN'"; }
                evLowLimit = Expr { String = "-10uA"; }
                evHighLimit = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "zz_OBSOLETE_procedures_etc.mod.zz_OBSOLETE_PrbsIDD";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "1.8V"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestIDDD = evParametricTest {
                Number = Expr { String = "1541501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD_TYP'"; }
                evLowLimit = Expr { String = "50mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDA = evParametricTest {
                Number = Expr { String = "1541502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDDA_TYP'"; }
                evLowLimit = Expr { String = "2mA"; }
                evHighLimit = Expr { String = "10mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDD18 = evParametricTest {
                Number = Expr { String = "1541503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD18_TYP'"; }
                evLowLimit = Expr { String = "150mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDIO = evParametricTest {
                Number = Expr { String = "1541504"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDDIO_TYP'"; }
                evLowLimit = Expr { String = "-2mA"; }
                evHighLimit = Expr { String = "15mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDIO25 = evParametricTest {
                Number = Expr { String = "1541505"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPRBSFail;
                evLowLimit = Expr { String = "20mA"; }
                evHighLimit = Expr { String = "40mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDD33 = evParametricTest {
                Number = Expr { String = "1541506"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD33_TYP'"; }
                evLowLimit = Expr { String = "-10uA"; }
                evHighLimit = Expr { String = "25uA"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
    evBlock[2] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "zz_OBSOLETE_procedures_etc.mod.zz_OBSOLETE_PrbsIDD";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            LossyPath = Expr { String = "FALSE"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            TestIDDD = evParametricTest {
                Number = Expr { String = "1541901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDD"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD_MAX'"; }
                evLowLimit = Expr { String = "TN461541901.Min"; }
                evHighLimit = Expr { String = "TN461541901.Max+150mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDA = evParametricTest {
                Number = Expr { String = "1541902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDA"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDDA_MAX'"; }
                evLowLimit = Expr { String = "TN461541902.Min-2.4mA"; }
                evHighLimit = Expr { String = "TN461541902.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            TestIDD18 = evParametricTest {
                Number = Expr { String = "1541903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD18"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD18_MAX'"; }
                evLowLimit = Expr { String = "TN461541903.Min-20mA"; }
                evHighLimit = Expr { String = "TN461541903.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDIO = evParametricTest {
                Number = Expr { String = "1541904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDDIO_MAX'"; }
                evLowLimit = Expr { String = "TN461541904.Min"; }
                evHighLimit = Expr { String = "TN461541904.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDDIO25 = evParametricTest {
                Number = Expr { String = "1541905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDDIO25"; }
                evFailBin = IddPRBSFail;
                evUnits = Expr { String = "'mA'"; }
            }
            TestIDD33 = evParametricTest {
                Number = Expr { String = "1541906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_VDD33"; }
                evFailBin = IddPRBSFail;
                evTestText = Expr { String = "'DYNAMIC_IDD_PRBS_VDD33_MAX'"; }
                evLowLimit = Expr { String = "TN461541906.Min"; }
                evHighLimit = Expr { String = "TN461541906.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
        }
    }
}
ETest Rx_Tx_Rise_Fall {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Rise_Fall_Rx_Tx";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            TX_RiseTest = evParametricTest {
                Number = Expr { String = "1097901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_RiseTime_MAX'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            TX_FallTest = evParametricTest {
                Number = Expr { String = "1098901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_FallTime_MAX'"; }
                evLowLimit = Expr { String = "TN27098901.Min"; }
                evHighLimit = Expr { String = "TN27098901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_RiseTest = evParametricTest {
                Number = Expr { String = "1097902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_RiseTime_MAX'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_FallTest = evParametricTest {
                Number = Expr { String = "1098902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_FallTime_MAX'"; }
                evLowLimit = Expr { String = "TN27098901.Min"; }
                evHighLimit = Expr { String = "TN27098901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            PowerUp = Expr { String = "TRUE"; }
            PowerDown = Expr { String = "False"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.Rise_Fall_Rx_Tx";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            TX_RiseTest = evParametricTest {
                Number = Expr { String = "1097201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_RiseTime_MIN'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            TX_FallTest = evParametricTest {
                Number = Expr { String = "1098201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SCL_TX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'TX_FallTime_MIN'"; }
                evLowLimit = Expr { String = "TN27098201.Min"; }
                evHighLimit = Expr { String = "TN27098201.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_RiseTest = evParametricTest {
                Number = Expr { String = "1097202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_RiseTime_MIN'"; }
                evLowLimit = Expr { String = "TN27097901.Min"; }
                evHighLimit = Expr { String = "TN27097901.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            RX_FallTest = evParametricTest {
                Number = Expr { String = "1098202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evPins = Expr { String = "DUT_SDA_RX"; }
                evFailBin = TxRxRiseFallFail;
                evTestText = Expr { String = "'RX_FallTime_MIN'"; }
                evLowLimit = Expr { String = "TN27098201.Min"; }
                evHighLimit = Expr { String = "TN27098201.Max"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            PowerUp = Expr { String = "False"; }
            PowerDown = Expr { String = "TRUE"; }
        }
    }
}
ETest Screen_Temp {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'i2c'"; }
            GrossFuncTest = evParametricTest {
            }
            DeviceIDTest = evParametricTest {
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(strcmp(OpVar_TestTemp, 'COLD') = 0) OR (strcmp(OpVar_TestTemp, 'ROOM') = 0)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMIColdPLLScreen";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "999.9"; }
            VDDCorner = Expr { String = "99"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
            PLLlockTest = evParametricTest {
                Number = Expr { String = "701"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_PLL_COLD_SCREEN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Vdd33CornerTest = evParametricTest {
                Number = Expr { String = "702"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_PLL_COLD_SCREEN_VDD33'"; }
                evLowLimit = Expr { String = "3.599"; }
                evHighLimit = Expr { String = "3.901"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
}
ETest SerDesI2C {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_1M_MIN'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master  OR OpVar_DebugVDDcorners"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1000KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_1M_MAX'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_400K_MAX'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_100K_MAX'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_100K_MIN'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_I2C_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1509210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_400K_MIN'"; }
                evLowLimit = Expr { String = "100KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1509211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1509212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_I2C_W_R_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1514210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1514211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_I2C_W_R_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
}
ETest SerDesI2C_PT {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1101201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_1M_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master  OR OpVar_DebugVDDcorners"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1101901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_1M_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1100901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_400KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1099901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_100KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1099201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_100KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_I2C_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1100201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'I2C_speed_400KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1514204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1509204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1514205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1509205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1514206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1509206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_I2C_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
}
ETest SerDesMainUart {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_1M_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_reset_value_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_reset_value_across_SL_1M_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master  OR OpVar_DebugVDDcorners"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'UART_speed_1M_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_reset_value_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_reset_value_across_SL_1M_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_400K_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_reset_value_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_reset_value_across_SL_400K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_100K_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_reset_value_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_reset_value_across_SL_100K_MAX'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_100K_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510217"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_reset_value_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_reset_value_across_SL_100K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1510210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_400K_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            test_ser_read_reg1 = evParametricTest {
                Number = Expr { String = "1510211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_ser_read_reg2 = evParametricTest {
                Number = Expr { String = "1510212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SER_DES_UART_write_reset_value_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg1 = evParametricTest {
                Number = Expr { String = "1515210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#7F"; }
                evHighLimit = Expr { String = "16#7F"; }
                evUnits = Expr { String = "'REG'"; }
            }
            test_des_read_reg2 = evParametricTest {
                Number = Expr { String = "1515211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DES_SER_UART_write_reset_value_across_SL_400K_MIN'"; }
                evLowLimit = Expr { String = "16#00"; }
                evHighLimit = Expr { String = "16#00"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
}
ETest SerDesUart_PT {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_1M_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_1M_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "TRUE"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master  OR OpVar_DebugVDDcorners"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_1M_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_1M_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "true"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_400KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_100KHz_MAX'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_100KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MAX'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "100KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_100KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_100KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SER_DESA_Reg_UART_PT_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "400KHz"; }
            test_Freq = evParametricTest {
                Number = Expr { String = "1096202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'Uart_speed_400KHz_MIN'"; }
                evLowLimit = Expr { String = "1KHz"; }
                evHighLimit = Expr { String = "2.01MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            DesPT = evParametricTest {
                Number = Expr { String = "1515204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesMData_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "85"; }
                evHighLimit = Expr { String = "85"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT = evParametricTest {
                Number = Expr { String = "1510204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerMData_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "170"; }
                evHighLimit = Expr { String = "170"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT1 = evParametricTest {
                Number = Expr { String = "1515205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt1Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT1 = evParametricTest {
                Number = Expr { String = "1510205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt1Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            DesPT2 = evParametricTest {
                Number = Expr { String = "1515206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'DesPt2Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e1"; }
                evHighLimit = Expr { String = "16#e1"; }
                evUnits = Expr { String = "'REG'"; }
            }
            SerPT2 = evParametricTest {
                Number = Expr { String = "1510206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = UartI2CFail;
                evTestText = Expr { String = "'SerPt2Data_Uart_400KHz_MIN'"; }
                evLowLimit = Expr { String = "16#e9"; }
                evHighLimit = Expr { String = "16#e9"; }
                evUnits = Expr { String = "'REG'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
        }
    }
}
ETest SPEED_GRADE_FLOW {
    Result = Expr { String = "#"; Mode = Output; }
    PortExpr[0] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96741R') = 0"; }
    PortExpr[1] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96743R') = 0"; }
    PortExpr[2] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96751') = 0"; }
    PortExpr[3] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0"; }
    PortExpr[4] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96751H') = 0"; }
    PortExpr[5] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96753') = 0"; }
    PortExpr[6] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0"; }
    PortExpr[7] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96753H') = 0"; }
    PortExpr[8] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96777') = 0"; }
    PortExpr[9] = Expr { String = "strcmp(OpVar_ProductUnderTest, 'MAX96779') = 0"; }
    PortExpr[10] = Expr { String = "OpVar_IME_qual"; }
    PortExpr[11] = Expr { String = "TRUE"; }
}
ETest SpiControlChannel {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.SpiTiming";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            ConfigNeeded = Expr { String = "TRUE"; }
            SpiFreq = Expr { String = "50MHz"; }
            SpiFreqTest = evParametricTest {
                Number = Expr { String = "1665201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_FREQ_MIN'"; }
                evLowLimit = Expr { String = "50MHz"; }
                evHighLimit = Expr { String = "50MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            TSetupTest = evParametricTest {
                Number = Expr { String = "1670201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIS_MIN'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "5ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            THoldTest = evParametricTest {
                Number = Expr { String = "1671201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIH_MIN'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "3ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkHighTest = evParametricTest {
                Number = Expr { String = "1667201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCH_MIN'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkLowTest = evParametricTest {
                Number = Expr { String = "1667202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCL_MIN'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.SpiTiming";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            ConfigNeeded = Expr { String = "FALSE"; }
            SpiFreq = Expr { String = "50MHz"; }
            SpiFreqTest = evParametricTest {
                Number = Expr { String = "1665901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_FREQ_MAX'"; }
                evLowLimit = Expr { String = "49MHz"; }
                evHighLimit = Expr { String = "51MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            TSetupTest = evParametricTest {
                Number = Expr { String = "1670901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIS_MAX'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "5ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            THoldTest = evParametricTest {
                Number = Expr { String = "1671901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMIH_MAX'"; }
                evLowLimit = Expr { String = "-10ns"; }
                evHighLimit = Expr { String = "3ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkHighTest = evParametricTest {
                Number = Expr { String = "1667901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCH_MAX'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
            TSclkLowTest = evParametricTest {
                Number = Expr { String = "1667902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPITiming;
                evTestText = Expr { String = "'SPI_TIMING_TMCL_MAX'"; }
                evLowLimit = Expr { String = "10ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'ns'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "FALSE"; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
    }
}
ETest SPI_PT {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_PT";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            ss1_1m_ser = evParametricTest {
                Number = Expr { String = "1517901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_1M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_1m_ser = evParametricTest {
                Number = Expr { String = "1517902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_1M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_10m_ser = evParametricTest {
                Number = Expr { String = "1517903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_10M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#a4a3a2"; }
                evHighLimit = Expr { String = "16#a4a3a2"; }
            }
            ss2_10m_ser = evParametricTest {
                Number = Expr { String = "1517904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_10M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_ser = evParametricTest {
                Number = Expr { String = "1517905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_25M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_25m_ser = evParametricTest {
                Number = Expr { String = "1517906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_25M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_50m_ser = evParametricTest {
                Number = Expr { String = "1517907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_50M_3byte_Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss2_50m_ser = evParametricTest {
                Number = Expr { String = "1517908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_50M_3byte_Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss1_1m_des = evParametricTest {
                Number = Expr { String = "1512901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_1M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#585756"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_1m_des = evParametricTest {
                Number = Expr { String = "1512902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_1M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#B4A954"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            ss1_10m_des = evParametricTest {
                Number = Expr { String = "1512903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_10M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#AB5BA6"; }
                evHighLimit = Expr { String = "16#AB5BA6"; }
            }
            ss2_10m_des = evParametricTest {
                Number = Expr { String = "1512904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_10M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_des = evParametricTest {
                Number = Expr { String = "1512905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_25M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#262524"; }
                evHighLimit = Expr { String = "16#262524"; }
            }
            ss2_25m_des = evParametricTest {
                Number = Expr { String = "1512906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_25M_3byte_Vmax'"; }
                evLowLimit = Expr { String = "16#A3A2A1"; }
                evHighLimit = Expr { String = "16#A3A2A1"; }
            }
            ss1_50m_des = evParametricTest {
                Number = Expr { String = "1512907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_50M_3byte_Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_50m_des = evParametricTest {
                Number = Expr { String = "1512908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_50M_3byte_Vmax_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
            needtoZeroSPIpins = Expr { String = "TRUE"; }
            needtoToggleSPIrelays = Expr { String = "FALSE"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_PT";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min + 0.05V - 0.05V"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            ss1_1m_ser = evParametricTest {
                Number = Expr { String = "1517201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_1M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_1m_ser = evParametricTest {
                Number = Expr { String = "1517202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_1M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_10m_ser = evParametricTest {
                Number = Expr { String = "1517203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_10M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#a4a3a2"; }
                evHighLimit = Expr { String = "16#a4a3a2"; }
            }
            ss2_10m_ser = evParametricTest {
                Number = Expr { String = "1517204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_10M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_ser = evParametricTest {
                Number = Expr { String = "1517205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_25M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#191817"; }
                evHighLimit = Expr { String = "16#191817"; }
            }
            ss2_25m_ser = evParametricTest {
                Number = Expr { String = "1517206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_25M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#252423"; }
                evHighLimit = Expr { String = "16#252423"; }
            }
            ss1_50m_ser = evParametricTest {
                Number = Expr { String = "1517207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS1_50M_3byte_Vmin_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss2_50m_ser = evParametricTest {
                Number = Expr { String = "1517208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_SER_Master_SS2_50M_3byte_Vmin_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            ss1_1m_des = evParametricTest {
                Number = Expr { String = "1512201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_1M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#585756"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_1m_des = evParametricTest {
                Number = Expr { String = "1512202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_1M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#B4A954"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            ss1_10m_des = evParametricTest {
                Number = Expr { String = "1512203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_10M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#AB5BA6"; }
                evHighLimit = Expr { String = "16#AB5BA6"; }
            }
            ss2_10m_des = evParametricTest {
                Number = Expr { String = "1512204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_10M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#565554"; }
                evHighLimit = Expr { String = "16#565554"; }
            }
            ss1_25m_des = evParametricTest {
                Number = Expr { String = "1512205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_25M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#262524"; }
                evHighLimit = Expr { String = "16#262524"; }
            }
            ss2_25m_des = evParametricTest {
                Number = Expr { String = "1512206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_25M_3byte_Vmin'"; }
                evLowLimit = Expr { String = "16#A3A2A1"; }
                evHighLimit = Expr { String = "16#A3A2A1"; }
            }
            ss1_50m_des = evParametricTest {
                Number = Expr { String = "1512207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS1_50M_3byte_Vmin_NotTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#585756"; }
            }
            ss2_50m_des = evParametricTest {
                Number = Expr { String = "1512208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SPIFunctional;
                evTestText = Expr { String = "'SPI_PT_DES_Master_SS2_50M_3byte_Vmin_NoTestYet'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "16#B4A954"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "true"; }
            needtoZeroSPIpins = Expr { String = "FALSE"; }
            needtoToggleSPIrelays = Expr { String = "TRUE"; }
        }
    }
}
ETest SPI_TIMING {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_Func";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            SPI_FREQ = Expr { String = "50MHz"; }
            test_SPI_FREQ = evParametricTest {
                Number = Expr { String = "1665201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPI_speed_Vmin'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "60MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            TSETUP = evParametricTest {
                Number = Expr { String = "1670201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPISetUpTime_Vmin'"; }
                evLowLimit = Expr { String = "-1nS"; }
                evHighLimit = Expr { String = "2nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            THOLD = evParametricTest {
                Number = Expr { String = "1671201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPIHoldTime_Vmin'"; }
                evLowLimit = Expr { String = "-1ns"; }
                evHighLimit = Expr { String = "5nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseHi = evParametricTest {
                Number = Expr { String = "1667201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMax_Vmin'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseLo = evParametricTest {
                Number = Expr { String = "1667202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMin_Vmin'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            CreateLink = Expr { String = "TRUE"; }
            Powerdown = Expr { String = "FALSE"; }
            needtoZeroSPIpins = Expr { String = "TRUE"; }
        }
    }
    evBlock[1] = {
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "UART_I2C_SPI.mod.SPI_Timing_Func";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "0.0V"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            Freq = Expr { String = "1MHz"; }
            SPI_FREQ = Expr { String = "50MHz"; }
            test_SPI_FREQ = evParametricTest {
                Number = Expr { String = "1665901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPI_speed_Vmax'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "60MHz"; }
                evUnits = Expr { String = "'=MHz'"; }
            }
            TSETUP = evParametricTest {
                Number = Expr { String = "1670901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPISetUpTime_Vmax'"; }
                evLowLimit = Expr { String = "-1nS"; }
                evHighLimit = Expr { String = "2nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            THOLD = evParametricTest {
                Number = Expr { String = "1671901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SPIHoldTime_Vmax'"; }
                evLowLimit = Expr { String = "-1ns"; }
                evHighLimit = Expr { String = "5nS"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseHi = evParametricTest {
                Number = Expr { String = "1667901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMax_Vmax'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            SCLKPulseLo = evParametricTest {
                Number = Expr { String = "1667902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = SpiTimingFail;
                evTestText = Expr { String = "'SCLKHiPulseMin_Vmax'"; }
                evLowLimit = Expr { String = "0ns"; }
                evHighLimit = Expr { String = "20ns"; }
                evUnits = Expr { String = "'=ns'"; }
            }
            CreateLink = Expr { String = "FALSE"; }
            Powerdown = Expr { String = "FALSE"; }
            needtoZeroSPIpins = Expr { String = "FALSE"; }
        }
    }
}
ETest TempCheckPreTrim {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'i2c'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evLowLimit = Expr { }
                evHighLimit = Expr { }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
}
ETest TempCheckPreVideo {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "OpVar_DEBUG_Master  OR  OpVar_Debug_TempChecks"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
            }
            DeviceIDTest = evParametricTest {
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "2"; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "3"; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "4"; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
}
ETest TempDecider {
    Result = Expr { String = "#"; Mode = Output; }
    PortExpr[0] = Expr { String = "strcmp(OpVar_TestTemp, 'COLD') = 0"; }
    PortExpr[1] = Expr { String = "strcmp(OpVar_TestTemp, 'ROOM') = 0"; }
    PortExpr[2] = Expr { String = "strcmp(OpVar_TestTemp, 'HOT') = 0"; }
    PortExpr[3] = Expr { String = "TRUE"; }
}
ETest TemperatureTest {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'i2c'"; }
            IncludeFunc = Expr { String = "TRUE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'GROSS_FUNCTIONAL_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GrossFunctional;
                evTestText = Expr { String = "'DEVICE_ID_CHECK_VDDMAX'"; }
                evLowLimit = Expr { String = "0x83"; }
                evHighLimit = Expr { String = "0x89"; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10C"; }
                evHighLimit = Expr { String = "TN151543902.Max+10C"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
                Number = Expr { String = "1543904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TDiodeVltgFail;
                evTestText = Expr { String = "'TDiode Voltage Check'"; }
                evLowLimit = Expr { String = "TN151543900.Min-100mV"; }
                evHighLimit = Expr { String = "TN151543900.Max+100mV"; }
                evUnits = Expr { String = "'V'"; }
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "TRUE"; }
            SleepWait = Expr { String = "25"; }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMIColdPLLScreen";
            Vdd = Expr { String = "VDDC.Min"; }
            Vdda = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "999.9"; }
            VDDCorner = Expr { String = "99"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
            PLLlockTest = evParametricTest {
                Number = Expr { String = "701"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HdmiPLL;
                evTestText = Expr { String = "'HDMI_PLL_COLD_SCREEN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Vdd33CornerTest = evParametricTest {
                Number = Expr { String = "702"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HdmiPLL;
                evTestText = Expr { String = "'HDMI_PLL_COLD_SCREEN_VDD33_CORNER'"; }
                evLowLimit = Expr { String = "3.599"; }
                evHighLimit = Expr { String = "3.901"; }
                evUnits = Expr { String = "'V'"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR (OpVar_Debug_TempChecks) "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Typ"; }
            Vdda = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1543500"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_VDDNOM'"; }
                evLowLimit = Expr { String = "1V"; }
                evHighLimit = Expr { String = "2V"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "1543501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_VDDNOM'"; }
                evLowLimit = Expr { String = "0V"; }
                evHighLimit = Expr { String = "2V"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "1543502"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_VDDNOM'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "1543503"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_VDDNOM'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
        }
    }
}
ETest TrimDeviceBytes_MAX96741R {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x2600"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x26"; }
                evHighLimit = Expr { String = "0x26"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x26"; }
                evHighLimit = Expr { String = "0x26"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "256"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x2600"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x26"; }
                evHighLimit = Expr { String = "0x26"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x26"; }
                evHighLimit = Expr { String = "0x26"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_DONE'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96743R {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x2700"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x27"; }
                evHighLimit = Expr { String = "0x27"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x27"; }
                evHighLimit = Expr { String = "0x27"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x2700"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x27"; }
                evHighLimit = Expr { String = "0x27"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x27"; }
                evHighLimit = Expr { String = "0x27"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_DONE'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "OpVar_HDCP  AND NOT(OpVar_IME_qual)"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.CheckKSVBytes";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            uart_i2c = Expr { String = "'i2c'"; }
            TestKSVonesHDMI = evParametricTest {
                Number = Expr { String = "21"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
            TestKSVonesGMSL_A = evParametricTest {
                Number = Expr { String = "22"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96751 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x0000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x0000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96751F {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x2000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x2000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96751G {
    FinderFilter = "";
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x2000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x2000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x20"; }
                evHighLimit = Expr { String = "0x20"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96751H {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x3000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x30"; }
                evHighLimit = Expr { String = "0x30"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x30"; }
                evHighLimit = Expr { String = "0x30"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x3000"; }
            OTP_Byte = Expr { String = "0x00"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x30"; }
                evHighLimit = Expr { String = "0x30"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x30"; }
                evHighLimit = Expr { String = "0x30"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD_OR_MMDD_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD_OR_YYYY_(blind_build)'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID_222_means_not_sorted_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_123_OR_HHMMSS_(blind_bld)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_456_OR_SN_(blind_build)'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHAR_789'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_MAX96751F_HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96753 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x0100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "1.9V"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x0100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_DONE'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP  AND NOT(OpVar_IME_qual)"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.CheckKSVBytes";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            uart_i2c = Expr { String = "'i2c'"; }
            TestKSVonesHDMI = evParametricTest {
                Number = Expr { String = "21"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
            TestKSVonesGMSL_A = evParametricTest {
                Number = Expr { String = "22"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96753F {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x2100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x21"; }
                evHighLimit = Expr { String = "0x21"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x21"; }
                evHighLimit = Expr { String = "0x21"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "1.9V"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x2100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x21"; }
                evHighLimit = Expr { String = "0x21"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x21"; }
                evHighLimit = Expr { String = "0x21"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_DONE'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP  AND NOT(OpVar_IME_qual)"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.CheckKSVBytes";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            uart_i2c = Expr { String = "'i2c'"; }
            TestKSVonesHDMI = evParametricTest {
                Number = Expr { String = "21"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
            TestKSVonesGMSL_A = evParametricTest {
                Number = Expr { String = "22"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96753H {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x3100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x31"; }
                evHighLimit = Expr { String = "0x31"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x31"; }
                evHighLimit = Expr { String = "0x31"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "1.9V"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x3100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x31"; }
                evHighLimit = Expr { String = "0x31"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x31"; }
                evHighLimit = Expr { String = "0x31"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_DONE'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP  AND NOT(OpVar_IME_qual)"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.CheckKSVBytes";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            uart_i2c = Expr { String = "'i2c'"; }
            TestKSVonesHDMI = evParametricTest {
                Number = Expr { String = "21"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
            TestKSVonesGMSL_A = evParametricTest {
                Number = Expr { String = "22"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
        }
    }
}
ETest TrimDeviceBytes_MAX96779 {
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR OpVar_PreventTrim OR NOT TestProgData.evFastBinning "; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "(NOT OpVar_PreventTrim) AND (    (OpVar_ForceTrim ) OR (  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  )   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "1.9V"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "TRUE"; }
            Device_Bytes = Expr { String = "0x0100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_SUCCESSFUL'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_READBACK_CRC_MATCHES_DATA'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "(OpVar_PreventTrim) OR (   (NOT OpVar_ForceTrim ) AND NOT((  (OpVar_LimitsCategory = 5) AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  ))   )"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "functional.mod.OTP_TRIM_DEVICE_BYTES_REV1";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "1.9V"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            DieRev = Expr { String = "OpVar_DieRev"; }
            Do_Trim = Expr { String = "FALSE"; }
            Device_Bytes = Expr { String = "0x0100"; }
            OTP_Byte = Expr { String = "0x02"; }
            AlreadyLockedTest = evParametricTest {
                Number = Expr { String = "111210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Already_Locked_MIN'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            PassedWriteTest = evParametricTest {
                Number = Expr { String = "111212"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_NOT_APPLICABLE_Write_Successful_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            Byte2Test = evParametricTest {
                Number = Expr { String = "111214"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte2_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            Byte1Test = evParametricTest {
                Number = Expr { String = "111216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Byte1_MIN'"; }
                evLowLimit = Expr { String = "0x00"; }
                evHighLimit = Expr { String = "0x00"; }
            }
            OTPByteTest = evParametricTest {
                Number = Expr { String = "111218"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_OTPByte_MIN'"; }
                evLowLimit = Expr { String = "0x02"; }
                evHighLimit = Expr { String = "0x02"; }
            }
            DevByteTest = evParametricTest {
                Number = Expr { String = "111220"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'OTP_Device_Byte_Post_MIN'"; }
                evLowLimit = Expr { String = "0x01"; }
                evHighLimit = Expr { String = "0x01"; }
            }
            HDMI_1X_LOCK = evParametricTest {
                Number = Expr { String = "111222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            GMSL_1X_LOCK = evParametricTest {
                Number = Expr { String = "111224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_OTP_LOCK_STATUS_MIN'"; }
                evLowLimit = Expr { String = "8"; }
                evHighLimit = Expr { String = "8"; }
            }
            WS_markerLSB = evParametricTest {
                Number = Expr { String = "111226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            WS_markerMSB = evParametricTest {
                Number = Expr { String = "111228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WS_INFO_MARKER_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            X_coor = evParametricTest {
                Number = Expr { String = "111230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'X_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Y_coor = evParametricTest {
                Number = Expr { String = "111232"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'Y_COORD'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            Wafer = evParametricTest {
                Number = Expr { String = "111234"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'WAFER_ID'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "222"; }
            }
            Lot123 = evParametricTest {
                Number = Expr { String = "111236"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_1_2_3'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot456 = evParametricTest {
                Number = Expr { String = "111238"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_4_5_6'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            Lot789 = evParametricTest {
                Number = Expr { String = "111240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'LOT_ID_ASCII_CHARS_7_8_9'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFFFF"; }
            }
            DevByteDoneTest = evParametricTest {
                Number = Expr { String = "111242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_DONE'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            DevBytePassTest = evParametricTest {
                Number = Expr { String = "111244"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_DEVICE_BYTE_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWriteDoneTest = evParametricTest {
                Number = Expr { String = "111246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_DONE_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            CRCWritePassTest = evParametricTest {
                Number = Expr { String = "111248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_CRC_WRITE_PASS_CHECK'"; }
                evLowLimit = Expr { String = "-999"; }
                evHighLimit = Expr { String = "999"; }
            }
            GmslCRCLowerTest = evParametricTest {
                Number = Expr { String = "111250"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            GmslCRCUpperTest = evParametricTest {
                Number = Expr { String = "111252"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_GMSL_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCLowerTest = evParametricTest {
                Number = Expr { String = "111254"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_LSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            HdmiCRCUpperTest = evParametricTest {
                Number = Expr { String = "111256"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'DONT_CARE_HDMI_INITIAL_WRITTEN_CRC_VALUE_MSB'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "0xFFFF"; }
            }
            CrcGmslTest = evParametricTest {
                Number = Expr { String = "111258"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
            CrcHdmiTest = evParametricTest {
                Number = Expr { String = "111260"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_CRC_KEY_CHECK_MIN'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "1"; }
            }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP  AND NOT(OpVar_IME_qual)"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.CheckKSVBytes";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            uart_i2c = Expr { String = "'i2c'"; }
            TestKSVonesHDMI = evParametricTest {
                Number = Expr { String = "21"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
            TestKSVonesGMSL_A = evParametricTest {
                Number = Expr { String = "22"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
        }
    }
}
SubFlow OTP_HDCP_TRIM {
    Node[1] =     FlowNode_  {
        XCoord = (1698,249);
        Port[0] {
            UIFPort = 160;
        }
        UIFInfo = 266;
        TestId = "";
        PortSelect = "0";
        PortNumber = 0;
    }
    Node[3] =     FlowNode_  {
        XCoord = (328,143);
        Port[0] {
            To = 9;
            UIFPort = 84;
        }
        Port[1] {
            To = 21;
            UIFPort = 189;
        }
        UIFInfo = 276;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "7e+08";
        Exec = OTP_TRIM_HDCP;
    }
    Node[4] =     FlowNode_  {
        XCoord = (1146,2);
        Port[0] {
            To = 24;
            UIFPort = 57;
        }
        Port[1] {
            To = 13;
            UIFPort = 128;
        }
        UIFInfo = 311;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "7.5e+08";
        Exec = IME_OTP;
    }
    Node[8] =     FlowNode_  {
        XCoord = (54,80);
        Port[0] {
            To = 22;
            UIFPort = 20;
        }
        Port[1] {
            To = 9;
            UIFPort = 71;
        }
        Port[2] {
            To = 3;
            UIFPort = 117;
        }
        UIFInfo = 0;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "16000000";
        Exec = OTP_FLOW;
    }
    Node[9] =     FlowNode_  {
        XCoord = (657,93);
        Port[0] {
            To = 17;
            UIFPort = 51;
        }
        Port[1] {
            To = 12;
            UIFPort = 69;
        }
        Port[2] {
            To = 16;
            UIFPort = 91;
        }
        Port[3] {
            To = 10;
            UIFPort = 129;
        }
        Port[4] {
            To = 18;
            UIFPort = 146;
        }
        Port[5] {
            To = 19;
            UIFPort = 166;
        }
        Port[6] {
            To = 11;
            UIFPort = 186;
        }
        Port[7] {
            To = 20;
            UIFPort = 204;
        }
        Port[8] {
            To = 21;
            UIFPort = 223;
        }
        Port[9] {
            To = 15;
            UIFPort = 240;
        }
        Port[10] {
            To = 21;
            UIFPort = 260;
        }
        UIFInfo = 306;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "20000000";
        Exec = SPEED_GRADE_FLOW;
    }
    Node[10] =     FlowNode_  {
        XCoord = (1149,352);
        Port[0] {
            To = 1;
            UIFPort = 58;
        }
        Port[1] {
            To = 13;
            UIFPort = 97;
        }
        UIFInfo = 287;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.3e+08";
        Exec = TrimDeviceBytes_MAX96751F;
    }
    Node[11] =     FlowNode_  {
        XCoord = (1146,611);
        Port[0] {
            To = 1;
            UIFPort = 52;
        }
        Port[1] {
            To = 13;
            UIFPort = 77;
        }
        UIFInfo = 274;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.6e+08";
        Exec = TrimDeviceBytes_MAX96753F;
    }
    Node[12] =     FlowNode_  {
        XCoord = (1148,178);
        Port[0] {
            To = 1;
            UIFPort = 59;
        }
        Port[1] {
            To = 13;
            UIFPort = 101;
        }
        UIFInfo = 265;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.1e+08";
        Exec = TrimDeviceBytes_MAX96743R;
    }
    Node[13] =     FlowNode_  {
        XCoord = (1582,806);
        UIFInfo = 271;
        TestId = "";
        Exec = Binning_Error;
    }
    Node[15] =     FlowNode_  {
        XCoord = (1149,888);
        Port[0] {
            To = 1;
            UIFPort = 65;
        }
        Port[1] {
            To = 13;
            UIFPort = 180;
        }
        UIFInfo = 279;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.9e+08";
        Exec = TrimDeviceBytes_MAX96779;
    }
    Node[16] =     FlowNode_  {
        XCoord = (1147,264);
        Port[0] {
            To = 1;
            UIFPort = 72;
        }
        Port[1] {
            To = 13;
            UIFPort = 97;
        }
        UIFInfo = 307;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.2e+08";
        Exec = TrimDeviceBytes_MAX96751;
    }
    Node[17] =     FlowNode_  {
        XCoord = (1147,90);
        Port[0] {
            To = 1;
            UIFPort = 74;
        }
        Port[1] {
            To = 13;
            UIFPort = 101;
        }
        UIFInfo = 264;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6e+08";
        Exec = TrimDeviceBytes_MAX96741R;
    }
    Node[18] =     FlowNode_  {
        XCoord = (1146,439);
        Port[0] {
            To = 1;
            UIFPort = 65;
        }
        Port[1] {
            To = 13;
            UIFPort = 101;
        }
        UIFInfo = 277;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.4e+08";
        Exec = TrimDeviceBytes_MAX96751H;
    }
    Node[19] =     FlowNode_  {
        XCoord = (1145,523);
        Port[0] {
            To = 1;
            UIFPort = 64;
        }
        Port[1] {
            To = 13;
            UIFPort = 101;
        }
        UIFInfo = 302;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.5e+08";
        Exec = TrimDeviceBytes_MAX96753;
    }
    Node[20] =     FlowNode_  {
        XCoord = (1147,705);
        Port[0] {
            To = 1;
            UIFPort = 94;
        }
        Port[1] {
            To = 13;
            UIFPort = 131;
        }
        UIFInfo = 301;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "6.7e+08";
        Exec = TrimDeviceBytes_MAX96753H;
    }
    Node[21] =     FlowNode_  {
        XCoord = (319,307);
        UIFInfo = 2;
        TestId = "";
        Exec = Binning_Error;
    }
    Node[22] =     FlowNode_  {
        XCoord = (934,6);
        Port[0] {
            To = 4;
            UIFPort = 54;
        }
        Port[1] {
            To = 23;
            UIFPort = 92;
        }
        UIFInfo = 303;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "7.5e+08";
        Exec = TempCheckPreTrim;
    }
    Node[23] =     FlowNode_  {
        XCoord = (1042,79);
        UIFInfo = 2;
        TestId = "";
        Exec = Binning_Error;
    }
    Node[24] =     FlowNode_  {
        XCoord = (1301,2);
        Port[0] {
            To = 1;
            UIFPort = 85;
        }
        Port[1] {
            To = 13;
            UIFPort = 180;
        }
        UIFInfo = 303;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "7.5e+08";
        Exec = TempCheckPreVideo;
    }
    Node[25] =     FlowNode_  {
        XCoord = (1552,9);
        Port[0] {
            UIFPort = 160;
        }
        Port[1] {
            UIFPort = 180;
        }
        UIFInfo = 274;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_100KHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            Timing_Spec = Expr { String = "Timing_Spec.Normal_timing"; }
        }
        TestId = "7.9e+08";
        Exec = CheckRestrictions_MAX96743R;
    }
    StartState = 8;
    Background {
        String = "Select IME, non-HDCP,";
        Data = (0,0,9,165,0,0,23,0,0,6,0,0,1,0,0,0);
    }
    Background {
        String = "Select device byte personalization";
        Data = (0,0,521,56,0,0,23,0,0,6,0,0,1,0,0,0);
    }
    Background {
        String = "Write HDCP Keys";
        Data = (0,0,329,125,0,0,23,0,0,6,0,0,1,0,0,0);
    }
    Background {
        String = "by part number";
        Data = (0,0,570,71,0,0,23,0,0,6,0,0,1,0,0,0);
    }
    Background {
        String = "non-HDCP product";
        Data = (0,0,173,88,0,0,23,0,0,6,0,0,1,0,0,0);
    }
    Background {
        String = "IME lot";
        Data = (0,0,179,18,0,0,23,0,0,6,0,0,1,0,0,0);
    }
    Background {
        String = "or HDCP";
        Data = (0,0,50,184,0,0,23,0,0,6,0,0,1,0,0,0);
    }
    Background {
        String = "HDCP product";
        Data = (0,0,178,133,0,0,23,0,0,6,0,0,1,0,0,0);
    }
}
SubFlow UART_I2C_SPI {
    Node[0] =     FlowNode_  {
        XCoord = (182,152);
        Port[0] {
            To = 2;
            UIFPort = 123;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "1.9e+08";
        Exec = SerDesMainUart;
    }
    Node[1] =     FlowNode_  {
        XCoord = (1316,357);
        Port[0] {
            UIFPort = 160;
        }
        UIFInfo = 0;
        TestId = "";
        PortSelect = "0";
        PortNumber = 0;
    }
    Node[2] =     FlowNode_  {
        XCoord = (303,146);
        Port[0] {
            To = 4;
            UIFPort = 109;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "1.9e+08";
        Exec = SerDesI2C;
    }
    Node[3] =     FlowNode_  {
        XCoord = (652,138);
        Port[0] {
            To = 6;
            UIFPort = 85;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "3.4e+08";
        Exec = SerDesI2C_PT;
    }
    Node[4] =     FlowNode_  {
        XCoord = (473,141);
        Port[0] {
            To = 3;
            UIFPort = 90;
        }
        Port[1] {
            To = 5;
            UIFPort = 186;
        }
        UIFInfo = 0;
        SpecPairs {
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
        }
        TestId = "3.3e+08";
        Exec = SerDesUart_PT;
    }
    Node[5] =     FlowNode_  {
        XCoord = (624,420);
        UIFInfo = 14;
        TestId = "";
        Exec = Binning_Error;
    }
    Node[6] =     FlowNode_  {
        XCoord = (876,146);
        Port[0] {
            To = 7;
            UIFPort = 102;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
        }
        TestId = "25000000";
        Exec = SPI_TIMING;
        EVO_Calibration = Focused_VDDH;
    }
    Node[7] =     FlowNode_  {
        XCoord = (1042,149);
        Port[0] {
            To = 1;
            UIFPort = 160;
        }
        Port[1] {
            To = 5;
            UIFPort = 180;
        }
        UIFInfo = 0;
        SpecPairs {
            DC_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Globals_Spec = Expr { String = "Globals_Spec.Globals1"; }
            HDMI_AC = Expr { String = "HDMI_AC.AC_SigDet"; }
            I2C_Spec = Expr { String = "I2C_Spec.I2C_1MHz"; }
            Limits_Spec = Expr { String = "OpVar_LimitsCategory"; }
            Pin_Param_Spec = Expr { String = "Pin_Param_Spec.Test_Params"; }
            RegAccess_Spec = Expr { String = "RegAccess_Spec.UART_1Mbps"; }
        }
        TestId = "2.6e+07";
        Exec = SPI_PT;
    }
    StartState = 0;
}
ETest ATS_tryouts {
    Comment = "USE THIS FOR PRODUCTION ENABLE ON 198MHz AT-SPEED\/IDD TEST, removing backslashes and adding quotes as needed: EnableExpr = Expr \{ String = QUOTE (strcmp(OpVar_ProductUnderTest, \'MAX96751\') = 0)  OR  (strcmp(OpVar_ProductUnderTest, \'MAX96753\') = 0)QUOTE; \}";
    Result = Expr { String = "#"; Mode = Output; }
    Entry[0] = Func_PatSetup;
    PortExpr[0] = Expr { String = ".Result = tm_rslt:PASS OR NOT TestProgData.evFastBinning"; }
    PortExpr[1] = Expr { String = "TRUE"; }
    evBlock[0] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP  AND NOT(OpVar_IME_qual)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDCP.mod.CheckKSVBytes";
            Vdd = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            uart_i2c = Expr { String = "'i2c'"; }
            TestKSVonesHDMI = evParametricTest {
                Number = Expr { String = "21"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'HDMI_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
            TestKSVonesGMSL_A = evParametricTest {
                Number = Expr { String = "22"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = OTPTrimFail;
                evTestText = Expr { String = "'GMSL_KSV_ONES_COUNT_MAX'"; }
                evLowLimit = Expr { String = "20"; }
                evHighLimit = Expr { String = "20"; }
            }
        }
    }
    evBlock[1] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "2"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "3"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "4"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_PRE_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[2] = {
        EnableExpr = Expr { String = "TRUE OR    (OpVar_HDCP  AND (strcmp(OpVar_TestTemp, 'HOT') = 0)  AND NOT OpVar_IME_qual)"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "100"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "2500"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "OpVar_HDCP"; }
            HDMIHDCP = Expr { String = "TRUE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "193MHz"; }
                evHighLimit = Expr { String = "203MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "96MHz"; }
                evHighLimit = Expr { String = "102MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_Link_HDCP_Result_6G_187p5M_AB_STP_HDCP_Min'"; }
                evLowLimit = Expr { String = "16"; }
                evHighLimit = Expr { String = "16"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Number = Expr { String = "206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_HDCP_Result_6G_187p5M_AB_STP_HDCP_Min'"; }
                evLowLimit = Expr { String = "0x1201"; }
                evHighLimit = Expr { String = "0x1201"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_STP_HDCP_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "240"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_STP_Min'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "245"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_STP_Min'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Number = Expr { String = "246"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_GMSL2_Total_Test_Time_6G_187p5M_AB_STP_Min'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[3] = {
        EnableExpr = Expr { String = "OpVar_HDCP  AND  NOT(strcmp(OpVar_TestTemp, 'HOT') = 0)  AND NOT OpVar_IME_qual"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "100"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "2500"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "OpVar_HDCP"; }
            HDMIHDCP = Expr { String = "TRUE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "193MHz"; }
                evHighLimit = Expr { String = "203MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "96MHz"; }
                evHighLimit = Expr { String = "102MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_198MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_Link_HDCP_Result_6G_187p5M_AB_STP_HDCP_Max'"; }
                evLowLimit = Expr { String = "16"; }
                evHighLimit = Expr { String = "16"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Number = Expr { String = "906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_HDCP_Result_6G_187p5M_AB_STP_HDCP_Max'"; }
                evLowLimit = Expr { String = "0x1201"; }
                evHighLimit = Expr { String = "0x1201"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_STP_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_STP_Max'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "945"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_STP_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Number = Expr { String = "946"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_GMSL2_Total_Test_Time_Time_6G_187p5M_AB_STP_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[4] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "5"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_PRE_HDCP_AB_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "6"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_PRE_HDCP_AB_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "7"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_PRE_HDCP_AB_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "8"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_PRE_HDCP_AB_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[5] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "50"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "193MHz"; }
                evHighLimit = Expr { String = "203MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA_Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-500kHz"; }
                evHighLimit = Expr { String = "203MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "978"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1843901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181843901.Min"; }
                evHighLimit = Expr { String = "TN181843901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1842901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181842901.Min"; }
                evHighLimit = Expr { String = "TN181842901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1839901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181839901.Min"; }
                evHighLimit = Expr { String = "TN181839901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1844901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181844901.Min"; }
                evHighLimit = Expr { String = "TN181844901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "955"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "956"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "957"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_GMSL2_Total_Test_Time_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[6] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "9"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_POST_HDCP_AB_IDD_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "10"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_POST_HDCP_AB_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "11"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_POST_HDCP_AB_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "12"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_POST_HDCP_AB_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "TRUE"; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[7] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "50"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA_Port_A_oLDI_Frequency_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "979"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1804901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181804901.Min"; }
                evHighLimit = Expr { String = "TN181804901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1803901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181803901.Min"; }
                evHighLimit = Expr { String = "TN181803901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1798901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181798901.Min"; }
                evHighLimit = Expr { String = "TN181798901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1805901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181805901.Min"; }
                evHighLimit = Expr { String = "TN181805901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "965"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "966"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "967"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555936"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555935"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_GMSL2_Total_Test_Time_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[8] = {
        EnableExpr = Expr { String = "TRUE AND OpVar_HDCP"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "50"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499942"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499943"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "980"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1804902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181804901.Min"; }
                evHighLimit = Expr { String = "TN181804901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1803902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181803901.Min"; }
                evHighLimit = Expr { String = "TN181803901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1798902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181798901.Min"; }
                evHighLimit = Expr { String = "TN181798901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1805902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181805901.Min"; }
                evHighLimit = Expr { String = "TN181805901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "986"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "987"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "988"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_GMSL2_Total_Test_Time_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[9] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "50MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "25"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_Link_HDCP_Result_3G_1p5G_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "16"; }
                evHighLimit = Expr { String = "16"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Number = Expr { String = "906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_Result_3G_1p5G_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "0x1201"; }
                evHighLimit = Expr { String = "0x1201"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_3G_1p5G_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "2"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "3"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "4"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "5"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "6"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "7"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "8"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "9"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "10"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "945"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_3G_1p5G_AB_Coax_Min'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_3G_1p5G_AB_Coax_Min'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_GMSL2_Total_Test_Time_3G_1p5G_AB_Coax_Min'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[10] = {
        EnableExpr = Expr { String = "TRUE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "50MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "25"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "3"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_3G_1p5G_AB_dual_link_50MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_Link_HDCP_Result_3G_1p5G_AB_STP_Min'"; }
                evLowLimit = Expr { String = "16"; }
                evHighLimit = Expr { String = "16"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Number = Expr { String = "906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'HDMI_Result_3G_1p5G_AB_STP_Min'"; }
                evLowLimit = Expr { String = "0x1201"; }
                evHighLimit = Expr { String = "0x1201"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_3G_1p5G_AB_STP_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "2"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "3"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "4"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "5"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "6"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "7"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "8"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "9"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "10"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "945"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_3G_1p5G_AB_STP_Min'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_3G_1p5G_AB_STP_Min'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_GMSL2_Total_Test_Time_3G_1p5G_AB_STP_Min'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[11] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            test_HDMI_Freq = evParametricTest {
            }
            test_oLDI_Freq = evParametricTest {
            }
            chanA = evParametricTest {
            }
            chanB = evParametricTest {
            }
            TestHdcpStatus = evParametricTest {
            }
            TestHDMIHdcp = evParametricTest {
            }
            test_Link_status = evParametricTest {
            }
            test_IDDD = evParametricTest {
            }
            test_IDD18 = evParametricTest {
            }
            test_IDD33 = evParametricTest {
            }
            test_IDDA = evParametricTest {
            }
            test_IDDIO = evParametricTest {
            }
            test_IDDIO1p9 = evParametricTest {
            }
            test_IDDIO25 = evParametricTest {
            }
            test_IDDIO25M = evParametricTest {
            }
            test_IDDIO12p5M = evParametricTest {
            }
            test_IDDIO6p25M = evParametricTest {
            }
            HDMI_Init_Test = evParametricTest {
            }
            LinkRetryTest = evParametricTest {
            }
            LinkTimeTest = evParametricTest {
            }
            TotalTestTime = evParametricTest {
            }
        }
    }
    evBlock[12] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499904"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "95MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_100MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "903"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "904"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "905"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "906"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[13] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "25MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "24MHz"; }
                evHighLimit = Expr { String = "26MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "2"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "24MHz"; }
                evHighLimit = Expr { String = "26MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "3"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_25MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_A_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_Min'"; }
            }
        }
    }
    evBlock[14] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "160MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "14"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "155MHz"; }
                evHighLimit = Expr { String = "165MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_160MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "923"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "924"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "925"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "926"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[15] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "16"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499912"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499914"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_150MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "947"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "942"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "943"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "944"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "945"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "946"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[16] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "TN181499203.Min"; }
                evHighLimit = Expr { String = "TN181499203.Max"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499204"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_150MHz_1920_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "202"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "203"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "204"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "205"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "206"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "207"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555201"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Min'"; }
            }
        }
    }
    evBlock[17] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499917"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499918"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "958"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min"; }
                evHighLimit = Expr { String = "TN181849901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min"; }
                evHighLimit = Expr { String = "TN181848901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1850901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1847901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1846901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555915"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555916"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[18] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96741R') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96743R') = 0    OR   strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499922"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499923"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499924"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "968"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_A_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181744901.Min"; }
                evHighLimit = Expr { String = "TN181744901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181742901.Min"; }
                evHighLimit = Expr { String = "TN181742901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "976"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_A_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555920"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555921"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_Max'"; }
            }
        }
    }
    evBlock[19] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751F') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753F') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "970"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_B_Coax_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181744901.Min"; }
                evHighLimit = Expr { String = "TN181744901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181742901.Min"; }
                evHighLimit = Expr { String = "TN181742901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min"; }
                evHighLimit = Expr { String = "TN181850901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_148p5MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "977"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_B_single_link_148p5MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_B_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_B_Coax_Max'"; }
            }
        }
    }
    evBlock[20] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499515"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499516"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499517"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499518"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "228"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1744501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181849901.Min"; }
                evHighLimit = Expr { String = "TN181849901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1742501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181742501.Min"; }
                evHighLimit = Expr { String = "TN181742501.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1769501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181845901.Min"; }
                evHighLimit = Expr { String = "TN181845901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1743501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181743501.Min"; }
                evHighLimit = Expr { String = "TN181743501.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1770501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1740501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_148p5MHz_2880_1p9V_other_VDD_Typ'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "576"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "TN180000576.Min"; }
                evHighLimit = Expr { String = "TN180000576.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "5"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Typ'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Typ'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Typ'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555500"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Typ'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555501"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Typ'"; }
            }
        }
    }
    evBlock[21] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Typ"; }
            VddA = Expr { String = "VDDA.Typ"; }
            Vdd18 = Expr { String = "VDD18.Typ"; }
            Vddio = Expr { String = "VDDIO.Typ"; }
            Vddio25 = Expr { String = "VDDIO25.Typ"; }
            Vdd33 = Expr { String = "VDD33.Typ"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "148.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'STP'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499520"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499521"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "143.5MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499522"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499523"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_AB_STP_dual_link_148p5MHz_2880_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "1499524"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "538"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_STP_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "200"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
            }
            VDDCorner = Expr { String = "5"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555205"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_STP_Typ'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555206"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_STP_Typ'"; }
            }
        }
    }
    evBlock[22] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "150MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_1p5G_AB_dual_link_150MHz_1920x20_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "248"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_HDMI_Link_Result_6G_1p5G_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "244"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "245"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "246"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "247"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_1p5G_AB_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555211"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_1p5G_AB_Coax_Min'"; }
            }
        }
    }
    evBlock[23] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Min'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_198MHz_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_198MHz_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_198MHz_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181843901.Min"; }
                evHighLimit = Expr { String = "TN181843901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181842901.Min"; }
                evHighLimit = Expr { String = "TN181842901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181839901.Min"; }
                evHighLimit = Expr { String = "TN181839901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181844901.Min"; }
                evHighLimit = Expr { String = "TN181844901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181774901.Min"; }
                evHighLimit = Expr { String = "TN181774901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555215"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_198MHz_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555216"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_198MHz_Min'"; }
            }
        }
    }
    evBlock[24] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499925"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499926"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499927"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499928"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "978"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1843901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181843901.Min"; }
                evHighLimit = Expr { String = "TN181843901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1842901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181842901.Min"; }
                evHighLimit = Expr { String = "TN181842901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1839901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181839901.Min"; }
                evHighLimit = Expr { String = "TN181839901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1844901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181844901.Min"; }
                evHighLimit = Expr { String = "TN181844901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_AB_dual_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "955"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "956"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "957"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evLowLimit = Expr { String = "0uA"; }
                evHighLimit = Expr { String = "25mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_198MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[25] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'A'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499929"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "979"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1804901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181804901.Min"; }
                evHighLimit = Expr { String = "TN181804901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1803901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181803901.Min"; }
                evHighLimit = Expr { String = "TN181803901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1798901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181798901.Min"; }
                evHighLimit = Expr { String = "TN181798901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1805901"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181805901.Min"; }
                evHighLimit = Expr { String = "TN181805901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_A_single_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_A_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "965"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "966"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "967"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555935"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555936"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_198MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[26] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'B'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499942"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499943"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "980"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1804902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181804902.Min"; }
                evHighLimit = Expr { String = "TN181804902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1803902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181803902.Min"; }
                evHighLimit = Expr { String = "TN181803902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1798902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181798902.Min"; }
                evHighLimit = Expr { String = "TN181798902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1805902"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDA_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181805902.Min"; }
                evHighLimit = Expr { String = "TN181805902.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773903"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_6G_187p5M_B_single_link_198MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO25_6G_187p5M_B_single_link_198MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "FALSE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "TRUE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "986"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "987"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "988"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555941"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_B_Coax_198MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[27] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "198MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499935"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "197.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499936"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499937"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_A_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499938"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_B_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "988"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Result_6G_187p5M_AB_Coax_198MHz_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1843911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDD_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181849901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1842911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD18_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181848901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1839911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD33_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181845901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "1844911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDA_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181850901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "1774911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "1773911"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_198MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "975"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO25_6G_187p5M_AB_dual_link_198MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "979"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_6G_187p5M_AB_Coax_198MHz_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_6G_187p5M_AB_Coax_198MHz_Max'"; }
            }
        }
    }
    evBlock[28] = {
        EnableExpr = Expr { String = "OpVar_Char"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "TRUE"; }
            HDMIClkFreq = Expr { String = "240MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "300"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Frequency_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "239.5MHz"; }
                evHighLimit = Expr { String = "240.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "301"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-0.5MHz"; }
                evHighLimit = Expr { String = "198.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "302"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_A_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "303"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NA__HDMI_Func_B_DualView_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "100"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Result_6G_187p5M_AB_Coax_240MHz_DualView_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "101"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDD_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181849901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "102"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD18_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181848901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "103"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD33_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181845901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "104"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDA_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181850901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "105"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "106"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_AB_dual_link_240MHz_2880_DualView_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "107"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO25_6G_187p5M_AB_dual_link_240MHz_2880_DualView_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "111"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_6G_187p5M_AB_Coax_240MHz_DualView_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_6G_187p5M_AB_Coax_240MHz_DualView_Max'"; }
            }
        }
    }
    evBlock[29] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)   OR   strcmp(OpVar_ProductUnderTest, 'MAX96751H') = 0   OR   strcmp(OpVar_ProductUnderTest, 'MAX96753H') = 0 "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "104MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "6"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "310"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Frequency_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "103.5MHz"; }
                evHighLimit = Expr { String = "104.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "311"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Port_A_oLDI_Frequency_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "103.5MHz"; }
                evHighLimit = Expr { String = "104.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "312"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_NA__HDMI_Func_A_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "313"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_NA__HDMI_Func_B_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "99"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "110"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Link_Result_6G_187p5M_AB_Coax_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "111"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDD_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181849901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181849901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "112"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDD18_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181848901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181848901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "113"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDD33_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181845901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181845901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "114"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDA_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181850901.Min-1000mA"; }
                evHighLimit = Expr { String = "TN181850901.Max+1000mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "115"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDIO_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "116"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDIO_6G_187p5M_AB_dual_link_104MHz_1920_1p9V'"; }
                evLowLimit = Expr { String = "TN181847901.Min"; }
                evHighLimit = Expr { String = "TN181847901.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "117"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_Dynamic_IDDIO25_6G_187p5M_AB_dual_link_104MHz_1920_Max'"; }
                evLowLimit = Expr { String = "-1mA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_12p5MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDIO_at_6p25MHz_into_100pF_Max'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "5555945"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Link_Time_6G_187p5M_AB_Coax_104MHz_1920_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "5555946"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_NEEDS_DEVELOPMENT_HDMI_Link_Attempts_6G_187p5M_AB_Coax_104MHz_1920_Max'"; }
            }
        }
    }
    evBlock[30] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "2.0"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "105.5MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499930"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Frequency_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "105MHz"; }
                evHighLimit = Expr { String = "106MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499931"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_Port_A_oLDI_Frequency_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1MHz"; }
                evHighLimit = Expr { String = "153.5MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499932"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Func_A_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499933"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'CHAR_HDMI_Func_B_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Result_6G_187p5M_AB_Coax_420MHz_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1849905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDD_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181849905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "1848905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD18_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181848905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "1845905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDD33_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181845905.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDA_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181849905.Min"; }
                evHighLimit = Expr { String = "TN181845906.Max"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDIO = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "TN181845907.Min"; }
                evHighLimit = Expr { String = "TN181845907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO_6G_187p5M_420MHz_2880_1p9V'"; }
                evLowLimit = Expr { String = "TN181845907.Min"; }
                evHighLimit = Expr { String = "TN181845907.Max"; }
                evUnits = Expr { String = "'uA'"; }
            }
            test_IDDIO25 = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'CHAR_Dynamic_IDDIO25_6G_187p5M_420MHz_2880_Max'"; }
                evLowLimit = Expr { String = "-1uA"; }
                evHighLimit = Expr { String = "50mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "999913"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_6G_187p5M_AB_Coax_420MHz_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_6G_187p5M_AB_Coax_420MHz_Max'"; }
            }
        }
    }
    evBlock[31] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIClkFreq = Expr { String = "100MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "20"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "1.5"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499207"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Frequency_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0MHz"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499208"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_Port_A_oLDI_Frequency_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "105MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499209"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Func_A_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499210"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'INFO_HDMI_Func_B_1p5G_1p5G_AB_dual_link_100MHz_1920_Min'"; }
                evLowLimit = Expr { String = "0"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_1p5G_1p5G_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "241"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "242"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "243"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "244"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "245"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "246"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "247"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "251"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Time_1p5G_1p5G_AB_Coax_420MHz_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'CHAR_HDMI_Link_Attempts_1p5G_1p5G_AB_Coax_420MHz_Min'"; }
            }
        }
    }
    evBlock[32] = {
        EnableExpr = Expr { String = "(OpVar_DEBUG_Master)  OR (OpVar_Debug_TempChecks) "; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "dc_tests.mod.TestTemperature";
            Vddc = Expr { String = "VDDC.Max"; }
            Vdda = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            I2C_UART = Expr { String = "'uart'"; }
            IncludeFunc = Expr { String = "FALSE"; }
            GrossFuncTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            DeviceIDTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            TdiodeTest = evParametricTest {
                Number = Expr { String = "11"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_VOLTAGE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543900.Min"; }
                evHighLimit = Expr { String = "TN151543900.Max"; }
                evSimulateValue = Expr { String = "1.5"; }
                evUnits = Expr { String = "'V'"; }
            }
            TmonTest = evParametricTest {
                Number = Expr { String = "12"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_VOLTAGE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543901.Min"; }
                evHighLimit = Expr { String = "TN151543901.Max"; }
                evSimulateValue = Expr { String = "1"; }
                evUnits = Expr { String = "'V'"; }
            }
            TemperatureTest = evParametricTest {
                Number = Expr { String = "13"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TDIODE_TEMPERATURE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min"; }
                evHighLimit = Expr { String = "TN151543902.Max"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TmonTempTest = evParametricTest {
                Number = Expr { String = "14"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = TestTempFail;
                evTestText = Expr { String = "'TMON_TEMPERATURE_POST_ATS_VDDMAX'"; }
                evLowLimit = Expr { String = "TN151543902.Min-10Cel"; }
                evHighLimit = Expr { String = "TN151543902.Max+10Cel"; }
                evSimulateValue = Expr { String = "25"; }
                evUnits = Expr { String = "'C'"; }
            }
            TdiodeVltgTest = evParametricTest {
            }
            VDDCorner = Expr { String = "9"; }
            ForcePowerup = Expr { String = "(OpVar_DEBUG_Master)  OR (OpVar_Debug_TempChecks) "; }
            SleepTDIODE = Expr { String = "FALSE"; }
            SleepWait = Expr { String = "0"; }
        }
    }
    evBlock[33] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Max"; }
            VddA = Expr { String = "VDDA.Max"; }
            Vdd18 = Expr { String = "VDD18.Max"; }
            Vddio = Expr { String = "VDDIO.Max"; }
            Vddio25 = Expr { String = "VDDIO25.Max"; }
            Vdd33 = Expr { String = "VDD33.Max"; }
            HDMIversion = Expr { String = "0"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "300MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499919"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "295MHz"; }
                evHighLimit = Expr { String = "305MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499951"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499952"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499953"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Typ'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "961"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "200mA"; }
                evHighLimit = Expr { String = "650mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "962"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "120mA"; }
                evHighLimit = Expr { String = "250mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "963"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_300MHz_2880_Max'"; }
                evLowLimit = Expr { String = "30mA"; }
                evHighLimit = Expr { String = "100mA"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "964"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "965"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "966"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "967"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "971"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Max'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Max'"; }
            }
        }
    }
    evBlock[34] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func4";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "0"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "300MHz"; }
            PixelCnt = Expr { String = "2880"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "0.1875"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'AB'"; }
            oLDI_splitter = Expr { String = "TRUE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Frequency_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "295MHz"; }
                evHighLimit = Expr { String = "305MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499224"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'Port_A_oLDI_Frequency_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "145MHz"; }
                evHighLimit = Expr { String = "155MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499225"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_A_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499226"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'HDMI_Func_B_6G_187p5M_300MHz_2880_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "1499227"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "999"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'HDMI_Link_Result_6G_187p5M_AB_Coax_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "TRUE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "221"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDDD_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "222"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD18_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "223"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evTestText = Expr { String = "'Dynamic_IDD33_6G_187p5M_300MHz_2880_Min'"; }
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "224"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "225"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "226"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "227"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            UART_I2C = Expr { String = "0"; }
            test_IDDIO25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "230"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Time_6G_187p5M_AB_Coax_Min'"; }
                evUnits = Expr { String = "'ms'"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "231"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'INFO_GMSL2_Link_Attempts_6G_187p5M_AB_Coax_Min'"; }
            }
        }
    }
    evBlock[35] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "999MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Frequency_6G_187p5M_A_single_link_160MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___Port_A_oLDI_Frequency_6G_187p5M_A_single_link_160MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Func_A_6G_187p5M_A_single_link_160MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Func_B_6G_187p5M_A_single_link_160MHz_1920_HDCP_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "905"; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Link_HDCP_Result_6G_187p5M_A_Coax_HDCP_Min'"; }
                evLowLimit = Expr { String = "16"; }
                evHighLimit = Expr { String = "16"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Number = Expr { String = "906"; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_HDCP_Result_6G_187p5M_A_Coax_HDCP_Min'"; }
                evLowLimit = Expr { String = "0x1201"; }
                evHighLimit = Expr { String = "0x1201"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "900"; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Link_Result_6G_187p5M_A_Coax_HDCP_Min'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "2"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "3"; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "4"; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "5"; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "6"; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "7"; }
            }
            VDDCorner = Expr { String = "2"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "8"; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "9"; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "10"; }
            }
            HDMI_Init_Test = evParametricTest {
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "945"; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_Max'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "940"; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Total_Video_Execution_Time_6G_187p5M_A_Coax_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
    evBlock[36] = {
        EnableExpr = Expr { String = "FALSE"; }
        Value = Expr { String = "#"; Mode = Output; }
        Result = Expr { String = "..Value"; }
        evContinueOnFail = Expr { String = "NOT TestProgData.evFastBinning"; }
        TestMethod {
            Name = "HDMI.mod.HDMI_Func5";
            Vdd = Expr { String = "VDDC.Min"; }
            VddA = Expr { String = "VDDA.Min"; }
            Vdd18 = Expr { String = "VDD18.Min"; }
            Vddio = Expr { String = "VDDIO.Min"; }
            Vddio25 = Expr { String = "VDDIO25.Min"; }
            Vdd33 = Expr { String = "VDD33.Min"; }
            HDMIversion = Expr { String = "1.4"; }
            DualView = Expr { String = "FALSE"; }
            HDMIClkFreq = Expr { String = "50MHz"; }
            PixelCnt = Expr { String = "1920"; }
            LineCnt = Expr { String = "12"; }
            SioChannel = Expr { String = "'AB'"; }
            CoaxTp = Expr { String = "'COAX'"; }
            FrFreqGb = Expr { String = "6"; }
            StFreqGb = Expr { String = "1.5"; }
            SpreadSpectrumPPM = Expr { String = "0"; }
            oLDIChannel = Expr { String = "'A'"; }
            oLDI_splitter = Expr { String = "FALSE"; }
            LinkHDCP = Expr { String = "FALSE"; }
            HDMIHDCP = Expr { String = "FALSE"; }
            test_HDMI_Freq = evParametricTest {
                Number = Expr { String = "1499907"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Frequency_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            test_oLDI_Freq = evParametricTest {
                Number = Expr { String = "1499908"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___Port_A_oLDI_Frequency_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "45MHz"; }
                evHighLimit = Expr { String = "55MHz"; }
                evUnits = Expr { String = "'MHz'"; }
            }
            chanA = evParametricTest {
                Number = Expr { String = "1499909"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Func_A_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            chanB = evParametricTest {
                Number = Expr { String = "1499910"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Func_B_6G_187p5M_A_single_link_160MHz_1920_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHdcpStatus = evParametricTest {
                Number = Expr { String = "905"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Link_HDCP_Result_6G_187p5M_A_Coax_HDCP_Max'"; }
                evLowLimit = Expr { String = "16"; }
                evHighLimit = Expr { String = "16"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestHDMIHdcp = evParametricTest {
                Number = Expr { String = "906"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = HDCP_GMSL;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_HDCP_Result_6G_187p5M_A_Coax_HDCP_Max'"; }
                evLowLimit = Expr { String = "0x1201"; }
                evHighLimit = Expr { String = "0x1201"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            test_Link_status = evParametricTest {
                Number = Expr { String = "900"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___HDMI_Link_Result_6G_187p5M_A_Coax_HDCP_Max'"; }
                evLowLimit = Expr { String = "15"; }
                evHighLimit = Expr { String = "15"; }
                evUnits = Expr { String = "'VAL'"; }
            }
            TestIDD = Expr { String = "FALSE"; }
            test_IDDD = evParametricTest {
                Number = Expr { String = "1"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD18 = evParametricTest {
                Number = Expr { String = "2"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDD33 = evParametricTest {
                Number = Expr { String = "3"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = IddHDMIFail;
                evUnits = Expr { String = "'mA'"; }
            }
            test_IDDA = evParametricTest {
                Number = Expr { String = "4"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO = evParametricTest {
                Number = Expr { String = "5"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO1p9 = evParametricTest {
                Number = Expr { String = "6"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO25 = evParametricTest {
                Number = Expr { String = "7"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            VDDCorner = Expr { String = "9"; }
            PowerDownAtEnd = Expr { String = "TRUE"; }
            UART_I2C = Expr { String = "0"; }
            dont_loop = Expr { String = "FALSE"; }
            test_IDDIO25M = evParametricTest {
                Number = Expr { String = "8"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO12p5M = evParametricTest {
                Number = Expr { String = "9"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            test_IDDIO6p25M = evParametricTest {
                Number = Expr { String = "10"; }
                Result = Expr { String = "#"; Mode = Output; }
            }
            HDMI_Init_Test = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_HDMI_Init_Status'"; }
                evLowLimit = Expr { String = "1"; }
                evHighLimit = Expr { String = "1"; }
            }
            LinkRetryTest = evParametricTest {
                Number = Expr { String = "945"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Link_Attempts_6G_187p5M_A_Coax_Max'"; }
            }
            LinkTimeTest = evParametricTest {
                Number = Expr { String = "940"; }
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = GmslLink;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Link_Time_6G_187p5M_A_Coax_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
            TotalTestTime = evParametricTest {
                Result = Expr { String = "#"; Mode = Output; }
                evFailBin = AtSpeedVideoFail;
                evTestText = Expr { String = "'RENAME_ME_AND_SET_CONDITIONS___INFO_GMSL2_Total_Test_Time_6G_187p5M_A_Coax_Max'"; }
                evUnits = Expr { String = "'s'"; }
            }
        }
    }
}
